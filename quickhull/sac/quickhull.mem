~/repos/sac2c/build_wlir/sac2c_d -dcccall -bmem -Xc -Ofast  src/quickhull.sac -o bin/quickhull_seq

/*-----------------------------------------------*/

/*
 *  SAC-Program quickhull.sac :
 */


/* Additional headers for external function declarations */
#include <math.h>


/*
 *  type definitions
 */

external typedef sacprelude_d::SACarg;

external SACarg SACARGcopy( SACarg);
external void SACARGfree( SACarg);

external classtype World::World;
external classtype Terminal::Terminal;
external classtype TermFile::TermFile;
external classtype File::File;
external typealias IOresources::File;
external classtype C99Benchmarking::C99Benchmarking;
external typedef String::string;

external string copy_string( string);
external void free_string( string);

external classtype Interval::Interval;
external typealias C99Benchmarking::Interval;
external classtype MTClock::MTClock;
typedef double[2] ComplexBasics::complex;
typealias ComplexBasics::complex Complex::complex;
external typedef List::list;
external void SAC_List_free_list( list);

typedef int Grey::grey;
typedef int[3] Color8::color;
external typealias Structures::string;


/*
 *  prototypes for externals (FUNDECS)
 */

external enclosed(String::string) String::to_string( char[.] A { ,NN } , int LENGTH { ,NN } )
/*
 *  to_string ::  ---
 */;

external hidden *, hidden * TermFile::printf( hidden *_rso_69_TheTerminal { ,NN } , hidden *_rso_68_stdout { ,NN } , enclosed(String::string) FORMAT { ,NN } , ...)
/*
 *  printf ::  ---
 */;

external hidden * ArrayIO::printarray( hidden *stream { ,NN } , int d { ,NN } , int[.] s { ,NN } , int[*] a { ,NN } )
/*
 *  printarray ::  ---
 */;



/*
 *  prototypes for locals (FUNDEFS)
 */

external /* sticky */
int[.], int[.], int[.], int[.] sacprelude_d::partitionSlicer( int[*] min { ,NN } , int[*] max { ,NN } , int[*] axis { ,NN } , int[*] lb { ,NN } , int[*] ub { ,NN } )
/*
 *  partitionSlicer ::  ---
 */;

external /* sticky */
int[.] sacprelude_d::partitionIntersectMax( int[*] PWLbound1 { ,NN } , int[*] ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */;

external /* sticky */
bool[.] sacprelude_d::isPartitionIntersectNull( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */;

external /* sticky */
int[.] sacprelude_d::partitionIntersectMin( int[*] PWLbound2 { ,NN } , int[*] ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */;

external /* sticky */
int[*] sacprelude_d::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int sacprelude_d::prod( int[*] v { ,NN } )
/*
 *  prod ::  ---
 */;

external /* sticky */
int[*] sacprelude_d::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( float[*] A { ,NN } , float[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( double[*] A { ,NN } , double[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( bool[*] A { ,NN } , bool[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( char[*] A { ,NN } , char[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( byte[*] A { ,NN } , byte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( short[*] A { ,NN } , short[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( long[*] A { ,NN } , long[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( longlong[*] A { ,NN } , longlong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( ubyte[*] A { ,NN } , ubyte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( ushort[*] A { ,NN } , ushort[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( uint[*] A { ,NN } , uint[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( ulong[*] A { ,NN } , ulong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_d::eq( ulonglong[*] A { ,NN } , ulonglong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
int[.], int[.], int[.] sacprelude_d::gridFiller( int[*] lb { ,NN } , int[*] ub { ,NN } , int[*] wdth { ,NN } , int[*] dim { ,NN } , int[*] maxwidth { ,NN } )
/*
 *  gridFiller ::  ---
 */;

external /* sticky */
bool[.] sacprelude_d::isPartitionIntersect1Part( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */;

external /* sticky */
int sacprelude_d::partitionMax( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMax ::  ---
 */;

external /* sticky */
int sacprelude_d::partitionMin( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMin ::  ---
 */;

external /* sticky */
int sacprelude_d::++( int[*] a { ,NN } )
/*
 *  ++ ::  ---
 */;

external /* sticky */
int[*] sacprelude_d::sel( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
float[*] sacprelude_d::sel( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
double[*] sacprelude_d::sel( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
bool[*] sacprelude_d::sel( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
char[*] sacprelude_d::sel( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
byte[*] sacprelude_d::sel( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
short[*] sacprelude_d::sel( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
long[*] sacprelude_d::sel( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_d::sel( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_d::sel( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_d::sel( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
uint[*] sacprelude_d::sel( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_d::sel( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_d::sel( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external hidden * World:_INIT::init_TheWorld( hidden *_OI_object { ,NN } )
/*
 *  init_TheWorld ::  ---
 */;

external hidden *, hidden * Terminal:_INIT::init_TheTerminal( hidden *_rso_5_TheWorld { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_TheTerminal ::  ---
 */;

external hidden *, hidden * TermFile:_INIT::init_stdin( hidden *_rso_44_TheTerminal { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_stdin ::  ---
 */;

external hidden *, double[*] FibreIO::FibreScanDoubleArray( hidden *_rso_823_stdin { ,NN } )
/*
 *  FibreScanDoubleArray ::  ---
 */;

external hidden *, hidden * C99Benchmarking:_INIT::init_TheBenchmarkObject( hidden *_rso_1027_TheWorld { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_TheBenchmarkObject ::  ---
 */;

external hidden *, hidden * C99Benchmarking::getInterval( hidden *_rso_1029_TheBenchmarkObject { ,NN } , enclosed(String::string) interval_name { ,NN } , int interval_number { ,NN } )
/*
 *  getInterval ::  ---
 */;

external hidden *, hidden * MTClock:_INIT::init_TheMTClock( hidden *_rso_6_TheWorld { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_TheMTClock ::  ---
 */;

external hidden *, hidden *, hidden * C99Benchmarking::start( hidden *_rso_1034_TheBenchmarkObject { ,NN } , hidden *_rso_1033_TheMTClock { ,NN } , hidden *interval { ,NN } )
/*
 *  start ::  ---
 */;

external hidden *, hidden *, hidden * C99Benchmarking::end( hidden *_rso_1036_TheBenchmarkObject { ,NN } , hidden *_rso_1035_TheMTClock { ,NN } , hidden *interval { ,NN } )
/*
 *  end ::  ---
 */;

external hidden *, hidden * TermFile:_INIT::init_stdout( hidden *_rso_43_TheTerminal { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_stdout ::  ---
 */;

external hidden *, hidden *, double, enclosed(String::string) C99Benchmarking::returnResultUnit( hidden *_rso_1037_TheBenchmarkObject { ,NN } , hidden *int1 { ,NN } )
/*
 *  returnResultUnit ::  ---
 */;

external /* sticky */
int[*] sacprelude_d::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int[*] sacprelude_d::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } , int[.] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
int sacprelude_d::++( int a { ,NN } )
/*
 *  ++ ::  ---
 */;



/*
 *  global objects
 */

external hidden World::TheWorld;

external hidden Terminal::TheTerminal;

external hidden TermFile::stdin;

external hidden C99Benchmarking::TheBenchmarkObject;

external hidden MTClock::TheMTClock;

external hidden TermFile::stdout;



/*
 *  function definitions (FUNDEFS)
 */



/****************************************************************************
 * Wrapper function:
 * _MAIN::main(...) [ wrapper ]
 ****************************************************************************/
hidden *, hidden *, hidden *, hidden *, hidden *, hidden *, int{0} _MAIN::main( hidden *_rso_655_stdin { ,NN } , hidden *_rso_654_TheBenchmarkObject { ,NN } , hidden *_rso_653_TheMTClock { ,NN } , hidden *_rso_652_TheTerminal { ,NN } , hidden *_rso_651_stdout { ,NN } , hidden *_rso_650_TheWorld { ,NN } )
/*
 *  main ::  ---
 */
{ 
  hidden _cwc_1013 { , NN } ; 
  hidden _cwc_1012 { , NN } ; 
  hidden _cwc_1011 { , NN } ; 
  hidden _cwc_1010 { , NN } ; 
  hidden _cwc_1009 { , NN } ; 
  hidden _cwc_1008 { , NN } ; 
  int{0} _cwc_1007 { , NN } ; 

  _cwc_1013, _cwc_1012, _cwc_1011, _cwc_1010, _cwc_1009, _cwc_1008, _cwc_1007 = _MAIN::main( _rso_655_stdin, _rso_654_TheBenchmarkObject, _rso_653_TheMTClock, _rso_652_TheTerminal, _rso_651_stdout, _rso_650_TheWorld) ; 
  return( _cwc_1013, _cwc_1012, _cwc_1011, _cwc_1010, _cwc_1009, _cwc_1008, _cwc_1007); 
}



/****************************************************************************
 * Wrapper function:
 * _MAIN::QuickHull(...) [ wrapper ]
 ****************************************************************************/
double[.,.] _MAIN::QuickHull( double[*] P { ,NN } )
/*
 *  QuickHull ::  ---
 */
{ 
  int _emal_51736__cwc_1015 { , NN } ; 
  bool _emal_51735__cwc_1030 { , NN } ; 
  double[.,.] _cwc_1014 { , NN } ; 
  bool _cwc_1030 { , NN } ; 
  int _cwc_1015 { , NN } ; 

  _emal_51736__cwc_1015 = _alloc_( 1, 0, [:int]); 
  _cwc_1015 = _fill_( _dim_A_( P), _emal_51736__cwc_1015); 
  _emal_51735__cwc_1030 = _alloc_( 1, 0, [:int]); 
  _cwc_1030 = _fill_( _eq_SxS_( _cwc_1015, 2), _emal_51735__cwc_1030); 
  _free_( _cwc_1015); 
  _cwc_1014 = _MAIN::QuickHull__Cond_87( _cwc_1030, P) ; 
  return( _cwc_1014); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::QuickHull__Cond_87(...) [ body ]
 ****************************************************************************/
double[.,.] _MAIN::QuickHull__Cond_87( bool _cwc_1030 { ,NN } , double[*] P { ,NN } )
/*
 *  QuickHull__Cond_87 ::  ---
 */
{ 
  int[.] _emal_51744__cwc_1016 { , NN } ; 
  int _emal_51743__ivesli_47939 { , NN } ; 
  int _emal_51742__cwc_1020 { , NN } ; 
  bool _emal_51741__cwc_1022 { , NN } ; 
  int _emal_51740__ivesli_47937 { , NN } ; 
  int _emal_51739__cwc_1025 { , NN } ; 
  bool _emal_51738__cwc_1027 { , NN } ; 
  bool _emal_51737__cwc_1028 { , NN } ; 
  int _ivesli_47939 { , NN } ; 
  int _ivesli_47937 { , NN } ; 
  double[.,.] _cwc_1014__SSA1_2 { , NN } ; 
  double[.,.] _cwc_1014__SSA1_1 { , NN } ; 
  int[.] _cwc_1016 { , NN } ; 
  int _cwc_1020 { , NN } ; 
  bool _cwc_1022 { , NN } ; 
  int _cwc_1025 { , NN } ; 
  bool _cwc_1027 { , NN } ; 
  bool _cwc_1028 { , NN } ; 
  double[.,.] _cwc_1014 { , NN } ; 

  if (_cwc_1030) 
  { 
    _free_( _cwc_1030); 
    _emal_51744__cwc_1016 = _alloc_( 1, 1, _shape_A_( _shape_A_( P))); 
    _cwc_1016 = _fill_( _shape_A_( P), _emal_51744__cwc_1016); 
    _emal_51743__ivesli_47939 = _alloc_( 1, 0, [:int]); 
    _ivesli_47939 = _fill_( 0, _emal_51743__ivesli_47939); 
    _emal_51742__cwc_1020 = _alloc_( 1, 0, [:int]); 
    _cwc_1020 = _fill_( _idx_sel_( _ivesli_47939, _cwc_1016), _emal_51742__cwc_1020); 
    _free_( _ivesli_47939); 
    _emal_51741__cwc_1022 = _alloc_( 1, 0, [:int]); 
    _cwc_1022 = _fill_( _eq_SxS_( _cwc_1020, 1000000), _emal_51741__cwc_1022); 
    _free_( _cwc_1020); 
    _emal_51740__ivesli_47937 = _alloc_( 1, 0, [:int]); 
    _ivesli_47937 = _fill_( 1, _emal_51740__ivesli_47937); 
    _emal_51739__cwc_1025 = _alloc_( 1, 0, [:int]); 
    _cwc_1025 = _fill_( _idx_sel_( _ivesli_47937, _cwc_1016), _emal_51739__cwc_1025); 
    _free_( _cwc_1016); 
    _free_( _ivesli_47937); 
    _emal_51738__cwc_1027 = _alloc_( 1, 0, [:int]); 
    _cwc_1027 = _fill_( _eq_SxS_( _cwc_1025, 2), _emal_51738__cwc_1027); 
    _free_( _cwc_1025); 
    _cwc_1028 = _fill_( _and_SxS_( _cwc_1027, _cwc_1022), _cwc_1027); 
    _free_( _cwc_1022); 
    _cwc_1014 = _MAIN::_dup_2101_QuickHull__Cond_86( _cwc_1028, P) ; 
  }
  else
  { 
    _free_( _cwc_1030); 
    _cwc_1014__SSA1_1 = _dispatch_error_( 1, double[.,.], "_MAIN::QuickHull :: double[*] -> double[.,.] ", P); 
  }
  _cwc_1014__SSA1_2 = ( _cwc_1030 ? _cwc_1014 : _cwc_1014__SSA1_1 ); 
  return( _cwc_1014__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_2101_QuickHull__Cond_86(...) [ body ]
 ****************************************************************************/
double[.,.] _MAIN::_dup_2101_QuickHull__Cond_86( bool _cwc_1028 { ,NN } , double[*] P { ,NN } )
/*
 *  _dup_2101_QuickHull__Cond_86 ::  ---
 */
{ 
  double[.,.] _cwc_1014__SSA1_2 { , NN } ; 
  double[.,.] _cwc_1014__SSA1_1 { , NN } ; 
  double[.,.] _cwc_1017 { , NN } ; 

  if (_cwc_1028) 
  { 
    _free_( _cwc_1028); 
    _cwc_1017 = _MAIN::QuickHull( P) ; 
  }
  else
  { 
    _free_( _cwc_1028); 
    _cwc_1014__SSA1_1 = _dispatch_error_( 1, double[.,.], "_MAIN::QuickHull :: double[*] -> double[.,.] ", P); 
  }
  _cwc_1014__SSA1_2 = ( _cwc_1028 ? _cwc_1017 : _cwc_1014__SSA1_1 ); 
  return( _cwc_1014__SSA1_2); 
}



/****************************************************************************
 * _MAIN::QuickHull(...) [ body ]
 ****************************************************************************/
double[.,.] _MAIN::QuickHull( double[1000000,2] P { ,NN } )
/*
 *  QuickHull ::  ---
 */
{ 
  bool _emrb_55747_val { , NN } ; 
  bool _emrb_55746_mem { , NN } ; 
  double _emal_51820__flat_165 { , NN } ; 
  int _emal_51819__pinl_4659__wlbsc_2862_sc_e { , NN } ; 
  int _emal_51818__wlsimp_6605 { , NN } ; 
  int _emal_51817_i { , NN } ; 
  int _emal_51816__dlirmov_51599__iveras_51403 { , NN } ; 
  int _emal_51815__dlirmov_51600__iveras_51404 { , NN } ; 
  double[2] _emal_51814__wlur_7448 { , NN } ; 
  int _emal_51813__iveras_51390 { , NN } ; 
  double _emal_51811__pinl_4846__flat_149 { , NN } ; 
  int _emal_51810__iveras_51391 { , NN } ; 
  double _emal_51808__pinl_4846__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51807_p__SSA3_2 { , NN } ; 
  int _emal_51806__iveras_51392 { , NN } ; 
  double _emal_51804__pinl_4859__flat_149 { , NN } ; 
  int _emal_51803__iveras_51393 { , NN } ; 
  double _emal_51801__pinl_4859__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51800_q__SSA3_2 { , NN } ; 
  int _emal_51799__wlsimp_6597 { , NN } ; 
  double{0.0...} _emal_51798_val { , NN } ; 
  double _emal_51797_val { , NN } ; 
  double _emal_51796_val { , NN } ; 
  double[1000000,2] _emal_51795_hull__SSA0_1 { , NN } ; 
  double _emal_51794__pinl_4924_max { , NN } ; 
  int{0} _emal_51793_val { , NN } ; 
  int[64] _emal_51792__pinl_4928_offsetsl { , NN } ; 
  int _emal_51791__ctz_7542 { , NN } ; 
  bool _emal_51790__pinl_4944__flat_197 { , NN } ; 
  int _emal_51789__ctz_7540 { , NN } ; 
  bool _emal_51788__pinl_5600__flat_195 { , NN } ; 
  int _emal_51787__pinl_4989__flat_40 { , NN } ; 
  int _emal_51786__uprf_7356 { , NN } ; 
  int _emal_51785__pinl_5668_z { , NN } ; 
  int _emal_51784__esd_11641 { , NN } ; 
  double[1000000,2] _emal_51778_hull__SSA0_3 { , NN } ; 
  int _emal_51777__pinl_5059__flat_41 { , NN } ; 
  int _emal_51776__al_8540 { , NN } ; 
  bool _emal_51775__pinl_5045__flat_198 { , NN } ; 
  int _emal_51774__ctz_7536 { , NN } ; 
  bool _emal_51773__pinl_5044__flat_197 { , NN } ; 
  int _emal_51772__pinl_5089__flat_40 { , NN } ; 
  int _emal_51771__ctz_7534 { , NN } ; 
  bool _emal_51770__pinl_5267__flat_195 { , NN } ; 
  bool _emal_51763__pinl_8504__flat_338 { , NN } ; 
  int _emal_51762__pinl_8512_val__SSA0_3 { , NN } ; 
  int _emal_51761__pinl_8503__flat_342 { , NN } ; 
  int _emal_51759__pinl_8515_val__SSA0_5 { , NN } ; 
  int _emal_51757__uprf_7342 { , NN } ; 
  int _emal_51755__pinl_6068_z { , NN } ; 
  int _emal_51752__iveras_51394 { , NN } ; 
  double{0.0...} _emal_51750_val { , NN } ; 
  double _emal_51749_val { , NN } ; 
  int _emal_51748__ivesli_47945 { , NN } ; 
  double _emal_51746__pinl_5344__flat_353 { , NN } ; 
  double[.,.] _emal_51745__pinl_5345_res { , NN } ; 
  int _dlirmov_51600__iveras_51404 { , NN } ; 
  int _dlirmov_51599__iveras_51403 { , NN } ; 
  int _iveras_51394 { , NN } ; 
  int _iveras_51393 { , NN } ; 
  int _iveras_51392 { , NN } ; 
  int _iveras_51391 { , NN } ; 
  int _iveras_51390 { , NN } ; 
  int _ivesli_47955 { , NN } ; 
  int _ivesli_47953 { , NN } ; 
  int _ivesli_47951 { , NN } ; 
  int _ivesli_47949 { , NN } ; 
  int _ivesli_47946 { , NN } ; 
  int _ivesli_47945 { , NN } ; 
  int _ivesli_47943 { , NN } ; 
  int _ivesli_47941 { , NN } ; 
  int _ivesli_47940 { , NN } ; 
  int _wlidx_47861__pinl_5345_res { , NN } ; 
  int _wlidx_47860_hull__SSA0_3 { , NN } ; 
  int _wlidx_47859__pinl_4928_offsetsl { , NN } ; 
  int _wlidx_47858_hull__SSA0_1 { , NN } ; 
  int _esd_11641 { , NN } ; 
  int[2] _wlsb_10921 { , NN } ; 
  int _pinl_10747_right__SSA0_1 { , NN } ; 
  int _pinl_10746_left__SSA0_1 { , NN } ; 
  int _eat_10342 { , NN } ; 
  int _al_8540 { , NN } ; 
  int _pinl_8524__esd_8125 { , NN } ; 
  int _pinl_8515_val__SSA0_5 { , NN } ; 
  int _pinl_8514_val__SSA0_4 { , NN } ; 
  int _pinl_8512_val__SSA0_3 { , NN } ; 
  int _pinl_8511_val__SSA0_2 { , NN } ; 
  int _pinl_8510_val__SSA0_1 { , NN } ; 
  bool _pinl_8504__flat_338 { , NN } ; 
  int _pinl_8503__flat_342 { , NN } ; 
  int _ctz_7542 { , NN } ; 
  int _ctz_7540 { , NN } ; 
  int _ctz_7536 { , NN } ; 
  int _ctz_7534 { , NN } ; 
  double[2] q__SSA3_2 { , NN } ; 
  double _pinl_4859__flat_149__SSA3_2 { , NN } ; 
  double[2] p__SSA3_2 { , NN } ; 
  double _pinl_4846__flat_149__SSA3_2 { , NN } ; 
  double[2]{0.0...} _wlur_7448 { , NN } ; 
  int _uprf_7356 { , NN } ; 
  int _uprf_7350 { , NN } ; 
  int _uprf_7342 { , NN } ; 
  int _uprf_7332 { , NN } ; 
  int{0} _wlsimp_6605 { , NN } ; 
  int{999...} _wlsimp_6597 { , NN } ; 
  double[1000000,2] _pinl_6477_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_6476_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_6475_r__SSA0_1 { , NN } ;  /* declared: int */
  double _pinl_6474_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6473_argmax__SSA0_1 { , NN } ; 
  bool _pinl_5600__flat_195 { , NN } ; 
  double[1000000,2] _pinl_5599_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_5598_hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5596_count { , NN } ;  /* declared: int */
  int _pinl_5668_z { , NN } ; 
  int _pinl_6068_z { , NN } ; 
  int{100...} _pinl_4659__wlbsc_2862_sc_e { , NN } ; 
  double _pinl_4846__flat_149 { , NN } ; 
  double _pinl_4859__flat_149 { , NN } ; 
  int _pinl_4894__eat_761 { , NN } ; 
  int _pinl_4951__eat_764 { , NN } ; 
  int[1] _pinl_4950_iv { , NN } ; 
  bool _pinl_4944__flat_197 { , NN } ; 
  double[1000000,2] _pinl_4943_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_4942_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_4941_argmax__SSA0_2 { , NN } ; 
  int[64] _pinl_4928_offsetsl { , NN } ; 
  double{-17...} _pinl_4924_max { , NN } ; 
  int _pinl_4989__flat_40 { , NN } ; 
  int _pinl_5059__flat_41 { , NN } ; 
  bool _pinl_5045__flat_198 { , NN } ; 
  bool _pinl_5044__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5043_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5042_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5041_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5040_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5039_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5038_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5037_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5036_argmax__SSA0_1 { , NN } ; 
  int _pinl_5089__flat_40 { , NN } ; 
  bool _pinl_5267__flat_195 { , NN } ; 
  double[1000000,2] _pinl_5265_hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5263_count { , NN } ;  /* declared: int */
  int _pinl_5327__flat_40 { , NN } ; 
  int _pinl_5328__flat_40 { , NN } ; 
  int _pinl_5351__eat_760 { , NN } ; 
  int _pinl_5350__eat_759 { , NN } ; 
  double[.,.] _pinl_5345_res { , NN } ; 
  double _pinl_5344__flat_353 { , NN } ; 
  int[2] _pinl_5341_iv { , NN } ; 
  double[1000000,2] hull__SSA0_3 { , NN } ; 
  double[1000000,2] hull__SSA0_1 { , NN } ; 
  int{1} i { , NN } ; 
  double{0.0...} _flat_165 { , NN } ; 
  int _as_8530 { , NN } ; 

  _inc_rc_( P, 1); 
  _emal_51820__flat_165 = _alloc_( 1, 0, [:int]); 
  _flat_165 = _fill_( 0.0, _emal_51820__flat_165); 
  _emal_51819__pinl_4659__wlbsc_2862_sc_e = _alloc_( 1, 0, [:int]); 
  _pinl_4659__wlbsc_2862_sc_e = _fill_( 1000000, _emal_51819__pinl_4659__wlbsc_2862_sc_e); 
  _emal_51818__wlsimp_6605 = _alloc_( 14, 0, [:int]); 
  _wlsimp_6605 = _fill_( 0, _emal_51818__wlsimp_6605); 
  _emal_51817_i = _alloc_( 2, 0, [:int]); 
  i = _fill_( 1, _emal_51817_i); 
  _emal_51816__dlirmov_51599__iveras_51403 = _alloc_( 1, 0, [:int]); 
  _dlirmov_51599__iveras_51403 = _fill_( 0, _emal_51816__dlirmov_51599__iveras_51403); 
  _emal_51815__dlirmov_51600__iveras_51404 = _alloc_( 1, 0, [:int]); 
  _dlirmov_51600__iveras_51404 = _fill_( 0, _emal_51815__dlirmov_51600__iveras_51404); 
  _pinl_10746_left__SSA0_1, _pinl_10747_right__SSA0_1 = _MAIN::_dup_10754_QuickHull__Loop_38( _dlirmov_51600__iveras_51404, _dlirmov_51599__iveras_51403, _wlsimp_6605, _wlsimp_6605, i, P) ; 
  _emal_51814__wlur_7448 = _alloc_( 2, 1, [ 2 ]); 
  _wlur_7448 = _fill_( [ 0.0, 0.0 ], _emal_51814__wlur_7448); 
  _emal_51813__iveras_51390 = _alloc_( 1, 0, [:int]); 
  _iveras_51390 = _fill_( 0, _emal_51813__iveras_51390); 
  _ivesli_47955 = _fill_( _idxs2offset_( [ 1000000, 2 ], _pinl_10746_left__SSA0_1, _iveras_51390), _iveras_51390); 
  _emal_51811__pinl_4846__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4846__flat_149 = _fill_( _idx_sel_( _ivesli_47955, P), _emal_51811__pinl_4846__flat_149); 
  _free_( _ivesli_47955); 
  _emal_51810__iveras_51391 = _alloc_( 1, 0, [:int]); 
  _iveras_51391 = _fill_( 1, _emal_51810__iveras_51391); 
  _ivesli_47953 = _fill_( _idxs2offset_( [ 1000000, 2 ], _pinl_10746_left__SSA0_1, _iveras_51391), _iveras_51391); 
  _dec_rc_( _pinl_10746_left__SSA0_1, 1); 
  _emal_51808__pinl_4846__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4846__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47953, P), _emal_51808__pinl_4846__flat_149__SSA3_2); 
  _free_( _ivesli_47953); 
  _emal_51807_p__SSA3_2 = _alloc_( 2, 1, [ 2 ]); 
  p__SSA3_2 = _fill_( [ _pinl_4846__flat_149, _pinl_4846__flat_149__SSA3_2 ], _emal_51807_p__SSA3_2); 
  _emal_51806__iveras_51392 = _alloc_( 1, 0, [:int]); 
  _iveras_51392 = _fill_( 0, _emal_51806__iveras_51392); 
  _ivesli_47951 = _fill_( _idxs2offset_( [ 1000000, 2 ], _pinl_10747_right__SSA0_1, _iveras_51392), _iveras_51392); 
  _emal_51804__pinl_4859__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4859__flat_149 = _fill_( _idx_sel_( _ivesli_47951, P), _emal_51804__pinl_4859__flat_149); 
  _free_( _ivesli_47951); 
  _emal_51803__iveras_51393 = _alloc_( 1, 0, [:int]); 
  _iveras_51393 = _fill_( 1, _emal_51803__iveras_51393); 
  _ivesli_47949 = _fill_( _idxs2offset_( [ 1000000, 2 ], _pinl_10747_right__SSA0_1, _iveras_51393), _iveras_51393); 
  _dec_rc_( _pinl_10747_right__SSA0_1, 1); 
  _emal_51801__pinl_4859__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4859__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47949, P), _emal_51801__pinl_4859__flat_149__SSA3_2); 
  _free_( _ivesli_47949); 
  _emal_51800_q__SSA3_2 = _alloc_( 2, 1, [ 2 ]); 
  q__SSA3_2 = _fill_( [ _pinl_4859__flat_149, _pinl_4859__flat_149__SSA3_2 ], _emal_51800_q__SSA3_2); 
  _emal_51799__wlsimp_6597 = _alloc_( 1, 0, [:int]); 
  _wlsimp_6597 = _fill_( 999999, _emal_51799__wlsimp_6597); 
  _emal_51795_hull__SSA0_1 = _alloc_( 1, 2, [ 1000000, 2 ]); 
  _pinl_4894__eat_761 = _alloc_( 1, 0, [:int]); 
  _eat_10342 = _alloc_( 1, 0, [:int]); 
  _wlidx_47858_hull__SSA0_1 = _alloc_( 1, 0, [:int]); 
  hull__SSA0_1 = with2 (_wlsb_10921=[_pinl_4894__eat_761, _eat_10342] (IDXS:_wlidx_47858_hull__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_51796_val = _wl_assign_( _pinl_4846__flat_149, _emal_51795_hull__SSA0_1, _wlsb_10921, _wlidx_47858_hull__SSA0_1); 
        } : _emal_51796_val ; ,
      op_1 =
        { 
          _emal_51797_val = _wl_assign_( _pinl_4846__flat_149__SSA3_2, _emal_51795_hull__SSA0_1, _wlsb_10921, _wlidx_47858_hull__SSA0_1); 
        } : _emal_51797_val ; ,
      op_2 =
        { 
          _emal_51798_val = _wl_assign_( _flat_165, _emal_51795_hull__SSA0_1, _wlsb_10921, _wlidx_47858_hull__SSA0_1); 
        } : _emal_51798_val ; 
      /********** segment 0: **********
       * index domain: [ 0, 0 ] -> [ 1000000, 2 ]
       * bv: [ 1, 1 ], [ 1, 1 ], [ 1, 1 ]
       * ubv: [ 1, 1 ]
       * sv: [ 1, 1 ]
       * homsv: [ 1, 1 ]
       */
      (0 -> 1), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      (1 -> 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      genarray( [ 1000000, 2 ], _emal_51795_hull__SSA0_1, IDX(_wlidx_47858_hull__SSA0_1)); 
  _free_( _eat_10342); 
  _free_( _pinl_4894__eat_761); 
  _free_( _pinl_4846__flat_149); 
  _free_( _pinl_4846__flat_149__SSA3_2); 
  _free_( _wlidx_47858_hull__SSA0_1); 
  _emal_51794__pinl_4924_max = _alloc_( 2, 0, [:int]); 
  _pinl_4924_max = _fill_( -1.797690000000000063230304921389426434930330364336853362154109832891264341489062899406152996321966094455338163203127744334848599000464911410516510916727344709727599413825823048028128827530592629736371829425359826368844446113768685826367454055532068818593409e+308, _emal_51794__pinl_4924_max); 
  _emal_51792__pinl_4928_offsetsl = _alloc_( 4, 1, [ 64 ]); 
  _pinl_4951__eat_764 = _alloc_( 1, 0, [:int]); 
  _wlidx_47859__pinl_4928_offsetsl = _alloc_( 1, 0, [:int]); 
  _pinl_4928_offsetsl = with2 (_pinl_4950_iv=[_pinl_4951__eat_764] (IDXS:_wlidx_47859__pinl_4928_offsetsl))
      /********** operators: **********/
      op_0 =
        { 
          _emal_51793_val = _wl_assign_( _wlsimp_6605, _emal_51792__pinl_4928_offsetsl, _pinl_4950_iv, _wlidx_47859__pinl_4928_offsetsl); 
        } : _emal_51793_val ; 
      /********** segment 0: **********
       * index domain: [ 0 ] -> [ 64 ]
       * bv: [ 1 ], [ 1 ], [ 1 ]
       * ubv: [ 1 ]
       * sv: [ 1 ]
       * homsv: [ 1 ]
       */
      (0 -> 64), step0[0] 1
        (0 --> 1): op_0
      /********** conexpr: **********/
      genarray( [ 64 ], _wlsimp_6605, _emal_51792__pinl_4928_offsetsl, IDX(_wlidx_47859__pinl_4928_offsetsl)); 
  _free_( _pinl_4951__eat_764); 
  _free_( _wlidx_47859__pinl_4928_offsetsl); 
  _pinl_6473_argmax__SSA0_1, _pinl_6474_max__SSA0_1, _pinl_6475_r__SSA0_1, _pinl_6476_l__SSA0_1, _pinl_6477_P__SSA0_1 = _MAIN::_dup_6489_BlockHoare__Loop_24( _wlsimp_6605, _wlur_7448, _pinl_4924_max, _pinl_4928_offsetsl, _pinl_4928_offsetsl, _wlsimp_6605, _wlsimp_6605, _wlsimp_6605, _wlsimp_6605, q__SSA3_2, p__SSA3_2, _wlsimp_6597, _wlsimp_6605, P) ; 
  _emal_51791__ctz_7542 = _alloc_( 1, 0, [:int]); 
  _ctz_7542 = _fill_( _sub_SxS_( _pinl_6476_l__SSA0_1, _pinl_6475_r__SSA0_1), _emal_51791__ctz_7542); 
  _emal_51790__pinl_4944__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4944__flat_197 = _fill_( _le_SxS_( _ctz_7542, 0), _emal_51790__pinl_4944__flat_197); 
  _free_( _ctz_7542); 
  _pinl_4941_argmax__SSA0_2, _pinl_4942_l__SSA0_2, _pinl_4943_P__SSA0_2 = _MAIN::_dup_4988_BlockHoare__Cond_12( _pinl_6473_argmax__SSA0_1, _pinl_6474_max__SSA0_1, _pinl_4944__flat_197, q__SSA3_2, p__SSA3_2, _pinl_6475_r__SSA0_1, _pinl_6476_l__SSA0_1, _pinl_6477_P__SSA0_1) ; 
  _emal_51789__ctz_7540 = _alloc_( 1, 0, [:int]); 
  _ctz_7540 = _fill_( _add_SxS_( -1000000, _pinl_4942_l__SSA0_2), _emal_51789__ctz_7540); 
  _emal_51788__pinl_5600__flat_195 = _alloc_( 1, 0, [:int]); 
  _pinl_5600__flat_195 = _fill_( _neq_SxS_( _ctz_7540, 0), _emal_51788__pinl_5600__flat_195); 
  _free_( _ctz_7540); 
  _pinl_5596_count, _pinl_5598_hull__SSA0_1, _pinl_5599_P__SSA0_1 = _MAIN::_dup_5659_FindHull__Cond_40( _pinl_5600__flat_195, i, hull__SSA0_1, _pinl_4941_argmax__SSA0_2, q__SSA3_2, p__SSA3_2, _pinl_4659__wlbsc_2862_sc_e, _pinl_4942_l__SSA0_2, _pinl_4943_P__SSA0_2) ; 
  _emal_51787__pinl_4989__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_4989__flat_40 = _fill_( _add_SxS_( _pinl_5596_count, 1), _emal_51787__pinl_4989__flat_40); 
  _emal_51786__uprf_7356 = _alloc_( 1, 0, [:int]); 
  _uprf_7356 = _fill_( _add_SxS_( _pinl_4989__flat_40, 1), _emal_51786__uprf_7356); 
  _emal_51785__pinl_5668_z = _alloc_( 1, 0, [:int]); 
  _pinl_5668_z = _fill_( _max_SxS_( _pinl_4989__flat_40, _uprf_7356), _emal_51785__pinl_5668_z); 
  _emal_51784__esd_11641 = _alloc_( 1, 0, [:int]); 
  _esd_11641 = _fill_( _neg_S_( _pinl_5596_count), _emal_51784__esd_11641); 
  _emal_51778_hull__SSA0_3 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], _pinl_5598_hull__SSA0_1); 
  _wlidx_47860_hull__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _emrb_55746_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55747_val = _fill_( _isreused_( _emal_51778_hull__SSA0_3, _pinl_5598_hull__SSA0_1), _emrb_55746_mem); 
  hull__SSA0_3 = _MAIN::QuickHull__ReuseCond_40( _emrb_55747_val, _pinl_4989__flat_40, _pinl_4859__flat_149, _pinl_5668_z, _pinl_5598_hull__SSA0_1, _uprf_7356, _pinl_4859__flat_149__SSA3_2, _wlidx_47860_hull__SSA0_3, _emal_51778_hull__SSA0_3) ; 
  _emal_51777__pinl_5059__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_5059__flat_41 = _fill_( _add_SxS_( -1, _pinl_4942_l__SSA0_2), _emal_51777__pinl_5059__flat_41); 
  _emal_51776__al_8540 = _alloc_( 1, 0, [:int]); 
  _al_8540 = _fill_( _add_SxS_( -129, _pinl_4942_l__SSA0_2), _emal_51776__al_8540); 
  _emal_51775__pinl_5045__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_5045__flat_198 = _fill_( _gt_SxS_( _al_8540, 0), _emal_51775__pinl_5045__flat_198); 
  _free_( _al_8540); 
  _pinl_5036_argmax__SSA0_1, _pinl_5037_max__SSA0_1, _pinl_5038_r__SSA0_3, _pinl_5039_l__SSA0_1, _pinl_5040_P__SSA0_1 = _MAIN::_dup_5074_BlockHoare__Cond_25( _wlur_7448, _pinl_4924_max, _pinl_4928_offsetsl, _pinl_4928_offsetsl, _wlsimp_6605, _wlsimp_6605, _wlsimp_6605, _wlsimp_6605, _pinl_5045__flat_198, p__SSA3_2, q__SSA3_2, _pinl_5059__flat_41, _wlsimp_6605, _pinl_5599_P__SSA0_1) ; 
  _emal_51774__ctz_7536 = _alloc_( 1, 0, [:int]); 
  _ctz_7536 = _fill_( _sub_SxS_( _pinl_5039_l__SSA0_1, _pinl_5038_r__SSA0_3), _emal_51774__ctz_7536); 
  _emal_51773__pinl_5044__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_5044__flat_197 = _fill_( _le_SxS_( _ctz_7536, 0), _emal_51773__pinl_5044__flat_197); 
  _free_( _ctz_7536); 
  _pinl_5041_argmax__SSA0_2, _pinl_5042_l__SSA0_2, _pinl_5043_P__SSA0_2 = _MAIN::_dup_5088_BlockHoare__Cond_12( _pinl_5036_argmax__SSA0_1, _pinl_5037_max__SSA0_1, _pinl_5044__flat_197, p__SSA3_2, q__SSA3_2, _pinl_5038_r__SSA0_3, _pinl_5039_l__SSA0_1, _pinl_5040_P__SSA0_1) ; 
  _emal_51772__pinl_5089__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_5089__flat_40 = _fill_( _add_SxS_( 2, _pinl_5596_count), _emal_51772__pinl_5089__flat_40); 
  _emal_51771__ctz_7534 = _alloc_( 1, 0, [:int]); 
  _ctz_7534 = _fill_( _sub_SxS_( _pinl_5042_l__SSA0_2, _pinl_4942_l__SSA0_2), _emal_51771__ctz_7534); 
  _emal_51770__pinl_5267__flat_195 = _alloc_( 1, 0, [:int]); 
  _pinl_5267__flat_195 = _fill_( _neq_SxS_( _ctz_7534, 0), _emal_51770__pinl_5267__flat_195); 
  _free_( _ctz_7534); 
  _pinl_5263_count, _pinl_5265_hull__SSA0_1 = _MAIN::_dup_5326_FindHull__Cond_40( _pinl_5267__flat_195, _pinl_5089__flat_40, hull__SSA0_3, _pinl_5041_argmax__SSA0_2, p__SSA3_2, q__SSA3_2, _pinl_4942_l__SSA0_2, _pinl_5042_l__SSA0_2, _pinl_5043_P__SSA0_2) ; 
  _pinl_5327__flat_40 = _fill_( _add_SxS_( _pinl_5596_count, _pinl_5263_count), _pinl_5596_count); 
  _pinl_5328__flat_40 = _fill_( _add_SxS_( 2, _pinl_5327__flat_40), _pinl_5327__flat_40); 
  _as_8530 = _fill_( _sub_SxS_( _esd_11641, _pinl_5263_count), _esd_11641); 
  _free_( _pinl_5263_count); 
  _pinl_8524__esd_8125 = _fill_( _add_SxS_( -2, _as_8530), _as_8530); 
  _pinl_8510_val__SSA0_1 = _fill_( _add_SxS_( -1000000, _pinl_8524__esd_8125), _pinl_8524__esd_8125); 
  _pinl_8511_val__SSA0_2 = _fill_( _max_SxS_( _pinl_8510_val__SSA0_1, 0), _pinl_8510_val__SSA0_1); 
  _emal_51763__pinl_8504__flat_338 = _alloc_( 1, 0, [:int]); 
  _pinl_8504__flat_338 = _fill_( _ge_SxS_( _pinl_5328__flat_40, 0), _emal_51763__pinl_8504__flat_338); 
  _emal_51762__pinl_8512_val__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_8512_val__SSA0_3 = _fill_( _mask_SxSxS_( _pinl_8504__flat_338, _wlsimp_6605, _pinl_8511_val__SSA0_2), _emal_51762__pinl_8512_val__SSA0_3); 
  _free_( _pinl_8511_val__SSA0_2); 
  _emal_51761__pinl_8503__flat_342 = _alloc_( 1, 0, [:int]); 
  _pinl_8503__flat_342 = _fill_( _add_SxS_( 1000000, _pinl_5328__flat_40), _emal_51761__pinl_8503__flat_342); 
  _pinl_8514_val__SSA0_4 = _fill_( _max_SxS_( _pinl_8503__flat_342, 0), _pinl_8503__flat_342); 
  _emal_51759__pinl_8515_val__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_8515_val__SSA0_5 = _fill_( _mask_SxSxS_( _pinl_8504__flat_338, _wlsimp_6605, _pinl_8514_val__SSA0_4), _emal_51759__pinl_8515_val__SSA0_5); 
  _free_( _pinl_8514_val__SSA0_4); 
  _dec_rc_( _wlsimp_6605, 1); 
  _free_( _pinl_8504__flat_338); 
  _uprf_7350 = _fill_( _abs_S_( _pinl_5328__flat_40), _pinl_5328__flat_40); 
  _emal_51757__uprf_7342 = _alloc_( 1, 0, [:int]); 
  _uprf_7342 = _fill_( _min_SxS_( 1000000, _uprf_7350), _emal_51757__uprf_7342); 
  _uprf_7332 = _fill_( _add_SxS_( _pinl_8512_val__SSA0_3, _uprf_7342), _uprf_7342); 
  _emal_51755__pinl_6068_z = _alloc_( 1, 0, [:int]); 
  _pinl_6068_z = _fill_( _max_SxS_( _pinl_8512_val__SSA0_3, _uprf_7332), _emal_51755__pinl_6068_z); 
  _ivesli_47940 = _fill_( _sub_SxS_( _pinl_8512_val__SSA0_3, _pinl_8515_val__SSA0_5), _pinl_8515_val__SSA0_5); 
  _ivesli_47941 = _fill_( _neg_S_( _ivesli_47940), _ivesli_47940); 
  _emal_51752__iveras_51394 = _alloc_( 1, 0, [:int]); 
  _iveras_51394 = _fill_( 0, _emal_51752__iveras_51394); 
  _ivesli_47943 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47941, _iveras_51394), _ivesli_47941); 
  _free_( _iveras_51394); 
  _emal_51745__pinl_5345_res = _alloc_( 1, 2, _cat_VxV_( [ _uprf_7350, 2 ], [:int])); 
  _pinl_5351__eat_760 = _alloc_( 1, 0, [:int]); 
  _pinl_5350__eat_759 = _alloc_( 1, 0, [:int]); 
  _wlidx_47861__pinl_5345_res = _alloc_( 1, 0, [:int]); 
  _pinl_5345_res = with2 (_pinl_5341_iv=[_pinl_5351__eat_760, _pinl_5350__eat_759] (IDXS:_wlidx_47861__pinl_5345_res))
      /********** operators: **********/
      op_0 =
        { 
          _emal_51748__ivesli_47945 = _alloc_( 1, 0, [:int]); 
          _ivesli_47945 = _fill_( _idxs2offset_( [ 1000000, 2 ], _pinl_5351__eat_760, _pinl_5350__eat_759), _emal_51748__ivesli_47945); 
          _ivesli_47946 = _fill_( _add_SxS_( _ivesli_47943, _ivesli_47945), _ivesli_47945); 
          _emal_51746__pinl_5344__flat_353 = _alloc_( 1, 0, [:int]); 
          _pinl_5344__flat_353 = _fill_( _idx_sel_( _ivesli_47946, _pinl_5265_hull__SSA0_1), _emal_51746__pinl_5344__flat_353); 
          _free_( _ivesli_47946); 
          _emal_51749_val = _wl_assign_( _pinl_5344__flat_353, _emal_51745__pinl_5345_res, _pinl_5341_iv, _wlidx_47861__pinl_5345_res); 
          _free_( _pinl_5344__flat_353); 
        } : _emal_51749_val ; ,
      op_1 =
        { 
          _emal_51750_val = _wl_assign_( _flat_165, _emal_51745__pinl_5345_res, _pinl_5341_iv, _wlidx_47861__pinl_5345_res); 
        } : _emal_51750_val ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_6068_z, 0 ] -> [ _uprf_7350, 2 ]
       */
      (_pinl_6068_z => _uprf_7350), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 1: **********
       * index domain: [ 0, 0 ] -> [ _pinl_8512_val__SSA0_3, 2 ]
       */
      (0 => _pinl_8512_val__SSA0_3), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ _pinl_8512_val__SSA0_3, 0 ] -> [ _uprf_7332, 2 ]
       */
      (_pinl_8512_val__SSA0_3 => _uprf_7332), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_0
      /********** conexpr: **********/
      genarray( [ _uprf_7350, 2 ], _flat_165, _emal_51745__pinl_5345_res, IDX(_wlidx_47861__pinl_5345_res)); 
  _free_( _uprf_7332); 
  _free_( _pinl_8512_val__SSA0_3); 
  _free_( _uprf_7350); 
  _free_( _pinl_6068_z); 
  _free_( _flat_165); 
  _free_( _pinl_5350__eat_759); 
  _free_( _pinl_5351__eat_760); 
  _dec_rc_( _pinl_5265_hull__SSA0_1, 1); 
  _free_( _wlidx_47861__pinl_5345_res); 
  _free_( _ivesli_47943); 
  return( _pinl_5345_res); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::QuickHull__ReuseCond_40(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::QuickHull__ReuseCond_40( bool _emrb_55722 { ,NN } , int _pinl_4989__flat_40 { ,NN } , double _pinl_4859__flat_149 { ,NN } , int _pinl_5668_z { ,NN } , double[1000000,2] _pinl_5598_hull__SSA0_1 { ,NN } , int _uprf_7356 { ,NN } , double _pinl_4859__flat_149__SSA3_2 { ,NN } , int _wlidx_47860_hull__SSA0_3 { ,NN } , double[1000000,2] _emal_51778_hull__SSA0_3 { ,NN } )
/*
 *  QuickHull__ReuseCond_40 ::  ---
 */
{ 
  double _emdr_55750 { , NN } ; 
  double[1000000,2] _emrb_55745 { , NN } ; 
  double _dup_55744__emal_51783_val { , NN } ; 
  double _dup_55743__pinl_5679__flat_28 { , NN } ; 
  double _dup_55742__emal_51781__dup_10899__pinl_5679__flat_28 { , NN } ; 
  int _dup_55741__ivesli_47947 { , NN } ; 
  int _dup_55740__emal_51782__ivesli_47947 { , NN } ; 
  double _dup_55739__emal_51780_val { , NN } ; 
  double _dup_55738__emal_51779_val { , NN } ; 
  double[1000000,2] _dup_55737_hull__SSA0_3 { , NN } ; 
  int _dup_55736__eat_10349 { , NN } ; 
  int _dup_55735__pinl_4994__eat_766 { , NN } ; 
  int[2] _dup_55734__wlsb_10893 { , NN } ; 
  double _dup_55728__emal_51780_val { , NN } ; 
  double _dup_55727__emal_51779_val { , NN } ; 
  double[1000000,2] _dup_55726_hull__SSA0_3 { , NN } ; 
  int _dup_55725__eat_10349 { , NN } ; 
  int _dup_55724__pinl_4994__eat_766 { , NN } ; 
  int[2] _dup_55723__wlsb_10893 { , NN } ; 

  if (_emrb_55722) 
  { 
    _dec_rc_( _emrb_55722, 1); 
    _dup_55724__pinl_4994__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55725__eat_10349 = _alloc_( 1, 0, [:int]); 
    _dup_55726_hull__SSA0_3 = with2 (_dup_55723__wlsb_10893=[_dup_55724__pinl_4994__eat_766, _dup_55725__eat_10349] (IDXS:_wlidx_47860_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55727__emal_51779_val = _wl_assign_( _pinl_4859__flat_149, _emal_51778_hull__SSA0_3, _dup_55723__wlsb_10893, _wlidx_47860_hull__SSA0_3); 
          } : _dup_55727__emal_51779_val ; ,
        op_1 =
          { 
            _dup_55728__emal_51780_val = _wl_assign_( _pinl_4859__flat_149__SSA3_2, _emal_51778_hull__SSA0_3, _dup_55723__wlsb_10893, _wlidx_47860_hull__SSA0_3); 
          } : _dup_55728__emal_51780_val ; ,
        op_2 =
          { 
            _emdr_55750 = _noop_( _dup_55723__wlsb_10893); 
          } : _emdr_55750 ; 
        /********** (var.) segment 0: **********
         * index domain: [ _pinl_4989__flat_40, 0 ] -> [ _uprf_7356, 1 ]
         */
        (_pinl_4989__flat_40 => _uprf_7356), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ _pinl_4989__flat_40, 1 ] -> [ _uprf_7356, 2 ]
         */
        (_pinl_4989__flat_40 => _uprf_7356), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ _pinl_4989__flat_40, 2 ]
         */
        (0 => _pinl_4989__flat_40), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5668_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5668_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_5598_hull__SSA0_1 , _emal_51778_hull__SSA0_3 ,IDX(_wlidx_47860_hull__SSA0_3)); 
    _dec_rc_( _pinl_5598_hull__SSA0_1, 1); 
    _free_( _pinl_5668_z); 
    _free_( _uprf_7356); 
    _free_( _pinl_4989__flat_40); 
    _free_( _dup_55725__eat_10349); 
    _free_( _dup_55724__pinl_4994__eat_766); 
    _free_( _wlidx_47860_hull__SSA0_3); 
    _free_( _pinl_4859__flat_149__SSA3_2); 
    _free_( _pinl_4859__flat_149); 
  }
  else
  { 
    _dec_rc_( _emrb_55722, 1); 
    _dup_55735__pinl_4994__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55736__eat_10349 = _alloc_( 1, 0, [:int]); 
    _dup_55737_hull__SSA0_3 = with2 (_dup_55734__wlsb_10893=[_dup_55735__pinl_4994__eat_766, _dup_55736__eat_10349] (IDXS:_wlidx_47860_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55738__emal_51779_val = _wl_assign_( _pinl_4859__flat_149, _emal_51778_hull__SSA0_3, _dup_55734__wlsb_10893, _wlidx_47860_hull__SSA0_3); 
          } : _dup_55738__emal_51779_val ; ,
        op_1 =
          { 
            _dup_55739__emal_51780_val = _wl_assign_( _pinl_4859__flat_149__SSA3_2, _emal_51778_hull__SSA0_3, _dup_55734__wlsb_10893, _wlidx_47860_hull__SSA0_3); 
          } : _dup_55739__emal_51780_val ; ,
        op_2 =
          { 
            _dup_55740__emal_51782__ivesli_47947 = _alloc_( 1, 0, [:int]); 
            _dup_55741__ivesli_47947 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55735__pinl_4994__eat_766, _dup_55736__eat_10349), _dup_55740__emal_51782__ivesli_47947); 
            _dup_55742__emal_51781__dup_10899__pinl_5679__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55743__pinl_5679__flat_28 = _fill_( _idx_sel_( _dup_55741__ivesli_47947, _pinl_5598_hull__SSA0_1), _dup_55742__emal_51781__dup_10899__pinl_5679__flat_28); 
            _free_( _dup_55741__ivesli_47947); 
            _dup_55744__emal_51783_val = _wl_assign_( _dup_55743__pinl_5679__flat_28, _emal_51778_hull__SSA0_3, _dup_55734__wlsb_10893, _wlidx_47860_hull__SSA0_3); 
            _free_( _dup_55743__pinl_5679__flat_28); 
          } : _dup_55744__emal_51783_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ _pinl_4989__flat_40, 0 ] -> [ _uprf_7356, 1 ]
         */
        (_pinl_4989__flat_40 => _uprf_7356), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ _pinl_4989__flat_40, 1 ] -> [ _uprf_7356, 2 ]
         */
        (_pinl_4989__flat_40 => _uprf_7356), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ _pinl_4989__flat_40, 2 ]
         */
        (0 => _pinl_4989__flat_40), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5668_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5668_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_5598_hull__SSA0_1 , _emal_51778_hull__SSA0_3 ,IDX(_wlidx_47860_hull__SSA0_3)); 
    _free_( _pinl_5668_z); 
    _free_( _uprf_7356); 
    _free_( _pinl_4989__flat_40); 
    _free_( _dup_55735__pinl_4994__eat_766); 
    _free_( _dup_55736__eat_10349); 
    _free_( _wlidx_47860_hull__SSA0_3); 
    _free_( _pinl_4859__flat_149__SSA3_2); 
    _dec_rc_( _pinl_5598_hull__SSA0_1, 1); 
    _free_( _pinl_4859__flat_149); 
  }
  _emrb_55745 = ( _emrb_55722 ? _dup_55726_hull__SSA0_3 : _dup_55737_hull__SSA0_3 ); 
  return( _emrb_55745); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_10802_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_10802_BlockHoare__Loop_18( int _iveras_51396 { ,NN } , int _iveras_51395 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6224 { ,NN } , double _ls_6223 { ,NN } , double _ls_6214 { ,NN } , double _ls_6213 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10802_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_51844__emec_51712_offsetsr { , NN } ; 
  int _emal_51842__ivesli_47960 { , NN } ; 
  int _emal_51840__ivesli_47963 { , NN } ; 
  double _emal_51839__pinl_3375__flat_149 { , NN } ; 
  double _emal_51837__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51836__flat_81__SSA3_2 { , NN } ; 
  double _emal_51835__pinl_3446__flat_95 { , NN } ; 
  double _emal_51834__pinl_3421__flat_95 { , NN } ; 
  bool _emal_51828__pinl_3471__flat_251 { , NN } ; 
  int _emal_51827__pinl_3472__flat_438 { , NN } ; 
  double _emal_51825__ctz_7624 { , NN } ; 
  bool _emal_51824__pinl_3477__flat_252 { , NN } ; 
  int _emal_51823__pinl_3480__flat_122 { , NN } ; 
  int _emal_51822__al_12119 { , NN } ; 
  bool _emal_51821__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51712_offsetsr { , NN } ; 
  int _ivesli_47963 { , NN } ; 
  int _ivesli_47961 { , NN } ; 
  int _ivesli_47960 { , NN } ; 
  int _ivesli_47959 { , NN } ; 
  int _al_12119 { , NN } ; 
  double _ctz_7624 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_51844__emec_51712_offsetsr = offsetsr; 
  _emec_51712_offsetsr = _fill_( _noop_( offsetsr), _emal_51844__emec_51712_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51712_offsetsr, numr, i), _emec_51712_offsetsr); 
  _emal_51842__ivesli_47960 = _alloc_( 1, 0, [:int]); 
  _ivesli_47960 = _fill_( _sub_SxS_( i, r), _emal_51842__ivesli_47960); 
  _ivesli_47961 = _fill_( _neg_S_( _ivesli_47960), _ivesli_47960); 
  _emal_51840__ivesli_47963 = _alloc_( 1, 0, [:int]); 
  _ivesli_47963 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47961, _iveras_51395), _emal_51840__ivesli_47963); 
  _emal_51839__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_47963, P), _emal_51839__pinl_3375__flat_149); 
  _free_( _ivesli_47963); 
  _ivesli_47959 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47961, _iveras_51396), _ivesli_47961); 
  _emal_51837__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47959, P), _emal_51837__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_47959); 
  _emal_51836__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_51836__flat_81__SSA3_2); 
  _emal_51835__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6224, _pinl_3375__flat_149), _emal_51835__pinl_3446__flat_95); 
  _emal_51834__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6213, _pinl_3375__flat_149__SSA3_2), _emal_51834__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6223, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6214, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_51828__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_51828__pinl_3471__flat_251); 
  _emal_51827__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_51827__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_51825__ctz_7624 = _alloc_( 1, 0, [:int]); 
  _ctz_7624 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_51825__ctz_7624); 
  _emal_51824__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7624, 0.0), _emal_51824__pinl_3477__flat_252); 
  _free_( _ctz_7624); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_10801_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_51823__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51823__pinl_3480__flat_122); 
  _emal_51822__al_12119 = i; 
  _al_12119 = _fill_( _add_SxS_( -63, i), _emal_51822__al_12119); 
  _emal_51821__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12119, 0), _emal_51821__pinl_3481__flat_196); 
  _free_( _al_12119); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_10802_BlockHoare__Loop_18( _iveras_51396, _iveras_51395, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6224, _ls_6223, _ls_6214, _ls_6213, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6213, 1); 
    _dec_rc_( _ls_6214, 1); 
    _dec_rc_( _ls_6223, 1); 
    _dec_rc_( _ls_6224, 1); 
    _dec_rc_( _iveras_51395, 1); 
    _dec_rc_( _iveras_51396, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10801_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_10801_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_10801_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_10790_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_10790_BlockHoare__Loop_21( int _iveras_51398 { ,NN } , int _iveras_51397 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6244 { ,NN } , double _ls_6243 { ,NN } , double _ls_6234 { ,NN } , double _ls_6233 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10790_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_51867__emec_51713_offsetsl { , NN } ; 
  int _emal_51865__ivesli_47969 { , NN } ; 
  int _emal_51864__ivesli_47971 { , NN } ; 
  double _emal_51863__pinl_3253__flat_149 { , NN } ; 
  double _emal_51861__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51860__flat_68__SSA3_2 { , NN } ; 
  double _emal_51859__pinl_3324__flat_95 { , NN } ; 
  double _emal_51858__pinl_3299__flat_95 { , NN } ; 
  bool _emal_51852__pinl_3349__flat_252 { , NN } ; 
  int _emal_51851__pinl_3350__flat_438 { , NN } ; 
  double _emal_51849__ctz_7630 { , NN } ; 
  bool _emal_51848__pinl_3355__flat_252 { , NN } ; 
  int _emal_51847__pinl_3358__flat_122 { , NN } ; 
  int _emal_51846__al_12121 { , NN } ; 
  bool _emal_51845__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51713_offsetsl { , NN } ; 
  int _ivesli_47971 { , NN } ; 
  int _ivesli_47969 { , NN } ; 
  int _ivesli_47968 { , NN } ; 
  int _al_12121 { , NN } ; 
  double _ctz_7630 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_51867__emec_51713_offsetsl = offsetsl; 
  _emec_51713_offsetsl = _fill_( _noop_( offsetsl), _emal_51867__emec_51713_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51713_offsetsl, numl, i), _emec_51713_offsetsl); 
  _emal_51865__ivesli_47969 = _alloc_( 1, 0, [:int]); 
  _ivesli_47969 = _fill_( _add_SxS_( l, i), _emal_51865__ivesli_47969); 
  _emal_51864__ivesli_47971 = _alloc_( 1, 0, [:int]); 
  _ivesli_47971 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47969, _iveras_51397), _emal_51864__ivesli_47971); 
  _emal_51863__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_47971, P), _emal_51863__pinl_3253__flat_149); 
  _free_( _ivesli_47971); 
  _ivesli_47968 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47969, _iveras_51398), _ivesli_47969); 
  _emal_51861__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47968, P), _emal_51861__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_47968); 
  _emal_51860__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_51860__flat_68__SSA3_2); 
  _emal_51859__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6244, _pinl_3253__flat_149), _emal_51859__pinl_3324__flat_95); 
  _emal_51858__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6233, _pinl_3253__flat_149__SSA3_2), _emal_51858__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6243, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6234, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_51852__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_51852__pinl_3349__flat_252); 
  _emal_51851__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_51851__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_51849__ctz_7630 = _alloc_( 1, 0, [:int]); 
  _ctz_7630 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_51849__ctz_7630); 
  _emal_51848__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7630, 0.0), _emal_51848__pinl_3355__flat_252); 
  _free_( _ctz_7630); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_10789_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_51847__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51847__pinl_3358__flat_122); 
  _emal_51846__al_12121 = i; 
  _al_12121 = _fill_( _add_SxS_( -63, i), _emal_51846__al_12121); 
  _emal_51845__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12121, 0), _emal_51845__pinl_3359__flat_196); 
  _free_( _al_12121); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_10790_BlockHoare__Loop_21( _iveras_51398, _iveras_51397, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6244, _ls_6243, _ls_6234, _ls_6233, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6233, 1); 
    _dec_rc_( _ls_6234, 1); 
    _dec_rc_( _ls_6243, 1); 
    _dec_rc_( _ls_6244, 1); 
    _dec_rc_( _iveras_51397, 1); 
    _dec_rc_( _iveras_51398, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10789_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_10789_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_10789_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_10778_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_10778_BlockHoare__Loop_18( int _iveras_51400 { ,NN } , int _iveras_51399 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6264 { ,NN } , double _ls_6263 { ,NN } , double _ls_6254 { ,NN } , double _ls_6253 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10778_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_51891__emec_51714_offsetsr { , NN } ; 
  int _emal_51889__ivesli_47978 { , NN } ; 
  int _emal_51887__ivesli_47981 { , NN } ; 
  double _emal_51886__pinl_3375__flat_149 { , NN } ; 
  double _emal_51884__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51883__flat_81__SSA3_2 { , NN } ; 
  double _emal_51882__pinl_3446__flat_95 { , NN } ; 
  double _emal_51881__pinl_3421__flat_95 { , NN } ; 
  bool _emal_51875__pinl_3471__flat_251 { , NN } ; 
  int _emal_51874__pinl_3472__flat_438 { , NN } ; 
  double _emal_51872__ctz_7662 { , NN } ; 
  bool _emal_51871__pinl_3477__flat_252 { , NN } ; 
  int _emal_51870__pinl_3480__flat_122 { , NN } ; 
  int _emal_51869__al_12123 { , NN } ; 
  bool _emal_51868__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51714_offsetsr { , NN } ; 
  int _ivesli_47981 { , NN } ; 
  int _ivesli_47979 { , NN } ; 
  int _ivesli_47978 { , NN } ; 
  int _ivesli_47977 { , NN } ; 
  int _al_12123 { , NN } ; 
  double _ctz_7662 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_51891__emec_51714_offsetsr = offsetsr; 
  _emec_51714_offsetsr = _fill_( _noop_( offsetsr), _emal_51891__emec_51714_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51714_offsetsr, numr, i), _emec_51714_offsetsr); 
  _emal_51889__ivesli_47978 = _alloc_( 1, 0, [:int]); 
  _ivesli_47978 = _fill_( _sub_SxS_( i, r), _emal_51889__ivesli_47978); 
  _ivesli_47979 = _fill_( _neg_S_( _ivesli_47978), _ivesli_47978); 
  _emal_51887__ivesli_47981 = _alloc_( 1, 0, [:int]); 
  _ivesli_47981 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47979, _iveras_51399), _emal_51887__ivesli_47981); 
  _emal_51886__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_47981, P), _emal_51886__pinl_3375__flat_149); 
  _free_( _ivesli_47981); 
  _ivesli_47977 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47979, _iveras_51400), _ivesli_47979); 
  _emal_51884__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47977, P), _emal_51884__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_47977); 
  _emal_51883__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_51883__flat_81__SSA3_2); 
  _emal_51882__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6264, _pinl_3375__flat_149), _emal_51882__pinl_3446__flat_95); 
  _emal_51881__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6253, _pinl_3375__flat_149__SSA3_2), _emal_51881__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6263, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6254, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_51875__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_51875__pinl_3471__flat_251); 
  _emal_51874__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_51874__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_51872__ctz_7662 = _alloc_( 1, 0, [:int]); 
  _ctz_7662 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_51872__ctz_7662); 
  _emal_51871__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7662, 0.0), _emal_51871__pinl_3477__flat_252); 
  _free_( _ctz_7662); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_10777_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_51870__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51870__pinl_3480__flat_122); 
  _emal_51869__al_12123 = i; 
  _al_12123 = _fill_( _add_SxS_( -63, i), _emal_51869__al_12123); 
  _emal_51868__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12123, 0), _emal_51868__pinl_3481__flat_196); 
  _free_( _al_12123); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_10778_BlockHoare__Loop_18( _iveras_51400, _iveras_51399, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6264, _ls_6263, _ls_6254, _ls_6253, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6253, 1); 
    _dec_rc_( _ls_6254, 1); 
    _dec_rc_( _ls_6263, 1); 
    _dec_rc_( _ls_6264, 1); 
    _dec_rc_( _iveras_51399, 1); 
    _dec_rc_( _iveras_51400, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10777_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_10777_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_10777_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_10766_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_10766_BlockHoare__Loop_21( int _iveras_51402 { ,NN } , int _iveras_51401 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6284 { ,NN } , double _ls_6283 { ,NN } , double _ls_6274 { ,NN } , double _ls_6273 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10766_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_51914__emec_51715_offsetsl { , NN } ; 
  int _emal_51912__ivesli_47987 { , NN } ; 
  int _emal_51911__ivesli_47989 { , NN } ; 
  double _emal_51910__pinl_3253__flat_149 { , NN } ; 
  double _emal_51908__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51907__flat_68__SSA3_2 { , NN } ; 
  double _emal_51906__pinl_3324__flat_95 { , NN } ; 
  double _emal_51905__pinl_3299__flat_95 { , NN } ; 
  bool _emal_51899__pinl_3349__flat_252 { , NN } ; 
  int _emal_51898__pinl_3350__flat_438 { , NN } ; 
  double _emal_51896__ctz_7668 { , NN } ; 
  bool _emal_51895__pinl_3355__flat_252 { , NN } ; 
  int _emal_51894__pinl_3358__flat_122 { , NN } ; 
  int _emal_51893__al_12125 { , NN } ; 
  bool _emal_51892__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51715_offsetsl { , NN } ; 
  int _ivesli_47989 { , NN } ; 
  int _ivesli_47987 { , NN } ; 
  int _ivesli_47986 { , NN } ; 
  int _al_12125 { , NN } ; 
  double _ctz_7668 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_51914__emec_51715_offsetsl = offsetsl; 
  _emec_51715_offsetsl = _fill_( _noop_( offsetsl), _emal_51914__emec_51715_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51715_offsetsl, numl, i), _emec_51715_offsetsl); 
  _emal_51912__ivesli_47987 = _alloc_( 1, 0, [:int]); 
  _ivesli_47987 = _fill_( _add_SxS_( l, i), _emal_51912__ivesli_47987); 
  _emal_51911__ivesli_47989 = _alloc_( 1, 0, [:int]); 
  _ivesli_47989 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47987, _iveras_51401), _emal_51911__ivesli_47989); 
  _emal_51910__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_47989, P), _emal_51910__pinl_3253__flat_149); 
  _free_( _ivesli_47989); 
  _ivesli_47986 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_47987, _iveras_51402), _ivesli_47987); 
  _emal_51908__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_47986, P), _emal_51908__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_47986); 
  _emal_51907__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_51907__flat_68__SSA3_2); 
  _emal_51906__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6284, _pinl_3253__flat_149), _emal_51906__pinl_3324__flat_95); 
  _emal_51905__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6273, _pinl_3253__flat_149__SSA3_2), _emal_51905__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6283, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6274, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_51899__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_51899__pinl_3349__flat_252); 
  _emal_51898__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_51898__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_51896__ctz_7668 = _alloc_( 1, 0, [:int]); 
  _ctz_7668 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_51896__ctz_7668); 
  _emal_51895__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7668, 0.0), _emal_51895__pinl_3355__flat_252); 
  _free_( _ctz_7668); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_10765_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_51894__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51894__pinl_3358__flat_122); 
  _emal_51893__al_12125 = i; 
  _al_12125 = _fill_( _add_SxS_( -63, i), _emal_51893__al_12125); 
  _emal_51892__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12125, 0), _emal_51892__pinl_3359__flat_196); 
  _free_( _al_12125); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_10766_BlockHoare__Loop_21( _iveras_51402, _iveras_51401, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6284, _ls_6283, _ls_6274, _ls_6273, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6273, 1); 
    _dec_rc_( _ls_6274, 1); 
    _dec_rc_( _ls_6283, 1); 
    _dec_rc_( _ls_6284, 1); 
    _dec_rc_( _iveras_51401, 1); 
    _dec_rc_( _iveras_51402, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10765_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_10765_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_10765_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 999999:
 * _MAIN::_dup_10754_QuickHull__Loop_38(...) [ body ]
 ****************************************************************************/
int, int _MAIN::_dup_10754_QuickHull__Loop_38( int _iveras_51404 { ,NN } , int _iveras_51403 { ,NN } , int left { ,NN } , int right { ,NN } , int i { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10754_QuickHull__Loop_38 ::  ---
 */
{ 
  int _emal_51923__ivesli_47995 { , NN } ; 
  double _emal_51922__pinl_4693__flat_149 { , NN } ; 
  int _emal_51921__ivesli_47993 { , NN } ; 
  double _emal_51920__pinl_4704__flat_149 { , NN } ; 
  bool _emal_51918__pinl_4705__flat_248 { , NN } ; 
  int _emal_51917__pinl_4822__flat_122 { , NN } ; 
  int _emal_51916__al_12127 { , NN } ; 
  bool _emal_51915__pinl_4834__flat_196 { , NN } ; 
  int _ivesli_47995 { , NN } ; 
  int _ivesli_47993 { , NN } ; 
  int _al_12127 { , NN } ; 
  double _ctz_7778 { , NN } ; 
  double _pinl_4693__flat_149 { , NN } ; 
  double _pinl_4704__flat_149 { , NN } ; 
  bool _pinl_4705__flat_248 { , NN } ; 
  int _pinl_4822__flat_122 { , NN } ; 
  bool _pinl_4834__flat_196 { , NN } ; 
  int left__SSA0_3 { , NN } ; 
  int right__SSA0_3 { , NN } ; 
  int right__SSA0_2 { , NN } ; 
  int left__SSA0_2 { , NN } ; 
  int right__SSA0_1 { , NN } ; 
  int left__SSA0_1 { , NN } ; 

  _emal_51923__ivesli_47995 = _alloc_( 1, 0, [:int]); 
  _ivesli_47995 = _fill_( _idxs2offset_( [ 1000000, 2 ], left, _iveras_51403), _emal_51923__ivesli_47995); 
  _emal_51922__pinl_4693__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4693__flat_149 = _fill_( _idx_sel_( _ivesli_47995, P), _emal_51922__pinl_4693__flat_149); 
  _free_( _ivesli_47995); 
  _emal_51921__ivesli_47993 = _alloc_( 1, 0, [:int]); 
  _ivesli_47993 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51404), _emal_51921__ivesli_47993); 
  _emal_51920__pinl_4704__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4704__flat_149 = _fill_( _idx_sel_( _ivesli_47993, P), _emal_51920__pinl_4704__flat_149); 
  _free_( _ivesli_47993); 
  _ctz_7778 = _fill_( _sub_SxS_( _pinl_4704__flat_149, _pinl_4693__flat_149), _pinl_4704__flat_149); 
  _free_( _pinl_4693__flat_149); 
  _emal_51918__pinl_4705__flat_248 = _alloc_( 1, 0, [:int]); 
  _pinl_4705__flat_248 = _fill_( _eq_SxS_( _ctz_7778, 0.0), _emal_51918__pinl_4705__flat_248); 
  _free_( _ctz_7778); 
  left__SSA0_1, right__SSA0_1 = _MAIN::_dup_10753_QuickHull__Cond_37( left, right, i, _pinl_4705__flat_248, P) ; 
  _emal_51917__pinl_4822__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_4822__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51917__pinl_4822__flat_122); 
  _emal_51916__al_12127 = _alloc_( 1, 0, [:int]); 
  _al_12127 = _fill_( _add_SxS_( -999999, i), _emal_51916__al_12127); 
  _dec_rc_( i, 1); 
  _emal_51915__pinl_4834__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4834__flat_196 = _fill_( _lt_SxS_( _al_12127, 0), _emal_51915__pinl_4834__flat_196); 
  _free_( _al_12127); 
  if (_pinl_4834__flat_196) 
  { 
    _free_( _pinl_4834__flat_196); 
    left__SSA0_2, right__SSA0_2 = _MAIN::_dup_10754_QuickHull__Loop_38( _iveras_51404, _iveras_51403, left__SSA0_1, right__SSA0_1, _pinl_4822__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( _pinl_4822__flat_122, 1); 
    _dec_rc_( P, 1); 
    _dec_rc_( _iveras_51403, 1); 
    _dec_rc_( _iveras_51404, 1); 
    _free_( _pinl_4834__flat_196); 
  }
  right__SSA0_3 = ( _pinl_4834__flat_196 ? right__SSA0_2 : right__SSA0_1 ); 
  left__SSA0_3 = ( _pinl_4834__flat_196 ? left__SSA0_2 : left__SSA0_1 ); 
  return( left__SSA0_3, right__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10753_QuickHull__Cond_37(...) [ body ]
 ****************************************************************************/
int, int _MAIN::_dup_10753_QuickHull__Cond_37( int left { ,NN } , int right { ,NN } , int i { ,NN } , bool _flat_170 { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10753_QuickHull__Cond_37 ::  ---
 */
{ 
  int _emal_51939__iveras_51407 { , NN } ; 
  int _emal_51938__ivesli_48003 { , NN } ; 
  double _emal_51937__pinl_4739__flat_149 { , NN } ; 
  int _emal_51936__iveras_51408 { , NN } ; 
  int _emal_51935__ivesli_48001 { , NN } ; 
  double _emal_51934__pinl_4750__flat_149 { , NN } ; 
  double _emal_51933__ctz_7782 { , NN } ; 
  bool _emal_51932__pinl_4751__flat_250 { , NN } ; 
  int _emal_51931__iveras_51405 { , NN } ; 
  int _emal_51930__ivesli_47999 { , NN } ; 
  double _emal_51929__pinl_4716__flat_149 { , NN } ; 
  int _emal_51928__iveras_51406 { , NN } ; 
  int _emal_51927__ivesli_47997 { , NN } ; 
  double _emal_51926__pinl_4727__flat_149 { , NN } ; 
  double _emal_51925__ctz_7780 { , NN } ; 
  bool _emal_51924__pinl_4728__flat_250 { , NN } ; 
  int _iveras_51408 { , NN } ; 
  int _iveras_51407 { , NN } ; 
  int _iveras_51406 { , NN } ; 
  int _iveras_51405 { , NN } ; 
  int _ivesli_48003 { , NN } ; 
  int _ivesli_48001 { , NN } ; 
  int _ivesli_47999 { , NN } ; 
  int _ivesli_47997 { , NN } ; 
  double _ctz_7782 { , NN } ; 
  double _ctz_7780 { , NN } ; 
  double _pinl_4739__flat_149 { , NN } ; 
  double _pinl_4750__flat_149 { , NN } ; 
  bool _pinl_4751__flat_250 { , NN } ; 
  double _pinl_4716__flat_149 { , NN } ; 
  double _pinl_4727__flat_149 { , NN } ; 
  bool _pinl_4728__flat_250 { , NN } ; 
  int left__SSA0_3 { , NN } ; 
  int right__SSA0_2 { , NN } ; 
  int right__SSA0_1 { , NN } ; 
  int left__SSA0_2 { , NN } ; 
  int _hce_14 { , NN } ; 

  if (_flat_170) 
  { 
    _free_( _flat_170); 
    _emal_51931__iveras_51405 = _alloc_( 1, 0, [:int]); 
    _iveras_51405 = _fill_( 1, _emal_51931__iveras_51405); 
    _ivesli_47999 = _fill_( _idxs2offset_( [ 1000000, 2 ], left, _iveras_51405), _iveras_51405); 
    _emal_51929__pinl_4716__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4716__flat_149 = _fill_( _idx_sel_( _ivesli_47999, P), _emal_51929__pinl_4716__flat_149); 
    _free_( _ivesli_47999); 
    _emal_51928__iveras_51406 = _alloc_( 1, 0, [:int]); 
    _iveras_51406 = _fill_( 1, _emal_51928__iveras_51406); 
    _ivesli_47997 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51406), _iveras_51406); 
    _emal_51926__pinl_4727__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4727__flat_149 = _fill_( _idx_sel_( _ivesli_47997, P), _emal_51926__pinl_4727__flat_149); 
    _free_( _ivesli_47997); 
    _ctz_7780 = _fill_( _sub_SxS_( _pinl_4727__flat_149, _pinl_4716__flat_149), _pinl_4727__flat_149); 
    _free_( _pinl_4716__flat_149); 
    _emal_51924__pinl_4728__flat_250 = _alloc_( 1, 0, [:int]); 
    _pinl_4728__flat_250 = _fill_( _lt_SxS_( _ctz_7780, 0.0), _emal_51924__pinl_4728__flat_250); 
    _free_( _ctz_7780); 
    _hce_14 = _MAIN::_dup_10752_QuickHull__Cond_32( left, i, _pinl_4728__flat_250) ; 
  }
  else
  { 
    _free_( _flat_170); 
    _emal_51939__iveras_51407 = _alloc_( 1, 0, [:int]); 
    _iveras_51407 = _fill_( 0, _emal_51939__iveras_51407); 
    _ivesli_48003 = _fill_( _idxs2offset_( [ 1000000, 2 ], left, _iveras_51407), _iveras_51407); 
    _emal_51937__pinl_4739__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4739__flat_149 = _fill_( _idx_sel_( _ivesli_48003, P), _emal_51937__pinl_4739__flat_149); 
    _free_( _ivesli_48003); 
    _emal_51936__iveras_51408 = _alloc_( 1, 0, [:int]); 
    _iveras_51408 = _fill_( 0, _emal_51936__iveras_51408); 
    _ivesli_48001 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51408), _iveras_51408); 
    _emal_51934__pinl_4750__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4750__flat_149 = _fill_( _idx_sel_( _ivesli_48001, P), _emal_51934__pinl_4750__flat_149); 
    _free_( _ivesli_48001); 
    _ctz_7782 = _fill_( _sub_SxS_( _pinl_4750__flat_149, _pinl_4739__flat_149), _pinl_4750__flat_149); 
    _free_( _pinl_4739__flat_149); 
    _emal_51932__pinl_4751__flat_250 = _alloc_( 1, 0, [:int]); 
    _pinl_4751__flat_250 = _fill_( _lt_SxS_( _ctz_7782, 0.0), _emal_51932__pinl_4751__flat_250); 
    _free_( _ctz_7782); 
    left__SSA0_2, right__SSA0_1 = _MAIN::_dup_10751_QuickHull__Cond_36( left, right, i, _pinl_4751__flat_250, P) ; 
  }
  right__SSA0_2 = ( _flat_170 ? right : right__SSA0_1 ); 
  left__SSA0_3 = ( _flat_170 ? _hce_14 : left__SSA0_2 ); 
  return( left__SSA0_3, right__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10752_QuickHull__Cond_32(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_10752_QuickHull__Cond_32( int left { ,NN } , int i { ,NN } , bool _flat_177 { ,NN } )
/*
 *  _dup_10752_QuickHull__Cond_32 ::  ---
 */
{ 
  int _hce_14__SSA0_2 { , NN } ; 

  if (_flat_177) 
  { 
    _inc_rc_( i, 1); 
    _dec_rc_( left, 1); 
    _free_( _flat_177); 
  }
  else
  { 
    _free_( _flat_177); 
  }
  _hce_14__SSA0_2 = ( _flat_177 ? i : left ); 
  return( _hce_14__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10751_QuickHull__Cond_36(...) [ body ]
 ****************************************************************************/
int, int _MAIN::_dup_10751_QuickHull__Cond_36( int left { ,NN } , int right { ,NN } , int i { ,NN } , bool _flat_184 { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10751_QuickHull__Cond_36 ::  ---
 */
{ 
  int _emal_51947__iveras_51409 { , NN } ; 
  int _emal_51946__ivesli_48007 { , NN } ; 
  double _emal_51945__pinl_4762__flat_149 { , NN } ; 
  int _emal_51944__iveras_51410 { , NN } ; 
  int _emal_51943__ivesli_48005 { , NN } ; 
  double _emal_51942__pinl_4773__flat_149 { , NN } ; 
  double _emal_51941__ctz_7784 { , NN } ; 
  bool _emal_51940__pinl_4774__flat_248 { , NN } ; 
  int _iveras_51410 { , NN } ; 
  int _iveras_51409 { , NN } ; 
  int _ivesli_48007 { , NN } ; 
  int _ivesli_48005 { , NN } ; 
  double _ctz_7784 { , NN } ; 
  double _pinl_4762__flat_149 { , NN } ; 
  double _pinl_4773__flat_149 { , NN } ; 
  bool _pinl_4774__flat_248 { , NN } ; 
  int left__SSA0_2 { , NN } ; 
  int right__SSA0_2 { , NN } ; 
  int right__SSA0_1 { , NN } ; 

  if (_flat_184) 
  { 
    _inc_rc_( i, 1); 
    _dec_rc_( left, 1); 
    _free_( _flat_184); 
  }
  else
  { 
    _free_( _flat_184); 
    _emal_51947__iveras_51409 = _alloc_( 1, 0, [:int]); 
    _iveras_51409 = _fill_( 0, _emal_51947__iveras_51409); 
    _ivesli_48007 = _fill_( _idxs2offset_( [ 1000000, 2 ], right, _iveras_51409), _iveras_51409); 
    _emal_51945__pinl_4762__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4762__flat_149 = _fill_( _idx_sel_( _ivesli_48007, P), _emal_51945__pinl_4762__flat_149); 
    _free_( _ivesli_48007); 
    _emal_51944__iveras_51410 = _alloc_( 1, 0, [:int]); 
    _iveras_51410 = _fill_( 0, _emal_51944__iveras_51410); 
    _ivesli_48005 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51410), _iveras_51410); 
    _emal_51942__pinl_4773__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4773__flat_149 = _fill_( _idx_sel_( _ivesli_48005, P), _emal_51942__pinl_4773__flat_149); 
    _free_( _ivesli_48005); 
    _ctz_7784 = _fill_( _sub_SxS_( _pinl_4773__flat_149, _pinl_4762__flat_149), _pinl_4773__flat_149); 
    _free_( _pinl_4762__flat_149); 
    _emal_51940__pinl_4774__flat_248 = _alloc_( 1, 0, [:int]); 
    _pinl_4774__flat_248 = _fill_( _eq_SxS_( _ctz_7784, 0.0), _emal_51940__pinl_4774__flat_248); 
    _free_( _ctz_7784); 
    right__SSA0_1 = _MAIN::_dup_10750_QuickHull__Cond_35( right, i, _pinl_4774__flat_248, P) ; 
  }
  right__SSA0_2 = ( _flat_184 ? right : right__SSA0_1 ); 
  left__SSA0_2 = ( _flat_184 ? i : left ); 
  return( left__SSA0_2, right__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10750_QuickHull__Cond_35(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_10750_QuickHull__Cond_35( int right { ,NN } , int i { ,NN } , bool _flat_191 { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_10750_QuickHull__Cond_35 ::  ---
 */
{ 
  int _emal_51963__iveras_51413 { , NN } ; 
  int _emal_51962__ivesli_48015 { , NN } ; 
  double _emal_51961__pinl_4808__flat_149 { , NN } ; 
  int _emal_51960__iveras_51414 { , NN } ; 
  int _emal_51959__ivesli_48013 { , NN } ; 
  double _emal_51958__pinl_4819__flat_149 { , NN } ; 
  double _emal_51957__ctz_7788 { , NN } ; 
  bool _emal_51956__pinl_4820__flat_252 { , NN } ; 
  int _emal_51955__iveras_51411 { , NN } ; 
  int _emal_51954__ivesli_48011 { , NN } ; 
  double _emal_51953__pinl_4785__flat_149 { , NN } ; 
  int _emal_51952__iveras_51412 { , NN } ; 
  int _emal_51951__ivesli_48009 { , NN } ; 
  double _emal_51950__pinl_4796__flat_149 { , NN } ; 
  double _emal_51949__ctz_7786 { , NN } ; 
  bool _emal_51948__pinl_4797__flat_252 { , NN } ; 
  int _iveras_51414 { , NN } ; 
  int _iveras_51413 { , NN } ; 
  int _iveras_51412 { , NN } ; 
  int _iveras_51411 { , NN } ; 
  int _ivesli_48015 { , NN } ; 
  int _ivesli_48013 { , NN } ; 
  int _ivesli_48011 { , NN } ; 
  int _ivesli_48009 { , NN } ; 
  double _ctz_7788 { , NN } ; 
  double _ctz_7786 { , NN } ; 
  double _pinl_4808__flat_149 { , NN } ; 
  double _pinl_4819__flat_149 { , NN } ; 
  bool _pinl_4820__flat_252 { , NN } ; 
  double _pinl_4785__flat_149 { , NN } ; 
  double _pinl_4796__flat_149 { , NN } ; 
  bool _pinl_4797__flat_252 { , NN } ; 
  int right__SSA0_3 { , NN } ; 
  int right__SSA0_2 { , NN } ; 
  int _hce_15 { , NN } ; 

  if (_flat_191) 
  { 
    _free_( _flat_191); 
    _emal_51955__iveras_51411 = _alloc_( 1, 0, [:int]); 
    _iveras_51411 = _fill_( 1, _emal_51955__iveras_51411); 
    _ivesli_48011 = _fill_( _idxs2offset_( [ 1000000, 2 ], right, _iveras_51411), _iveras_51411); 
    _emal_51953__pinl_4785__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4785__flat_149 = _fill_( _idx_sel_( _ivesli_48011, P), _emal_51953__pinl_4785__flat_149); 
    _free_( _ivesli_48011); 
    _emal_51952__iveras_51412 = _alloc_( 1, 0, [:int]); 
    _iveras_51412 = _fill_( 1, _emal_51952__iveras_51412); 
    _ivesli_48009 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51412), _iveras_51412); 
    _emal_51950__pinl_4796__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4796__flat_149 = _fill_( _idx_sel_( _ivesli_48009, P), _emal_51950__pinl_4796__flat_149); 
    _free_( _ivesli_48009); 
    _ctz_7786 = _fill_( _sub_SxS_( _pinl_4796__flat_149, _pinl_4785__flat_149), _pinl_4796__flat_149); 
    _free_( _pinl_4785__flat_149); 
    _emal_51948__pinl_4797__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4797__flat_252 = _fill_( _gt_SxS_( _ctz_7786, 0.0), _emal_51948__pinl_4797__flat_252); 
    _free_( _ctz_7786); 
    _hce_15 = _MAIN::_dup_10749_QuickHull__Cond_33( right, i, _pinl_4797__flat_252) ; 
  }
  else
  { 
    _free_( _flat_191); 
    _emal_51963__iveras_51413 = _alloc_( 1, 0, [:int]); 
    _iveras_51413 = _fill_( 0, _emal_51963__iveras_51413); 
    _ivesli_48015 = _fill_( _idxs2offset_( [ 1000000, 2 ], right, _iveras_51413), _iveras_51413); 
    _emal_51961__pinl_4808__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4808__flat_149 = _fill_( _idx_sel_( _ivesli_48015, P), _emal_51961__pinl_4808__flat_149); 
    _free_( _ivesli_48015); 
    _emal_51960__iveras_51414 = _alloc_( 1, 0, [:int]); 
    _iveras_51414 = _fill_( 0, _emal_51960__iveras_51414); 
    _ivesli_48013 = _fill_( _idxs2offset_( [ 1000000, 2 ], i, _iveras_51414), _iveras_51414); 
    _emal_51958__pinl_4819__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4819__flat_149 = _fill_( _idx_sel_( _ivesli_48013, P), _emal_51958__pinl_4819__flat_149); 
    _free_( _ivesli_48013); 
    _ctz_7788 = _fill_( _sub_SxS_( _pinl_4819__flat_149, _pinl_4808__flat_149), _pinl_4819__flat_149); 
    _free_( _pinl_4808__flat_149); 
    _emal_51956__pinl_4820__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4820__flat_252 = _fill_( _gt_SxS_( _ctz_7788, 0.0), _emal_51956__pinl_4820__flat_252); 
    _free_( _ctz_7788); 
    right__SSA0_2 = _MAIN::_dup_10748_QuickHull__Cond_34( right, i, _pinl_4820__flat_252) ; 
  }
  right__SSA0_3 = ( _flat_191 ? _hce_15 : right__SSA0_2 ); 
  return( right__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10749_QuickHull__Cond_33(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_10749_QuickHull__Cond_33( int right { ,NN } , int i { ,NN } , bool _flat_198 { ,NN } )
/*
 *  _dup_10749_QuickHull__Cond_33 ::  ---
 */
{ 
  int _hce_15__SSA0_2 { , NN } ; 

  if (_flat_198) 
  { 
    _inc_rc_( i, 1); 
    _dec_rc_( right, 1); 
    _free_( _flat_198); 
  }
  else
  { 
    _free_( _flat_198); 
  }
  _hce_15__SSA0_2 = ( _flat_198 ? i : right ); 
  return( _hce_15__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_10748_QuickHull__Cond_34(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_10748_QuickHull__Cond_34( int right { ,NN } , int i { ,NN } , bool _flat_205 { ,NN } )
/*
 *  _dup_10748_QuickHull__Cond_34 ::  ---
 */
{ 
  int right__SSA0_2 { , NN } ; 

  if (_flat_205) 
  { 
    _inc_rc_( i, 1); 
    _dec_rc_( right, 1); 
    _free_( _flat_205); 
  }
  else
  { 
    _free_( _flat_205); 
  }
  right__SSA0_2 = ( _flat_205 ? i : right ); 
  return( right__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6573_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6573_BlockHoare__Loop_18( int _iveras_51416 { ,NN } , int _iveras_51415 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6104 { ,NN } , double _ls_6103 { ,NN } , double _ls_6094 { ,NN } , double _ls_6093 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6573_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_51987__emec_51716_offsetsr { , NN } ; 
  int _emal_51985__ivesli_48020 { , NN } ; 
  int _emal_51983__ivesli_48023 { , NN } ; 
  double _emal_51982__pinl_3375__flat_149 { , NN } ; 
  double _emal_51980__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_51979__flat_81__SSA3_2 { , NN } ; 
  double _emal_51978__pinl_3446__flat_95 { , NN } ; 
  double _emal_51977__pinl_3421__flat_95 { , NN } ; 
  bool _emal_51971__pinl_3471__flat_251 { , NN } ; 
  int _emal_51970__pinl_3472__flat_438 { , NN } ; 
  double _emal_51968__ctz_7548 { , NN } ; 
  bool _emal_51967__pinl_3477__flat_252 { , NN } ; 
  int _emal_51966__pinl_3480__flat_122 { , NN } ; 
  int _emal_51965__al_12129 { , NN } ; 
  bool _emal_51964__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51716_offsetsr { , NN } ; 
  int _ivesli_48023 { , NN } ; 
  int _ivesli_48021 { , NN } ; 
  int _ivesli_48020 { , NN } ; 
  int _ivesli_48019 { , NN } ; 
  int _al_12129 { , NN } ; 
  double _ctz_7548 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_51987__emec_51716_offsetsr = offsetsr; 
  _emec_51716_offsetsr = _fill_( _noop_( offsetsr), _emal_51987__emec_51716_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51716_offsetsr, numr, i), _emec_51716_offsetsr); 
  _emal_51985__ivesli_48020 = _alloc_( 1, 0, [:int]); 
  _ivesli_48020 = _fill_( _sub_SxS_( i, r), _emal_51985__ivesli_48020); 
  _ivesli_48021 = _fill_( _neg_S_( _ivesli_48020), _ivesli_48020); 
  _emal_51983__ivesli_48023 = _alloc_( 1, 0, [:int]); 
  _ivesli_48023 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48021, _iveras_51415), _emal_51983__ivesli_48023); 
  _emal_51982__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48023, P), _emal_51982__pinl_3375__flat_149); 
  _free_( _ivesli_48023); 
  _ivesli_48019 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48021, _iveras_51416), _ivesli_48021); 
  _emal_51980__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48019, P), _emal_51980__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_48019); 
  _emal_51979__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_51979__flat_81__SSA3_2); 
  _emal_51978__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6104, _pinl_3375__flat_149), _emal_51978__pinl_3446__flat_95); 
  _emal_51977__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6093, _pinl_3375__flat_149__SSA3_2), _emal_51977__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6103, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6094, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_51971__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_51971__pinl_3471__flat_251); 
  _emal_51970__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_51970__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_51968__ctz_7548 = _alloc_( 1, 0, [:int]); 
  _ctz_7548 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_51968__ctz_7548); 
  _emal_51967__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7548, 0.0), _emal_51967__pinl_3477__flat_252); 
  _free_( _ctz_7548); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_6572_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_51966__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51966__pinl_3480__flat_122); 
  _emal_51965__al_12129 = i; 
  _al_12129 = _fill_( _add_SxS_( -63, i), _emal_51965__al_12129); 
  _emal_51964__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12129, 0), _emal_51964__pinl_3481__flat_196); 
  _free_( _al_12129); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_6573_BlockHoare__Loop_18( _iveras_51416, _iveras_51415, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6104, _ls_6103, _ls_6094, _ls_6093, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6093, 1); 
    _dec_rc_( _ls_6094, 1); 
    _dec_rc_( _ls_6103, 1); 
    _dec_rc_( _ls_6104, 1); 
    _dec_rc_( _iveras_51415, 1); 
    _dec_rc_( _iveras_51416, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6572_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6572_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6572_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6559_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6559_BlockHoare__Loop_21( int _iveras_51418 { ,NN } , int _iveras_51417 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6124 { ,NN } , double _ls_6123 { ,NN } , double _ls_6114 { ,NN } , double _ls_6113 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6559_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_52010__emec_51717_offsetsl { , NN } ; 
  int _emal_52008__ivesli_48029 { , NN } ; 
  int _emal_52007__ivesli_48031 { , NN } ; 
  double _emal_52006__pinl_3253__flat_149 { , NN } ; 
  double _emal_52004__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52003__flat_68__SSA3_2 { , NN } ; 
  double _emal_52002__pinl_3324__flat_95 { , NN } ; 
  double _emal_52001__pinl_3299__flat_95 { , NN } ; 
  bool _emal_51995__pinl_3349__flat_252 { , NN } ; 
  int _emal_51994__pinl_3350__flat_438 { , NN } ; 
  double _emal_51992__ctz_7552 { , NN } ; 
  bool _emal_51991__pinl_3355__flat_252 { , NN } ; 
  int _emal_51990__pinl_3358__flat_122 { , NN } ; 
  int _emal_51989__al_12131 { , NN } ; 
  bool _emal_51988__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51717_offsetsl { , NN } ; 
  int _ivesli_48031 { , NN } ; 
  int _ivesli_48029 { , NN } ; 
  int _ivesli_48028 { , NN } ; 
  int _al_12131 { , NN } ; 
  double _ctz_7552 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_52010__emec_51717_offsetsl = offsetsl; 
  _emec_51717_offsetsl = _fill_( _noop_( offsetsl), _emal_52010__emec_51717_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51717_offsetsl, numl, i), _emec_51717_offsetsl); 
  _emal_52008__ivesli_48029 = _alloc_( 1, 0, [:int]); 
  _ivesli_48029 = _fill_( _add_SxS_( l, i), _emal_52008__ivesli_48029); 
  _emal_52007__ivesli_48031 = _alloc_( 1, 0, [:int]); 
  _ivesli_48031 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48029, _iveras_51417), _emal_52007__ivesli_48031); 
  _emal_52006__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48031, P), _emal_52006__pinl_3253__flat_149); 
  _free_( _ivesli_48031); 
  _ivesli_48028 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48029, _iveras_51418), _ivesli_48029); 
  _emal_52004__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48028, P), _emal_52004__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_48028); 
  _emal_52003__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_52003__flat_68__SSA3_2); 
  _emal_52002__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6124, _pinl_3253__flat_149), _emal_52002__pinl_3324__flat_95); 
  _emal_52001__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6113, _pinl_3253__flat_149__SSA3_2), _emal_52001__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6123, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6114, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_51995__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_51995__pinl_3349__flat_252); 
  _emal_51994__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_51994__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_51992__ctz_7552 = _alloc_( 1, 0, [:int]); 
  _ctz_7552 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_51992__ctz_7552); 
  _emal_51991__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7552, 0.0), _emal_51991__pinl_3355__flat_252); 
  _free_( _ctz_7552); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_6558_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_51990__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_51990__pinl_3358__flat_122); 
  _emal_51989__al_12131 = i; 
  _al_12131 = _fill_( _add_SxS_( -63, i), _emal_51989__al_12131); 
  _emal_51988__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12131, 0), _emal_51988__pinl_3359__flat_196); 
  _free_( _al_12131); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_6559_BlockHoare__Loop_21( _iveras_51418, _iveras_51417, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6124, _ls_6123, _ls_6114, _ls_6113, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6113, 1); 
    _dec_rc_( _ls_6114, 1); 
    _dec_rc_( _ls_6123, 1); 
    _dec_rc_( _ls_6124, 1); 
    _dec_rc_( _iveras_51417, 1); 
    _dec_rc_( _iveras_51418, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6558_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6558_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6558_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6545_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6545_BlockHoare__Loop_18( int _iveras_51420 { ,NN } , int _iveras_51419 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6144 { ,NN } , double _ls_6143 { ,NN } , double _ls_6134 { ,NN } , double _ls_6133 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6545_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_52034__emec_51718_offsetsr { , NN } ; 
  int _emal_52032__ivesli_48038 { , NN } ; 
  int _emal_52030__ivesli_48041 { , NN } ; 
  double _emal_52029__pinl_3375__flat_149 { , NN } ; 
  double _emal_52027__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52026__flat_81__SSA3_2 { , NN } ; 
  double _emal_52025__pinl_3446__flat_95 { , NN } ; 
  double _emal_52024__pinl_3421__flat_95 { , NN } ; 
  bool _emal_52018__pinl_3471__flat_251 { , NN } ; 
  int _emal_52017__pinl_3472__flat_438 { , NN } ; 
  double _emal_52015__ctz_7556 { , NN } ; 
  bool _emal_52014__pinl_3477__flat_252 { , NN } ; 
  int _emal_52013__pinl_3480__flat_122 { , NN } ; 
  int _emal_52012__al_12133 { , NN } ; 
  bool _emal_52011__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51718_offsetsr { , NN } ; 
  int _ivesli_48041 { , NN } ; 
  int _ivesli_48039 { , NN } ; 
  int _ivesli_48038 { , NN } ; 
  int _ivesli_48037 { , NN } ; 
  int _al_12133 { , NN } ; 
  double _ctz_7556 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_52034__emec_51718_offsetsr = offsetsr; 
  _emec_51718_offsetsr = _fill_( _noop_( offsetsr), _emal_52034__emec_51718_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51718_offsetsr, numr, i), _emec_51718_offsetsr); 
  _emal_52032__ivesli_48038 = _alloc_( 1, 0, [:int]); 
  _ivesli_48038 = _fill_( _sub_SxS_( i, r), _emal_52032__ivesli_48038); 
  _ivesli_48039 = _fill_( _neg_S_( _ivesli_48038), _ivesli_48038); 
  _emal_52030__ivesli_48041 = _alloc_( 1, 0, [:int]); 
  _ivesli_48041 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48039, _iveras_51419), _emal_52030__ivesli_48041); 
  _emal_52029__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48041, P), _emal_52029__pinl_3375__flat_149); 
  _free_( _ivesli_48041); 
  _ivesli_48037 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48039, _iveras_51420), _ivesli_48039); 
  _emal_52027__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48037, P), _emal_52027__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_48037); 
  _emal_52026__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_52026__flat_81__SSA3_2); 
  _emal_52025__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6144, _pinl_3375__flat_149), _emal_52025__pinl_3446__flat_95); 
  _emal_52024__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6133, _pinl_3375__flat_149__SSA3_2), _emal_52024__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6143, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6134, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_52018__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_52018__pinl_3471__flat_251); 
  _emal_52017__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_52017__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_52015__ctz_7556 = _alloc_( 1, 0, [:int]); 
  _ctz_7556 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_52015__ctz_7556); 
  _emal_52014__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7556, 0.0), _emal_52014__pinl_3477__flat_252); 
  _free_( _ctz_7556); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_6544_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_52013__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52013__pinl_3480__flat_122); 
  _emal_52012__al_12133 = i; 
  _al_12133 = _fill_( _add_SxS_( -63, i), _emal_52012__al_12133); 
  _emal_52011__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12133, 0), _emal_52011__pinl_3481__flat_196); 
  _free_( _al_12133); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_6545_BlockHoare__Loop_18( _iveras_51420, _iveras_51419, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6144, _ls_6143, _ls_6134, _ls_6133, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6133, 1); 
    _dec_rc_( _ls_6134, 1); 
    _dec_rc_( _ls_6143, 1); 
    _dec_rc_( _ls_6144, 1); 
    _dec_rc_( _iveras_51419, 1); 
    _dec_rc_( _iveras_51420, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6544_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6544_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6544_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6531_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6531_BlockHoare__Loop_21( int _iveras_51422 { ,NN } , int _iveras_51421 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6164 { ,NN } , double _ls_6163 { ,NN } , double _ls_6154 { ,NN } , double _ls_6153 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6531_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_52057__emec_51719_offsetsl { , NN } ; 
  int _emal_52055__ivesli_48047 { , NN } ; 
  int _emal_52054__ivesli_48049 { , NN } ; 
  double _emal_52053__pinl_3253__flat_149 { , NN } ; 
  double _emal_52051__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52050__flat_68__SSA3_2 { , NN } ; 
  double _emal_52049__pinl_3324__flat_95 { , NN } ; 
  double _emal_52048__pinl_3299__flat_95 { , NN } ; 
  bool _emal_52042__pinl_3349__flat_252 { , NN } ; 
  int _emal_52041__pinl_3350__flat_438 { , NN } ; 
  double _emal_52039__ctz_7560 { , NN } ; 
  bool _emal_52038__pinl_3355__flat_252 { , NN } ; 
  int _emal_52037__pinl_3358__flat_122 { , NN } ; 
  int _emal_52036__al_12135 { , NN } ; 
  bool _emal_52035__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51719_offsetsl { , NN } ; 
  int _ivesli_48049 { , NN } ; 
  int _ivesli_48047 { , NN } ; 
  int _ivesli_48046 { , NN } ; 
  int _al_12135 { , NN } ; 
  double _ctz_7560 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_52057__emec_51719_offsetsl = offsetsl; 
  _emec_51719_offsetsl = _fill_( _noop_( offsetsl), _emal_52057__emec_51719_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51719_offsetsl, numl, i), _emec_51719_offsetsl); 
  _emal_52055__ivesli_48047 = _alloc_( 1, 0, [:int]); 
  _ivesli_48047 = _fill_( _add_SxS_( l, i), _emal_52055__ivesli_48047); 
  _emal_52054__ivesli_48049 = _alloc_( 1, 0, [:int]); 
  _ivesli_48049 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48047, _iveras_51421), _emal_52054__ivesli_48049); 
  _emal_52053__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48049, P), _emal_52053__pinl_3253__flat_149); 
  _free_( _ivesli_48049); 
  _ivesli_48046 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48047, _iveras_51422), _ivesli_48047); 
  _emal_52051__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48046, P), _emal_52051__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_48046); 
  _emal_52050__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_52050__flat_68__SSA3_2); 
  _emal_52049__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6164, _pinl_3253__flat_149), _emal_52049__pinl_3324__flat_95); 
  _emal_52048__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6153, _pinl_3253__flat_149__SSA3_2), _emal_52048__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6163, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6154, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_52042__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_52042__pinl_3349__flat_252); 
  _emal_52041__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_52041__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_52039__ctz_7560 = _alloc_( 1, 0, [:int]); 
  _ctz_7560 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_52039__ctz_7560); 
  _emal_52038__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7560, 0.0), _emal_52038__pinl_3355__flat_252); 
  _free_( _ctz_7560); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_6530_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_52037__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52037__pinl_3358__flat_122); 
  _emal_52036__al_12135 = i; 
  _al_12135 = _fill_( _add_SxS_( -63, i), _emal_52036__al_12135); 
  _emal_52035__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12135, 0), _emal_52035__pinl_3359__flat_196); 
  _free_( _al_12135); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_6531_BlockHoare__Loop_21( _iveras_51422, _iveras_51421, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6164, _ls_6163, _ls_6154, _ls_6153, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6153, 1); 
    _dec_rc_( _ls_6154, 1); 
    _dec_rc_( _ls_6163, 1); 
    _dec_rc_( _ls_6164, 1); 
    _dec_rc_( _iveras_51421, 1); 
    _dec_rc_( _iveras_51422, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6530_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6530_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6530_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6517_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6517_BlockHoare__Loop_18( int _iveras_51424 { ,NN } , int _iveras_51423 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6184 { ,NN } , double _ls_6183 { ,NN } , double _ls_6174 { ,NN } , double _ls_6173 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6517_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_52081__emec_51720_offsetsr { , NN } ; 
  int _emal_52079__ivesli_48056 { , NN } ; 
  int _emal_52077__ivesli_48059 { , NN } ; 
  double _emal_52076__pinl_3375__flat_149 { , NN } ; 
  double _emal_52074__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52073__flat_81__SSA3_2 { , NN } ; 
  double _emal_52072__pinl_3446__flat_95 { , NN } ; 
  double _emal_52071__pinl_3421__flat_95 { , NN } ; 
  bool _emal_52065__pinl_3471__flat_251 { , NN } ; 
  int _emal_52064__pinl_3472__flat_438 { , NN } ; 
  double _emal_52062__ctz_7564 { , NN } ; 
  bool _emal_52061__pinl_3477__flat_252 { , NN } ; 
  int _emal_52060__pinl_3480__flat_122 { , NN } ; 
  int _emal_52059__al_12137 { , NN } ; 
  bool _emal_52058__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51720_offsetsr { , NN } ; 
  int _ivesli_48059 { , NN } ; 
  int _ivesli_48057 { , NN } ; 
  int _ivesli_48056 { , NN } ; 
  int _ivesli_48055 { , NN } ; 
  int _al_12137 { , NN } ; 
  double _ctz_7564 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_52081__emec_51720_offsetsr = offsetsr; 
  _emec_51720_offsetsr = _fill_( _noop_( offsetsr), _emal_52081__emec_51720_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51720_offsetsr, numr, i), _emec_51720_offsetsr); 
  _emal_52079__ivesli_48056 = _alloc_( 1, 0, [:int]); 
  _ivesli_48056 = _fill_( _sub_SxS_( i, r), _emal_52079__ivesli_48056); 
  _ivesli_48057 = _fill_( _neg_S_( _ivesli_48056), _ivesli_48056); 
  _emal_52077__ivesli_48059 = _alloc_( 1, 0, [:int]); 
  _ivesli_48059 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48057, _iveras_51423), _emal_52077__ivesli_48059); 
  _emal_52076__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48059, P), _emal_52076__pinl_3375__flat_149); 
  _free_( _ivesli_48059); 
  _ivesli_48055 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48057, _iveras_51424), _ivesli_48057); 
  _emal_52074__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48055, P), _emal_52074__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_48055); 
  _emal_52073__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_52073__flat_81__SSA3_2); 
  _emal_52072__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6184, _pinl_3375__flat_149), _emal_52072__pinl_3446__flat_95); 
  _emal_52071__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6173, _pinl_3375__flat_149__SSA3_2), _emal_52071__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6183, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6174, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_52065__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_52065__pinl_3471__flat_251); 
  _emal_52064__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_52064__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_52062__ctz_7564 = _alloc_( 1, 0, [:int]); 
  _ctz_7564 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_52062__ctz_7564); 
  _emal_52061__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7564, 0.0), _emal_52061__pinl_3477__flat_252); 
  _free_( _ctz_7564); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_6516_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_52060__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52060__pinl_3480__flat_122); 
  _emal_52059__al_12137 = i; 
  _al_12137 = _fill_( _add_SxS_( -63, i), _emal_52059__al_12137); 
  _emal_52058__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12137, 0), _emal_52058__pinl_3481__flat_196); 
  _free_( _al_12137); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_6517_BlockHoare__Loop_18( _iveras_51424, _iveras_51423, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6184, _ls_6183, _ls_6174, _ls_6173, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6173, 1); 
    _dec_rc_( _ls_6174, 1); 
    _dec_rc_( _ls_6183, 1); 
    _dec_rc_( _ls_6184, 1); 
    _dec_rc_( _iveras_51423, 1); 
    _dec_rc_( _iveras_51424, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6516_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6516_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6516_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6503_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6503_BlockHoare__Loop_21( int _iveras_51426 { ,NN } , int _iveras_51425 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6204 { ,NN } , double _ls_6203 { ,NN } , double _ls_6194 { ,NN } , double _ls_6193 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6503_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_52104__emec_51721_offsetsl { , NN } ; 
  int _emal_52102__ivesli_48065 { , NN } ; 
  int _emal_52101__ivesli_48067 { , NN } ; 
  double _emal_52100__pinl_3253__flat_149 { , NN } ; 
  double _emal_52098__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52097__flat_68__SSA3_2 { , NN } ; 
  double _emal_52096__pinl_3324__flat_95 { , NN } ; 
  double _emal_52095__pinl_3299__flat_95 { , NN } ; 
  bool _emal_52089__pinl_3349__flat_252 { , NN } ; 
  int _emal_52088__pinl_3350__flat_438 { , NN } ; 
  double _emal_52086__ctz_7568 { , NN } ; 
  bool _emal_52085__pinl_3355__flat_252 { , NN } ; 
  int _emal_52084__pinl_3358__flat_122 { , NN } ; 
  int _emal_52083__al_12139 { , NN } ; 
  bool _emal_52082__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51721_offsetsl { , NN } ; 
  int _ivesli_48067 { , NN } ; 
  int _ivesli_48065 { , NN } ; 
  int _ivesli_48064 { , NN } ; 
  int _al_12139 { , NN } ; 
  double _ctz_7568 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_52104__emec_51721_offsetsl = offsetsl; 
  _emec_51721_offsetsl = _fill_( _noop_( offsetsl), _emal_52104__emec_51721_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51721_offsetsl, numl, i), _emec_51721_offsetsl); 
  _emal_52102__ivesli_48065 = _alloc_( 1, 0, [:int]); 
  _ivesli_48065 = _fill_( _add_SxS_( l, i), _emal_52102__ivesli_48065); 
  _emal_52101__ivesli_48067 = _alloc_( 1, 0, [:int]); 
  _ivesli_48067 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48065, _iveras_51425), _emal_52101__ivesli_48067); 
  _emal_52100__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48067, P), _emal_52100__pinl_3253__flat_149); 
  _free_( _ivesli_48067); 
  _ivesli_48064 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48065, _iveras_51426), _ivesli_48065); 
  _emal_52098__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48064, P), _emal_52098__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_48064); 
  _emal_52097__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_52097__flat_68__SSA3_2); 
  _emal_52096__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6204, _pinl_3253__flat_149), _emal_52096__pinl_3324__flat_95); 
  _emal_52095__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6193, _pinl_3253__flat_149__SSA3_2), _emal_52095__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6203, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6194, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_52089__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_52089__pinl_3349__flat_252); 
  _emal_52088__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_52088__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_52086__ctz_7568 = _alloc_( 1, 0, [:int]); 
  _ctz_7568 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_52086__ctz_7568); 
  _emal_52085__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7568, 0.0), _emal_52085__pinl_3355__flat_252); 
  _free_( _ctz_7568); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_6502_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_52084__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52084__pinl_3358__flat_122); 
  _emal_52083__al_12139 = i; 
  _al_12139 = _fill_( _add_SxS_( -63, i), _emal_52083__al_12139); 
  _emal_52082__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12139, 0), _emal_52082__pinl_3359__flat_196); 
  _free_( _al_12139); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_6503_BlockHoare__Loop_21( _iveras_51426, _iveras_51425, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6204, _ls_6203, _ls_6194, _ls_6193, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6193, 1); 
    _dec_rc_( _ls_6194, 1); 
    _dec_rc_( _ls_6203, 1); 
    _dec_rc_( _ls_6204, 1); 
    _dec_rc_( _iveras_51425, 1); 
    _dec_rc_( _iveras_51426, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6502_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6502_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6502_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_6489_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_6489_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6489_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_52123__esd_29401 { , NN } ; 
  bool _emal_52122__pinl_3238__flat_194 { , NN } ; 
  int _emal_52121__esd_29400 { , NN } ; 
  bool _emal_52120__pinl_3360__flat_194 { , NN } ; 
  int _emal_52119__ctz_7574 { , NN } ; 
  bool _emal_52118__pinl_3482__flat_196 { , NN } ; 
  int _emal_52117__esd_7875 { , NN } ; 
  bool _emal_52116__pinl_3483__flat_196 { , NN } ; 
  int _emal_52115__pinl_3748__flat_41 { , NN } ; 
  int _emal_52114__pinl_3749__flat_41 { , NN } ; 
  int _emal_52113__pinl_3750__flat_40 { , NN } ; 
  int _emal_52112__pinl_3751__flat_40 { , NN } ; 
  int _emal_52111__esd_29396 { , NN } ; 
  bool _emal_52110__pinl_3752__flat_194 { , NN } ; 
  int _emal_52109__esd_29395 { , NN } ; 
  bool _emal_52108__pinl_3754__flat_194 { , NN } ; 
  int _emal_52107__pinl_3757__flat_41 { , NN } ; 
  bool _emal_52105__pinl_3758__flat_198 { , NN } ; 
  int _esd_29401 { , NN } ; 
  int _esd_29400 { , NN } ; 
  int _esd_29396 { , NN } ; 
  int _esd_29395 { , NN } ; 
  int _esd_7875 { , NN } ; 
  int _ctz_7574 { , NN } ; 
  int _ctz_7570 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_52123__esd_29401 = _alloc_( 1, 0, [:int]); 
  _esd_29401 = _fill_( _neg_S_( numl), _emal_52123__esd_29401); 
  _emal_52122__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29401, 0), _emal_52122__pinl_3238__flat_194); 
  _free_( _esd_29401); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_6480_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_52121__esd_29400 = _alloc_( 1, 0, [:int]); 
  _esd_29400 = _fill_( _neg_S_( numr), _emal_52121__esd_29400); 
  _emal_52120__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29400, 0), _emal_52120__pinl_3360__flat_194); 
  _free_( _esd_29400); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_6483_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_52119__ctz_7574 = _alloc_( 1, 0, [:int]); 
  _ctz_7574 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_52119__ctz_7574); 
  _emal_52118__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7574, 0), _emal_52118__pinl_3482__flat_196); 
  _free_( _ctz_7574); 
  _hce_7 = _MAIN::_dup_6484_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_52117__esd_7875 = _alloc_( 1, 0, [:int]); 
  _esd_7875 = _fill_( _neg_S_( _hce_7), _emal_52117__esd_7875); 
  _emal_52116__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_7875, 0), _emal_52116__pinl_3483__flat_196); 
  _free_( _esd_7875); 
  P__SSA0_1 = _MAIN::_dup_6486_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_52115__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_52115__pinl_3748__flat_41); 
  _emal_52114__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_52114__pinl_3749__flat_41); 
  _emal_52113__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_52113__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_52112__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_52112__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_52111__esd_29396 = _alloc_( 1, 0, [:int]); 
  _esd_29396 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_52111__esd_29396); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_52110__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29396, 0), _emal_52110__pinl_3752__flat_194); 
  _free_( _esd_29396); 
  l__SSA0_1 = _MAIN::_dup_6487_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_52109__esd_29395 = _alloc_( 1, 0, [:int]); 
  _esd_29395 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_52109__esd_29395); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_52108__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29395, 0), _emal_52108__pinl_3754__flat_194); 
  _free_( _esd_29395); 
  r__SSA0_1 = _MAIN::_dup_6488_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_52107__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_52107__pinl_3757__flat_41); 
  _ctz_7570 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_52105__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7570, 0), _emal_52105__pinl_3758__flat_198); 
  _free_( _ctz_7570); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_6489_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6488_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_6488_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_6488_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_52124__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_52124__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_52124__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6487_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_6487_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_6487_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_52125__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_52125__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_52125__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6486_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_6486_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6486_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55720_val { , NN } ; 
  bool _emrb_55719_mem { , NN } ; 
  double[1000000,2] _emlr_55163_P { , NN } ; 
  double[1000000,2] _emlr_55162_P { , NN } ; 
  int{0} _emlr_55161_j { , NN } ; 
  int _emlr_55160_j { , NN } ; 
  int _emal_52129__dlirmov_51605__iveras_51427 { , NN } ; 
  int _emal_52128__dlirmov_51606__iveras_51428 { , NN } ; 
  int _emal_52127__dlirmov_51607__iveras_51429 { , NN } ; 
  int _emal_52126__dlirmov_51608__iveras_51430 { , NN } ; 
  int _dlirmov_51608__iveras_51430 { , NN } ; 
  int _dlirmov_51607__iveras_51429 { , NN } ; 
  int _dlirmov_51606__iveras_51428 { , NN } ; 
  int _dlirmov_51605__iveras_51427 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_52129__dlirmov_51605__iveras_51427 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51605__iveras_51427 = _fill_( 0, _emal_52129__dlirmov_51605__iveras_51427); 
    _emal_52128__dlirmov_51606__iveras_51428 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51606__iveras_51428 = _fill_( 0, _emal_52128__dlirmov_51606__iveras_51428); 
    _emal_52127__dlirmov_51607__iveras_51429 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51607__iveras_51429 = _fill_( 1, _emal_52127__dlirmov_51607__iveras_51429); 
    _emal_52126__dlirmov_51608__iveras_51430 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51608__iveras_51430 = _fill_( 1, _emal_52126__dlirmov_51608__iveras_51430); 
    _emlr_55162_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55719_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55720_val = _fill_( _isreused_( _emlr_55162_P, P), _emrb_55719_mem); 
    _emlr_55163_P = _MAIN::_dup_6486_BlockHoare__Cond_16__ReuseCond_39( _emrb_55720_val, _emlr_55162_P, P) ; 
    _emlr_55160_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55161_j = _fill_( _copy_( j), _emlr_55160_j); 
    P__SSA0_1 = _MAIN::_dup_6485_BlockHoare__Loop_15( _dlirmov_51608__iveras_51430, _dlirmov_51607__iveras_51429, _dlirmov_51606__iveras_51428, _dlirmov_51605__iveras_51427, offsetsl, offsetsr, startl, startr, num, _emlr_55161_j, r, l, _emlr_55163_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6486_BlockHoare__Cond_16__ReuseCond_39(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_6486_BlockHoare__Cond_16__ReuseCond_39( bool _emrb_55715 { ,NN } , double[1000000,2] _emlr_55162_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6486_BlockHoare__Cond_16__ReuseCond_39 ::  ---
 */
{ 
  double[1000000,2] _emrb_55718 { , NN } ; 
  double[1000000,2] _dup_55717__emlr_55163_P { , NN } ; 
  double[1000000,2] _dup_55716__emlr_55163_P { , NN } ; 

  if (_emrb_55715) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55715, 1); 
    _dup_55716__emlr_55163_P = _fill_( _noop_( P), _emlr_55162_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55715, 1); 
    _dup_55717__emlr_55163_P = _fill_( _copy_( P), _emlr_55162_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55718 = ( _emrb_55715 ? _dup_55716__emlr_55163_P : _dup_55717__emlr_55163_P ); 
  return( _emrb_55718); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_6485_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_6485_BlockHoare__Loop_15( int _iveras_51430 { ,NN } , int _iveras_51429 { ,NN } , int _iveras_51428 { ,NN } , int _iveras_51427 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6485_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55754 { , NN } ; 
  double _emdr_55753 { , NN } ; 
  double _emdr_55752 { , NN } ; 
  int _emal_52185__ivesli_48090 { , NN } ; 
  int _emal_52184__pinl_3507__flat_68 { , NN } ; 
  int _emal_52183__pinl_3510__flat_41 { , NN } ; 
  int _emal_52182__ivesli_48087 { , NN } ; 
  int _emal_52181__pinl_3522__flat_68 { , NN } ; 
  int _emal_52180__pinl_3525__flat_40 { , NN } ; 
  int _emal_52177__ivesli_48086 { , NN } ; 
  double _emal_52176__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_52174__ivesli_48082 { , NN } ; 
  double _emal_52173__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_52170__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52168__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52166__uprf_7362 { , NN } ; 
  int _emal_52165__pinl_5484_z { , NN } ; 
  double _emal_52161_val { , NN } ; 
  double _emal_52160_val { , NN } ; 
  double[1000000,2] _emal_52159__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_52158__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_52157__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_52155__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52154__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52152__uprf_7359 { , NN } ; 
  int _emal_52151__pinl_5504_z { , NN } ; 
  double _emal_52147_val { , NN } ; 
  double _emal_52146_val { , NN } ; 
  double _emal_52144__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_52143__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_52141__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52140__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52135_val { , NN } ; 
  double _emal_52134_val { , NN } ; 
  int _emal_52132__pinl_3746__flat_122 { , NN } ; 
  int _emal_52131__ctz_7576 { , NN } ; 
  bool _emal_52130__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48090 { , NN } ; 
  int _ivesli_48087 { , NN } ; 
  int _ivesli_48086 { , NN } ; 
  int _ivesli_48084 { , NN } ; 
  int _ivesli_48083 { , NN } ; 
  int _ivesli_48082 { , NN } ; 
  int _ivesli_48080 { , NN } ; 
  int _ivesli_48079 { , NN } ; 
  int _ivesli_48075 { , NN } ; 
  int _wlidx_47864__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47863__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47862__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11003 { , NN } ; 
  int[2] _wlsb_10975 { , NN } ; 
  int[2] _wlsb_10947 { , NN } ; 
  int _eat_10345 { , NN } ; 
  int _eat_10344 { , NN } ; 
  int _eat_10343 { , NN } ; 
  int _ctz_7576 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7362 { , NN } ; 
  int _uprf_7359 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5484_z { , NN } ; 
  int _pinl_5504_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_52185__ivesli_48090 = _alloc_( 1, 0, [:int]); 
  _ivesli_48090 = _fill_( _add_SxS_( startr, j), _emal_52185__ivesli_48090); 
  _emal_52184__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48090, offsetsr), _emal_52184__pinl_3507__flat_68); 
  _free_( _ivesli_48090); 
  _emal_52183__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_52183__pinl_3510__flat_41); 
  _emal_52182__ivesli_48087 = _alloc_( 1, 0, [:int]); 
  _ivesli_48087 = _fill_( _add_SxS_( startl, j), _emal_52182__ivesli_48087); 
  _emal_52181__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48087, offsetsl), _emal_52181__pinl_3522__flat_68); 
  _free_( _ivesli_48087); 
  _emal_52180__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_52180__pinl_3525__flat_40); 
  _ivesli_48083 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48084 = _fill_( _neg_S_( _ivesli_48083), _ivesli_48083); 
  _emal_52177__ivesli_48086 = _alloc_( 1, 0, [:int]); 
  _ivesli_48086 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48084, _iveras_51427), _emal_52177__ivesli_48086); 
  _emal_52176__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48086, P), _emal_52176__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48080 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_52174__ivesli_48082 = _alloc_( 1, 0, [:int]); 
  _ivesli_48082 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48080, _iveras_51428), _emal_52174__ivesli_48082); 
  _emal_52173__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48082, P), _emal_52173__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48079 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48084, _iveras_51429), _ivesli_48084); 
  _emal_52170__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48079, P), _emal_52170__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48075 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48080, _iveras_51430), _ivesli_48080); 
  _emal_52168__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48075, P), _emal_52168__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_52166__uprf_7362 = _alloc_( 1, 0, [:int]); 
  _uprf_7362 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_52166__uprf_7362); 
  _emal_52165__pinl_5484_z = _alloc_( 1, 0, [:int]); 
  _pinl_5484_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7362), _emal_52165__pinl_5484_z); 
  _emal_52159__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10343 = _alloc_( 1, 0, [:int]); 
  _wlidx_47862__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_11003=[_pinl_3681__eat_766, _eat_10343] (IDXS:_wlidx_47862__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52160_val = _wl_assign_( _pinl_3716__flat_1457, _emal_52159__pinl_3535_P__SSA0_1, _wlsb_11003, _wlidx_47862__pinl_3535_P__SSA0_1); 
        } : _emal_52160_val ; ,
      op_1 =
        { 
          _emal_52161_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_52159__pinl_3535_P__SSA0_1, _wlsb_11003, _wlidx_47862__pinl_3535_P__SSA0_1); 
        } : _emal_52161_val ; ,
      op_2 =
        { 
          _emdr_55752 = _noop_( _wlsb_11003); 
        } : _emdr_55752 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7362, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7362), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7362, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7362), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5484_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5484_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_52159__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47862__pinl_3535_P__SSA0_1)); 
  _free_( _eat_10343); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47862__pinl_3535_P__SSA0_1); 
  _emal_52158__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48086, _pinl_3535_P__SSA0_1), _emal_52158__pinl_3675__flat_149__SSA2_1); 
  _emal_52157__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48082, _pinl_3535_P__SSA0_1), _emal_52157__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_52155__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48079, _pinl_3535_P__SSA0_1), _emal_52155__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52154__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48075, _pinl_3535_P__SSA0_1), _emal_52154__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52152__uprf_7359 = _alloc_( 1, 0, [:int]); 
  _uprf_7359 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_52152__uprf_7359); 
  _emal_52151__pinl_5504_z = _alloc_( 1, 0, [:int]); 
  _pinl_5504_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7359), _emal_52151__pinl_5504_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10344 = _alloc_( 1, 0, [:int]); 
  _wlidx_47863__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_10975=[_pinl_3613__eat_766, _eat_10344] (IDXS:_wlidx_47863__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52146_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_10975, _wlidx_47863__pinl_3537_P__SSA0_3); 
        } : _emal_52146_val ; ,
      op_1 =
        { 
          _emal_52147_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_10975, _wlidx_47863__pinl_3537_P__SSA0_3); 
        } : _emal_52147_val ; ,
      op_2 =
        { 
          _emdr_55753 = _noop_( _wlsb_10975); 
        } : _emdr_55753 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7359, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7359), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7359, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7359), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5504_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5504_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47863__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_5504_z); 
  _free_( _uprf_7359); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_10344); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47863__pinl_3537_P__SSA0_3); 
  _emal_52144__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48086, _pinl_3537_P__SSA0_3), _emal_52144__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48086); 
  _emal_52143__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48082, _pinl_3537_P__SSA0_3), _emal_52143__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48082); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_52141__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48079, _pinl_3537_P__SSA0_3), _emal_52141__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48079); 
  _emal_52140__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48075, _pinl_3537_P__SSA0_3), _emal_52140__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48075); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10345 = _alloc_( 1, 0, [:int]); 
  _wlidx_47864__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_10947=[_pinl_3545__eat_766, _eat_10345] (IDXS:_wlidx_47864__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52134_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_10947, _wlidx_47864__pinl_3539_P__SSA0_5); 
        } : _emal_52134_val ; ,
      op_1 =
        { 
          _emal_52135_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_10947, _wlidx_47864__pinl_3539_P__SSA0_5); 
        } : _emal_52135_val ; ,
      op_2 =
        { 
          _emdr_55754 = _noop_( _wlsb_10947); 
        } : _emdr_55754 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7362, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7362), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7362, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7362), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5484_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5484_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47864__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_5484_z); 
  _free_( _uprf_7362); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_10345); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47864__pinl_3539_P__SSA0_5); 
  _emal_52132__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_52132__pinl_3746__flat_122); 
  _emal_52131__ctz_7576 = _alloc_( 1, 0, [:int]); 
  _ctz_7576 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_52131__ctz_7576); 
  _emal_52130__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7576, 0), _emal_52130__pinl_3747__flat_196); 
  _free_( _ctz_7576); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_6485_BlockHoare__Loop_15( _iveras_51430, _iveras_51429, _iveras_51428, _iveras_51427, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51427, 1); 
    _dec_rc_( _iveras_51428, 1); 
    _dec_rc_( _iveras_51429, 1); 
    _dec_rc_( _iveras_51430, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6484_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_6484_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_6484_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6483_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_6483_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6483_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55713_val { , NN } ; 
  bool _emrb_55712_mem { , NN } ; 
  int{0} _emlr_55169_startr__SSA0_1 { , NN } ; 
  int _emlr_55168_startr__SSA0_1 { , NN } ; 
  int _emlr_55167_numr { , NN } ; 
  int _emlr_55166_numr { , NN } ; 
  int[64] _emlr_55165_offsetsr { , NN } ; 
  int[64] _emlr_55164_offsetsr { , NN } ; 
  int _emal_52193_startr__SSA0_1 { , NN } ; 
  int _emal_52192__ivesplit_24051 { , NN } ; 
  double _emal_52191__pinl_6469__ls_6309 { , NN } ; 
  double _emal_52190__pinl_6470__ls_6310 { , NN } ; 
  double _emal_52189__pinl_6465__ls_6299 { , NN } ; 
  double _emal_52188__pinl_6466__ls_6300 { , NN } ; 
  int _emal_52187__dlirmov_51603__iveras_51431 { , NN } ; 
  int _emal_52186__dlirmov_51604__iveras_51432 { , NN } ; 
  int _dlirmov_51604__iveras_51432 { , NN } ; 
  int _dlirmov_51603__iveras_51431 { , NN } ; 
  int{1} _ivesplit_24051 { , NN } ; 
  double _pinl_6470__ls_6310 { , NN } ; 
  double _pinl_6469__ls_6309 { , NN } ; 
  double _pinl_6466__ls_6300 { , NN } ; 
  double _pinl_6465__ls_6299 { , NN } ; 
  int _pinl_6462_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_6461_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_6460_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6459_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_52193_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_52193_startr__SSA0_1); 
    _emal_52192__ivesplit_24051 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24051 = _fill_( 1, _emal_52192__ivesplit_24051); 
    _emal_52191__pinl_6469__ls_6309 = _alloc_( 1, 0, [:int]); 
    _pinl_6469__ls_6309 = _fill_( _idx_sel_( _ivesplit_24051, q), _emal_52191__pinl_6469__ls_6309); 
    _emal_52190__pinl_6470__ls_6310 = _alloc_( 1, 0, [:int]); 
    _pinl_6470__ls_6310 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_52190__pinl_6470__ls_6310); 
    _emal_52189__pinl_6465__ls_6299 = _alloc_( 1, 0, [:int]); 
    _pinl_6465__ls_6299 = _fill_( _idx_sel_( _ivesplit_24051, p), _emal_52189__pinl_6465__ls_6299); 
    _free_( _ivesplit_24051); 
    _emal_52188__pinl_6466__ls_6300 = _alloc_( 1, 0, [:int]); 
    _pinl_6466__ls_6300 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_52188__pinl_6466__ls_6300); 
    _emal_52187__dlirmov_51603__iveras_51431 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51603__iveras_51431 = _fill_( 0, _emal_52187__dlirmov_51603__iveras_51431); 
    _emal_52186__dlirmov_51604__iveras_51432 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51604__iveras_51432 = _fill_( 1, _emal_52186__dlirmov_51604__iveras_51432); 
    _emlr_55168_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55169_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55168_startr__SSA0_1); 
    _emlr_55166_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55167_numr = _fill_( _copy_( numr), _emlr_55166_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55164_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55712_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55713_val = _fill_( _isreused_( _emlr_55164_offsetsr, offsetsr), _emrb_55712_mem); 
    _emlr_55165_offsetsr = _MAIN::_dup_6483_BlockHoare__Cond_20__ReuseCond_38( _emrb_55713_val, _emlr_55164_offsetsr, offsetsr) ; 
    _pinl_6459_argmax__SSA0_1, _pinl_6460_max__SSA0_1, _pinl_6461_offsetsr__SSA0_1, _pinl_6462_numr__SSA0_1 = _MAIN::_dup_6482_BlockHoare__Loop_18( _dlirmov_51604__iveras_51432, _dlirmov_51603__iveras_51431, argmax, max, _emlr_55165_offsetsr, _emlr_55167_numr, _emlr_55169_startr__SSA0_1, _pinl_6470__ls_6310, _pinl_6469__ls_6309, _pinl_6466__ls_6300, _pinl_6465__ls_6299, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_6462_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_6461_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_6460_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_6459_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6483_BlockHoare__Cond_20__ReuseCond_38(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_6483_BlockHoare__Cond_20__ReuseCond_38( bool _emrb_55708 { ,NN } , int[64] _emlr_55164_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_6483_BlockHoare__Cond_20__ReuseCond_38 ::  ---
 */
{ 
  int[64] _emrb_55711 { , NN } ; 
  int[64] _dup_55710__emlr_55165_offsetsr { , NN } ; 
  int[64] _dup_55709__emlr_55165_offsetsr { , NN } ; 

  if (_emrb_55708) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55708, 1); 
    _dup_55709__emlr_55165_offsetsr = _fill_( _noop_( offsetsr), _emlr_55164_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55708, 1); 
    _dup_55710__emlr_55165_offsetsr = _fill_( _copy_( offsetsr), _emlr_55164_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55711 = ( _emrb_55708 ? _dup_55709__emlr_55165_offsetsr : _dup_55710__emlr_55165_offsetsr ); 
  return( _emrb_55711); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6482_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6482_BlockHoare__Loop_18( int _iveras_51432 { ,NN } , int _iveras_51431 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_6304 { ,NN } , double _ls_6303 { ,NN } , double _ls_6294 { ,NN } , double _ls_6293 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6482_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_52217__emec_51722_offsetsr { , NN } ; 
  int _emal_52215__ivesli_48097 { , NN } ; 
  int _emal_52213__ivesli_48100 { , NN } ; 
  double _emal_52212__pinl_3375__flat_149 { , NN } ; 
  double _emal_52210__pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52209__flat_81__SSA3_2 { , NN } ; 
  double _emal_52208__pinl_3446__flat_95 { , NN } ; 
  double _emal_52207__pinl_3421__flat_95 { , NN } ; 
  bool _emal_52201__pinl_3471__flat_251 { , NN } ; 
  int _emal_52200__pinl_3472__flat_438 { , NN } ; 
  double _emal_52198__ctz_7580 { , NN } ; 
  bool _emal_52197__pinl_3477__flat_252 { , NN } ; 
  int _emal_52196__pinl_3480__flat_122 { , NN } ; 
  int _emal_52195__al_12145 { , NN } ; 
  bool _emal_52194__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51722_offsetsr { , NN } ; 
  int _ivesli_48100 { , NN } ; 
  int _ivesli_48098 { , NN } ; 
  int _ivesli_48097 { , NN } ; 
  int _ivesli_48096 { , NN } ; 
  int _al_12145 { , NN } ; 
  double _ctz_7580 { , NN } ; 
  double[2] _flat_81__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_52217__emec_51722_offsetsr = offsetsr; 
  _emec_51722_offsetsr = _fill_( _noop_( offsetsr), _emal_52217__emec_51722_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51722_offsetsr, numr, i), _emec_51722_offsetsr); 
  _emal_52215__ivesli_48097 = _alloc_( 1, 0, [:int]); 
  _ivesli_48097 = _fill_( _sub_SxS_( i, r), _emal_52215__ivesli_48097); 
  _ivesli_48098 = _fill_( _neg_S_( _ivesli_48097), _ivesli_48097); 
  _emal_52213__ivesli_48100 = _alloc_( 1, 0, [:int]); 
  _ivesli_48100 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48098, _iveras_51431), _emal_52213__ivesli_48100); 
  _emal_52212__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48100, P), _emal_52212__pinl_3375__flat_149); 
  _free_( _ivesli_48100); 
  _ivesli_48096 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48098, _iveras_51432), _ivesli_48098); 
  _emal_52210__pinl_3375__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48096, P), _emal_52210__pinl_3375__flat_149__SSA3_2); 
  _free_( _ivesli_48096); 
  _emal_52209__flat_81__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA3_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA3_2 ], _emal_52209__flat_81__SSA3_2); 
  _emal_52208__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_6304, _pinl_3375__flat_149), _emal_52208__pinl_3446__flat_95); 
  _emal_52207__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_6293, _pinl_3375__flat_149__SSA3_2), _emal_52207__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_6303, _pinl_3375__flat_149__SSA3_2), _pinl_3375__flat_149__SSA3_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_6294, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_52201__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_52201__pinl_3471__flat_251); 
  _emal_52200__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_52200__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_52198__ctz_7580 = _alloc_( 1, 0, [:int]); 
  _ctz_7580 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_52198__ctz_7580); 
  _emal_52197__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_7580, 0.0), _emal_52197__pinl_3477__flat_252); 
  _free_( _ctz_7580); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_6481_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA3_2, max, _pinl_3392__flat_95) ; 
  _emal_52196__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52196__pinl_3480__flat_122); 
  _emal_52195__al_12145 = i; 
  _al_12145 = _fill_( _add_SxS_( -63, i), _emal_52195__al_12145); 
  _emal_52194__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_12145, 0), _emal_52194__pinl_3481__flat_196); 
  _free_( _al_12145); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_6482_BlockHoare__Loop_18( _iveras_51432, _iveras_51431, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_6304, _ls_6303, _ls_6294, _ls_6293, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_6293, 1); 
    _dec_rc_( _ls_6294, 1); 
    _dec_rc_( _ls_6303, 1); 
    _dec_rc_( _ls_6304, 1); 
    _dec_rc_( _iveras_51431, 1); 
    _dec_rc_( _iveras_51432, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6481_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6481_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6481_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6480_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_6480_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6480_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55706_val { , NN } ; 
  bool _emrb_55705_mem { , NN } ; 
  int{0} _emlr_55175_startl__SSA0_1 { , NN } ; 
  int _emlr_55174_startl__SSA0_1 { , NN } ; 
  int _emlr_55173_numl { , NN } ; 
  int _emlr_55172_numl { , NN } ; 
  int[64] _emlr_55171_offsetsl { , NN } ; 
  int[64] _emlr_55170_offsetsl { , NN } ; 
  int _emal_52225_startl__SSA0_1 { , NN } ; 
  int _emal_52224__ivesplit_24065 { , NN } ; 
  double _emal_52223__pinl_6455__ls_6329 { , NN } ; 
  double _emal_52222__pinl_6456__ls_6330 { , NN } ; 
  double _emal_52221__pinl_6451__ls_6319 { , NN } ; 
  double _emal_52220__pinl_6452__ls_6320 { , NN } ; 
  int _emal_52219__dlirmov_51601__iveras_51433 { , NN } ; 
  int _emal_52218__dlirmov_51602__iveras_51434 { , NN } ; 
  int _dlirmov_51602__iveras_51434 { , NN } ; 
  int _dlirmov_51601__iveras_51433 { , NN } ; 
  int{1} _ivesplit_24065 { , NN } ; 
  double _pinl_6456__ls_6330 { , NN } ; 
  double _pinl_6455__ls_6329 { , NN } ; 
  double _pinl_6452__ls_6320 { , NN } ; 
  double _pinl_6451__ls_6319 { , NN } ; 
  int _pinl_6448_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_6447_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_6446_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6445_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_52225_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_52225_startl__SSA0_1); 
    _emal_52224__ivesplit_24065 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24065 = _fill_( 1, _emal_52224__ivesplit_24065); 
    _emal_52223__pinl_6455__ls_6329 = _alloc_( 1, 0, [:int]); 
    _pinl_6455__ls_6329 = _fill_( _idx_sel_( _ivesplit_24065, q), _emal_52223__pinl_6455__ls_6329); 
    _emal_52222__pinl_6456__ls_6330 = _alloc_( 1, 0, [:int]); 
    _pinl_6456__ls_6330 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_52222__pinl_6456__ls_6330); 
    _emal_52221__pinl_6451__ls_6319 = _alloc_( 1, 0, [:int]); 
    _pinl_6451__ls_6319 = _fill_( _idx_sel_( _ivesplit_24065, p), _emal_52221__pinl_6451__ls_6319); 
    _free_( _ivesplit_24065); 
    _emal_52220__pinl_6452__ls_6320 = _alloc_( 1, 0, [:int]); 
    _pinl_6452__ls_6320 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_52220__pinl_6452__ls_6320); 
    _emal_52219__dlirmov_51601__iveras_51433 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51601__iveras_51433 = _fill_( 0, _emal_52219__dlirmov_51601__iveras_51433); 
    _emal_52218__dlirmov_51602__iveras_51434 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51602__iveras_51434 = _fill_( 1, _emal_52218__dlirmov_51602__iveras_51434); 
    _emlr_55174_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55175_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55174_startl__SSA0_1); 
    _emlr_55172_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55173_numl = _fill_( _copy_( numl), _emlr_55172_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55170_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55705_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55706_val = _fill_( _isreused_( _emlr_55170_offsetsl, offsetsl), _emrb_55705_mem); 
    _emlr_55171_offsetsl = _MAIN::_dup_6480_BlockHoare__Cond_23__ReuseCond_37( _emrb_55706_val, _emlr_55170_offsetsl, offsetsl) ; 
    _pinl_6445_argmax__SSA0_1, _pinl_6446_max__SSA0_1, _pinl_6447_offsetsl__SSA0_1, _pinl_6448_numl__SSA0_1 = _MAIN::_dup_6479_BlockHoare__Loop_21( _dlirmov_51602__iveras_51434, _dlirmov_51601__iveras_51433, argmax, max, _emlr_55171_offsetsl, _emlr_55173_numl, _emlr_55175_startl__SSA0_1, _pinl_6456__ls_6330, _pinl_6455__ls_6329, _pinl_6452__ls_6320, _pinl_6451__ls_6319, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_6448_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_6447_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_6446_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_6445_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6480_BlockHoare__Cond_23__ReuseCond_37(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_6480_BlockHoare__Cond_23__ReuseCond_37( bool _emrb_55701 { ,NN } , int[64] _emlr_55170_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_6480_BlockHoare__Cond_23__ReuseCond_37 ::  ---
 */
{ 
  int[64] _emrb_55704 { , NN } ; 
  int[64] _dup_55703__emlr_55171_offsetsl { , NN } ; 
  int[64] _dup_55702__emlr_55171_offsetsl { , NN } ; 

  if (_emrb_55701) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55701, 1); 
    _dup_55702__emlr_55171_offsetsl = _fill_( _noop_( offsetsl), _emlr_55170_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55701, 1); 
    _dup_55703__emlr_55171_offsetsl = _fill_( _copy_( offsetsl), _emlr_55170_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55704 = ( _emrb_55701 ? _dup_55702__emlr_55171_offsetsl : _dup_55703__emlr_55171_offsetsl ); 
  return( _emrb_55704); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_6479_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_6479_BlockHoare__Loop_21( int _iveras_51434 { ,NN } , int _iveras_51433 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_6324 { ,NN } , double _ls_6323 { ,NN } , double _ls_6314 { ,NN } , double _ls_6313 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_6479_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_52248__emec_51723_offsetsl { , NN } ; 
  int _emal_52246__ivesli_48106 { , NN } ; 
  int _emal_52245__ivesli_48108 { , NN } ; 
  double _emal_52244__pinl_3253__flat_149 { , NN } ; 
  double _emal_52242__pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52241__flat_68__SSA3_2 { , NN } ; 
  double _emal_52240__pinl_3324__flat_95 { , NN } ; 
  double _emal_52239__pinl_3299__flat_95 { , NN } ; 
  bool _emal_52233__pinl_3349__flat_252 { , NN } ; 
  int _emal_52232__pinl_3350__flat_438 { , NN } ; 
  double _emal_52230__ctz_7584 { , NN } ; 
  bool _emal_52229__pinl_3355__flat_252 { , NN } ; 
  int _emal_52228__pinl_3358__flat_122 { , NN } ; 
  int _emal_52227__al_12147 { , NN } ; 
  bool _emal_52226__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51723_offsetsl { , NN } ; 
  int _ivesli_48108 { , NN } ; 
  int _ivesli_48106 { , NN } ; 
  int _ivesli_48105 { , NN } ; 
  int _al_12147 { , NN } ; 
  double _ctz_7584 { , NN } ; 
  double[2] _flat_68__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_52248__emec_51723_offsetsl = offsetsl; 
  _emec_51723_offsetsl = _fill_( _noop_( offsetsl), _emal_52248__emec_51723_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51723_offsetsl, numl, i), _emec_51723_offsetsl); 
  _emal_52246__ivesli_48106 = _alloc_( 1, 0, [:int]); 
  _ivesli_48106 = _fill_( _add_SxS_( l, i), _emal_52246__ivesli_48106); 
  _emal_52245__ivesli_48108 = _alloc_( 1, 0, [:int]); 
  _ivesli_48108 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48106, _iveras_51433), _emal_52245__ivesli_48108); 
  _emal_52244__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48108, P), _emal_52244__pinl_3253__flat_149); 
  _free_( _ivesli_48108); 
  _ivesli_48105 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48106, _iveras_51434), _ivesli_48106); 
  _emal_52242__pinl_3253__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48105, P), _emal_52242__pinl_3253__flat_149__SSA3_2); 
  _free_( _ivesli_48105); 
  _emal_52241__flat_68__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA3_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA3_2 ], _emal_52241__flat_68__SSA3_2); 
  _emal_52240__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_6324, _pinl_3253__flat_149), _emal_52240__pinl_3324__flat_95); 
  _emal_52239__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_6313, _pinl_3253__flat_149__SSA3_2), _emal_52239__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_6323, _pinl_3253__flat_149__SSA3_2), _pinl_3253__flat_149__SSA3_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_6314, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_52233__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_52233__pinl_3349__flat_252); 
  _emal_52232__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_52232__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_52230__ctz_7584 = _alloc_( 1, 0, [:int]); 
  _ctz_7584 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_52230__ctz_7584); 
  _emal_52229__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_7584, 0.0), _emal_52229__pinl_3355__flat_252); 
  _free_( _ctz_7584); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_6478_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA3_2, max, _pinl_3270__flat_95) ; 
  _emal_52228__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_52228__pinl_3358__flat_122); 
  _emal_52227__al_12147 = i; 
  _al_12147 = _fill_( _add_SxS_( -63, i), _emal_52227__al_12147); 
  _emal_52226__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_12147, 0), _emal_52226__pinl_3359__flat_196); 
  _free_( _al_12147); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_6479_BlockHoare__Loop_21( _iveras_51434, _iveras_51433, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_6324, _ls_6323, _ls_6314, _ls_6313, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_6313, 1); 
    _dec_rc_( _ls_6314, 1); 
    _dec_rc_( _ls_6323, 1); 
    _dec_rc_( _ls_6324, 1); 
    _dec_rc_( _iveras_51433, 1); 
    _dec_rc_( _iveras_51434, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_6478_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_6478_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_6478_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5659_FindHull__Cond_40(...) [ body ]
 ****************************************************************************/
int, double[1000000,2], double[1000000,2] _MAIN::_dup_5659_FindHull__Cond_40( bool _flat_231 { ,NN } , int{1} hull_count { ,NN } , double[1000000,2] hull { ,NN } , double[2] rk { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int{100...} hi { ,NN } , int lo { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5659_FindHull__Cond_40 ::  ---
 */
{ 
  bool _emrb_55699_val { , NN } ; 
  bool _emrb_55698_mem { , NN } ; 
  int _emal_52275_count__SSA0_2 { , NN } ; 
  int _emal_52274__pinl_5130__flat_41 { , NN } ; 
  double[2] _emal_52273__pinl_5093_argmax { , NN } ; 
  double _emal_52272__pinl_5129__flat_113 { , NN } ; 
  int _emal_52271__pinl_5096__flat_55 { , NN } ; 
  int{0} _emal_52270_val { , NN } ; 
  int[64] _emal_52269__pinl_5099_offsetsl { , NN } ; 
  int _emal_52268__al_12162 { , NN } ; 
  bool _emal_52267__pinl_5116__flat_198 { , NN } ; 
  int _emal_52266__ctz_7590 { , NN } ; 
  bool _emal_52265__pinl_5115__flat_197 { , NN } ; 
  int _emal_52264__uprf_7365 { , NN } ; 
  int _emal_52263__pinl_10462_z { , NN } ; 
  double[1000000,2] _emal_52257_hull__SSA0_3 { , NN } ; 
  int _emal_52256__pinl_5229__flat_41 { , NN } ; 
  int _emal_52255__al_12159 { , NN } ; 
  int _emal_52254__al_12160 { , NN } ; 
  bool _emal_52253__pinl_5215__flat_198 { , NN } ; 
  int _emal_52252__ctz_7586 { , NN } ; 
  bool _emal_52251__pinl_5214__flat_197 { , NN } ; 
  int _emal_52250__al_8574 { , NN } ; 
  int _emal_52249__pinl_5262__flat_40 { , NN } ; 
  int _wlidx_47866_hull__SSA0_3 { , NN } ; 
  int _wlidx_47865__pinl_5099_offsetsl { , NN } ; 
  int _al_12162 { , NN } ; 
  int _al_12160 { , NN } ; 
  int _al_12159 { , NN } ; 
  int _pinl_10462_z { , NN } ; 
  int _al_8574 { , NN } ; 
  int _ctz_7590 { , NN } ; 
  int _ctz_7586 { , NN } ; 
  int _uprf_7365 { , NN } ; 
  int{999...} _pinl_5130__flat_41 { , NN } ; 
  double{-17...} _pinl_5129__flat_113 { , NN } ; 
  int _pinl_5122__eat_764 { , NN } ; 
  int[1] _pinl_5121_iv { , NN } ; 
  bool _pinl_5116__flat_198 { , NN } ; 
  bool _pinl_5115__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5114_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5113_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5112_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5111_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5110_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5109_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5108_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5107_argmax__SSA0_1 { , NN } ; 
  int[64] _pinl_5099_offsetsl { , NN } ; 
  int{0} _pinl_5096__flat_55 { , NN } ; 
  double[2]{0.0...} _pinl_5093_argmax { , NN } ; 
  int _pinl_5229__flat_41 { , NN } ; 
  bool _pinl_5215__flat_198 { , NN } ; 
  bool _pinl_5214__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5213_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5212_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5211_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5210_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5209_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5208_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5207_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5206_argmax__SSA0_1 { , NN } ; 
  int _pinl_5262__flat_40 { , NN } ; 
  int count__SSA0_4 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_9 { , NN } ;  /* declared: double[1000000,2] */
  int{0} count__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  int lcount { , NN } ; 
  int rcount { , NN } ; 

  if (_flat_231) 
  { 
    _inc_rc_( lo, 2); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _inc_rc_( rk, 1); 
    _free_( _flat_231); 
    _emal_52274__pinl_5130__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5130__flat_41 = _fill_( 999999, _emal_52274__pinl_5130__flat_41); 
    _emal_52273__pinl_5093_argmax = _alloc_( 2, 1, [ 2 ]); 
    _pinl_5093_argmax = _fill_( [ 0.0, 0.0 ], _emal_52273__pinl_5093_argmax); 
    _emal_52272__pinl_5129__flat_113 = _alloc_( 2, 0, [:int]); 
    _pinl_5129__flat_113 = _fill_( -1.797690000000000063230304921389426434930330364336853362154109832891264341489062899406152996321966094455338163203127744334848599000464911410516510916727344709727599413825823048028128827530592629736371829425359826368844446113768685826367454055532068818593409e+308, _emal_52272__pinl_5129__flat_113); 
    _emal_52271__pinl_5096__flat_55 = _alloc_( 7, 0, [:int]); 
    _pinl_5096__flat_55 = _fill_( 0, _emal_52271__pinl_5096__flat_55); 
    _emal_52269__pinl_5099_offsetsl = _alloc_( 3, 1, [ 64 ]); 
    _pinl_5122__eat_764 = _alloc_( 1, 0, [:int]); 
    _wlidx_47865__pinl_5099_offsetsl = _alloc_( 1, 0, [:int]); 
    _pinl_5099_offsetsl = with2 (_pinl_5121_iv=[_pinl_5122__eat_764] (IDXS:_wlidx_47865__pinl_5099_offsetsl))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52270_val = _wl_assign_( _pinl_5096__flat_55, _emal_52269__pinl_5099_offsetsl, _pinl_5121_iv, _wlidx_47865__pinl_5099_offsetsl); 
          } : _emal_52270_val ; 
        /********** segment 0: **********
         * index domain: [ 0 ] -> [ 64 ]
         * bv: [ 1 ], [ 1 ], [ 1 ]
         * ubv: [ 1 ]
         * sv: [ 1 ]
         * homsv: [ 1 ]
         */
        (0 -> 64), step0[0] 1
          (0 --> 1): op_0
        /********** conexpr: **********/
        genarray( [ 64 ], _pinl_5096__flat_55, _emal_52269__pinl_5099_offsetsl, IDX(_wlidx_47865__pinl_5099_offsetsl)); 
    _free_( _pinl_5122__eat_764); 
    _free_( _wlidx_47865__pinl_5099_offsetsl); 
    _emal_52268__al_12162 = _alloc_( 1, 0, [:int]); 
    _al_12162 = _fill_( _sub_SxS_( 999871, lo), _emal_52268__al_12162); 
    _emal_52267__pinl_5116__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5116__flat_198 = _fill_( _gt_SxS_( _al_12162, 0), _emal_52267__pinl_5116__flat_198); 
    _free_( _al_12162); 
    _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1 = _MAIN::_dup_5615_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5129__flat_113, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5116__flat_198, rk, p, _pinl_5130__flat_41, lo, P) ; 
    _emal_52266__ctz_7590 = _alloc_( 1, 0, [:int]); 
    _ctz_7590 = _fill_( _sub_SxS_( _pinl_5110_l__SSA0_1, _pinl_5109_r__SSA0_3), _emal_52266__ctz_7590); 
    _emal_52265__pinl_5115__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5115__flat_197 = _fill_( _le_SxS_( _ctz_7590, 0), _emal_52265__pinl_5115__flat_197); 
    _free_( _ctz_7590); 
    _pinl_5112_argmax__SSA0_2, _pinl_5113_l__SSA0_2, _pinl_5114_P__SSA0_2 = _MAIN::_dup_5629_BlockHoare__Cond_12( _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5115__flat_197, rk, p, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1) ; 
    P__SSA0_3, lcount, hull__SSA0_1 = _MAIN::FindHull( _pinl_5114_P__SSA0_2, _pinl_5113_l__SSA0_2, hi, p, rk, _pinl_5112_argmax__SSA0_2, hull, hull_count) ; 
    _emal_52264__uprf_7365 = _alloc_( 1, 0, [:int]); 
    _uprf_7365 = _fill_( _add_SxS_( lcount, 1), _emal_52264__uprf_7365); 
    _emal_52263__pinl_10462_z = _alloc_( 1, 0, [:int]); 
    _pinl_10462_z = _fill_( _max_SxS_( lcount, _uprf_7365), _emal_52263__pinl_10462_z); 
    _emal_52257_hull__SSA0_3 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], hull__SSA0_1); 
    _wlidx_47866_hull__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _emrb_55698_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55699_val = _fill_( _isreused_( _emal_52257_hull__SSA0_3, hull__SSA0_1), _emrb_55698_mem); 
    hull__SSA0_3 = _MAIN::_dup_5659_FindHull__Cond_40__ReuseCond_36( _emrb_55699_val, lcount, hull__SSA0_1, _uprf_7365, _pinl_10462_z, _wlidx_47866_hull__SSA0_3, _emal_52257_hull__SSA0_3, rk) ; 
    _emal_52256__pinl_5229__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5229__flat_41 = _fill_( _add_SxS_( -1, _pinl_5113_l__SSA0_2), _emal_52256__pinl_5229__flat_41); 
    _emal_52255__al_12159 = _alloc_( 1, 0, [:int]); 
    _al_12159 = _fill_( _sub_SxS_( _pinl_5113_l__SSA0_2, lo), _emal_52255__al_12159); 
    _al_12160 = _fill_( _add_SxS_( -129, _al_12159), _al_12159); 
    _emal_52253__pinl_5215__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5215__flat_198 = _fill_( _gt_SxS_( _al_12160, 0), _emal_52253__pinl_5215__flat_198); 
    _free_( _al_12160); 
    _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1 = _MAIN::_dup_5644_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5129__flat_113, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5215__flat_198, q, rk, _pinl_5229__flat_41, lo, P__SSA0_3) ; 
    _emal_52252__ctz_7586 = _alloc_( 1, 0, [:int]); 
    _ctz_7586 = _fill_( _sub_SxS_( _pinl_5209_l__SSA0_1, _pinl_5208_r__SSA0_3), _emal_52252__ctz_7586); 
    _emal_52251__pinl_5214__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5214__flat_197 = _fill_( _le_SxS_( _ctz_7586, 0), _emal_52251__pinl_5214__flat_197); 
    _free_( _ctz_7586); 
    _pinl_5211_argmax__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5213_P__SSA0_2 = _MAIN::_dup_5658_BlockHoare__Cond_12( _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5214__flat_197, q, rk, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1) ; 
    _al_8574 = _fill_( _add_SxS_( 2, lcount), lcount); 
    P__SSA0_7, rcount, hull__SSA0_5 = _MAIN::FindHull( _pinl_5213_P__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5113_l__SSA0_2, rk, q, _pinl_5211_argmax__SSA0_2, hull__SSA0_3, _al_8574) ; 
    _pinl_5262__flat_40 = _fill_( _add_SxS_( rcount, _uprf_7365), rcount); 
    _free_( _uprf_7365); 
  }
  else
  { 
    _dec_rc_( hi, 1); 
    _dec_rc_( rk, 1); 
    _dec_rc_( hull_count, 1); 
    _free_( _flat_231); 
    _emal_52275_count__SSA0_2 = _alloc_( 1, 0, [:int]); 
    count__SSA0_2 = _fill_( 0, _emal_52275_count__SSA0_2); 
  }
  P__SSA0_9 = ( _flat_231 ? P__SSA0_7 : P ); 
  hull__SSA0_7 = ( _flat_231 ? hull__SSA0_5 : hull ); 
  count__SSA0_4 = ( _flat_231 ? _pinl_5262__flat_40 : count__SSA0_2 ); 
  return( count__SSA0_4, hull__SSA0_7, P__SSA0_9); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5659_FindHull__Cond_40__ReuseCond_36(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5659_FindHull__Cond_40__ReuseCond_36( bool _emrb_55672 { ,NN } , int lcount { ,NN } , double[1000000,2] hull__SSA0_1 { ,NN } , int _uprf_7365 { ,NN } , int _pinl_10462_z { ,NN } , int _wlidx_47866_hull__SSA0_3 { ,NN } , double[1000000,2] _emal_52257_hull__SSA0_3 { ,NN } , double[2] rk { ,NN } )
/*
 *  _dup_5659_FindHull__Cond_40__ReuseCond_36 ::  ---
 */
{ 
  double _emdr_55749 { , NN } ; 
  double[1000000,2] _emrb_55697 { , NN } ; 
  double _dup_55696__emal_52262_val { , NN } ; 
  double _dup_55695__pinl_10473__flat_28 { , NN } ; 
  double _dup_55694__emal_52260__dup_13699__pinl_10473__flat_28 { , NN } ; 
  int _dup_55693__ivesli_48113 { , NN } ; 
  int _dup_55692__emal_52261__ivesli_48113 { , NN } ; 
  double _dup_55691__emal_52259_val { , NN } ; 
  double _dup_55690__wlsw_13692 { , NN } ; 
  double _dup_55689__emal_52258__dup_13706__wlsw_13692 { , NN } ; 
  double[1000000,2] _dup_55688_hull__SSA0_3 { , NN } ; 
  int _dup_55687__eat_13189 { , NN } ; 
  int _dup_55686__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55685__wlsb_13693 { , NN } ; 
  double _dup_55679__emal_52259_val { , NN } ; 
  double _dup_55678__wlsw_13692 { , NN } ; 
  double _dup_55677__emal_52258__dup_13706__wlsw_13692 { , NN } ; 
  double[1000000,2] _dup_55676_hull__SSA0_3 { , NN } ; 
  int _dup_55675__eat_13189 { , NN } ; 
  int _dup_55674__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55673__wlsb_13693 { , NN } ; 

  if (_emrb_55672) 
  { 
    _dec_rc_( _emrb_55672, 1); 
    _dup_55674__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55675__eat_13189 = _alloc_( 1, 0, [:int]); 
    _dup_55676_hull__SSA0_3 = with2 (_dup_55673__wlsb_13693=[_dup_55674__pinl_5164__eat_766, _dup_55675__eat_13189] (IDXS:_wlidx_47866_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55677__emal_52258__dup_13706__wlsw_13692 = _alloc_( 1, 0, [:int]); 
            _dup_55678__wlsw_13692 = _fill_( _idx_sel_( _dup_55675__eat_13189, rk), _dup_55677__emal_52258__dup_13706__wlsw_13692); 
            _dup_55679__emal_52259_val = _wl_assign_( _dup_55678__wlsw_13692, _emal_52257_hull__SSA0_3, _dup_55673__wlsb_13693, _wlidx_47866_hull__SSA0_3); 
            _free_( _dup_55678__wlsw_13692); 
          } : _dup_55679__emal_52259_val ; ,
        op_1 =
          { 
            _emdr_55749 = _noop_( _dup_55673__wlsb_13693); 
          } : _emdr_55749 ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_7365, 2 ]
         */
        (lcount => _uprf_7365), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_10462_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10462_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_52257_hull__SSA0_3 ,IDX(_wlidx_47866_hull__SSA0_3)); 
    _dec_rc_( hull__SSA0_1, 1); 
    _free_( _pinl_10462_z); 
    _free_( _dup_55674__pinl_5164__eat_766); 
    _free_( _dup_55675__eat_13189); 
    _free_( _wlidx_47866_hull__SSA0_3); 
  }
  else
  { 
    _dec_rc_( _emrb_55672, 1); 
    _dup_55686__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55687__eat_13189 = _alloc_( 1, 0, [:int]); 
    _dup_55688_hull__SSA0_3 = with2 (_dup_55685__wlsb_13693=[_dup_55686__pinl_5164__eat_766, _dup_55687__eat_13189] (IDXS:_wlidx_47866_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55689__emal_52258__dup_13706__wlsw_13692 = _alloc_( 1, 0, [:int]); 
            _dup_55690__wlsw_13692 = _fill_( _idx_sel_( _dup_55687__eat_13189, rk), _dup_55689__emal_52258__dup_13706__wlsw_13692); 
            _dup_55691__emal_52259_val = _wl_assign_( _dup_55690__wlsw_13692, _emal_52257_hull__SSA0_3, _dup_55685__wlsb_13693, _wlidx_47866_hull__SSA0_3); 
            _free_( _dup_55690__wlsw_13692); 
          } : _dup_55691__emal_52259_val ; ,
        op_1 =
          { 
            _dup_55692__emal_52261__ivesli_48113 = _alloc_( 1, 0, [:int]); 
            _dup_55693__ivesli_48113 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55686__pinl_5164__eat_766, _dup_55687__eat_13189), _dup_55692__emal_52261__ivesli_48113); 
            _dup_55694__emal_52260__dup_13699__pinl_10473__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55695__pinl_10473__flat_28 = _fill_( _idx_sel_( _dup_55693__ivesli_48113, hull__SSA0_1), _dup_55694__emal_52260__dup_13699__pinl_10473__flat_28); 
            _free_( _dup_55693__ivesli_48113); 
            _dup_55696__emal_52262_val = _wl_assign_( _dup_55695__pinl_10473__flat_28, _emal_52257_hull__SSA0_3, _dup_55685__wlsb_13693, _wlidx_47866_hull__SSA0_3); 
            _free_( _dup_55695__pinl_10473__flat_28); 
          } : _dup_55696__emal_52262_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_7365, 2 ]
         */
        (lcount => _uprf_7365), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_10462_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10462_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_52257_hull__SSA0_3 ,IDX(_wlidx_47866_hull__SSA0_3)); 
    _free_( _pinl_10462_z); 
    _free_( _dup_55686__pinl_5164__eat_766); 
    _free_( _dup_55687__eat_13189); 
    _free_( _wlidx_47866_hull__SSA0_3); 
    _dec_rc_( hull__SSA0_1, 1); 
  }
  _emrb_55697 = ( _emrb_55672 ? _dup_55676_hull__SSA0_3 : _dup_55688_hull__SSA0_3 ); 
  return( _emrb_55697); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5658_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5658_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5658_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5657_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5657_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5657_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5657_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_52282__ctz_7600 { , NN } ; 
  bool _emal_52281__pinl_3760__flat_197 { , NN } ; 
  int _emal_52280__ctz_7598 { , NN } ; 
  bool _emal_52279__pinl_4092__flat_197 { , NN } ; 
  int _emal_52278__ctz_7596 { , NN } ; 
  bool _emal_52277__pinl_4425__flat_196 { , NN } ; 
  bool _emal_52276__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7600 { , NN } ; 
  int _ctz_7598 { , NN } ; 
  int _ctz_7596 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_52282__ctz_7600 = _alloc_( 1, 0, [:int]); 
  _ctz_7600 = _fill_( _sub_SxS_( l, r), _emal_52282__ctz_7600); 
  _emal_52281__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7600, 0), _emal_52281__pinl_3760__flat_197); 
  _free_( _ctz_7600); 
  _hce_6 = _MAIN::_dup_5645_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5649_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_52280__ctz_7598 = _alloc_( 1, 0, [:int]); 
  _ctz_7598 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_52280__ctz_7598); 
  _emal_52279__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7598, 0), _emal_52279__pinl_4092__flat_197); 
  _free_( _ctz_7598); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5655_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_52278__ctz_7596 = _alloc_( 1, 0, [:int]); 
  _ctz_7596 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_52278__ctz_7596); 
  _emal_52277__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7596, 0), _emal_52277__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5656_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_52276__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7596, 0), _emal_52276__pinl_4645__flat_197); 
  _free_( _ctz_7596); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5657_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5656_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5656_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5656_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55757 { , NN } ; 
  double _emdr_55756 { , NN } ; 
  bool _emrb_55670_val { , NN } ; 
  bool _emrb_55669_mem { , NN } ; 
  int _emal_52330__iveras_51435 { , NN } ; 
  int _emal_52329__ivesli_48124 { , NN } ; 
  double _emal_52328__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_52327__iveras_51436 { , NN } ; 
  int _emal_52326__ivesli_48122 { , NN } ; 
  double _emal_52325__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_52324__pinl_4616__flat_1457 { , NN } ; 
  int _emal_52323__iveras_51437 { , NN } ; 
  int _emal_52322__ivesli_48120 { , NN } ; 
  double _emal_52321__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52320__iveras_51438 { , NN } ; 
  int _emal_52319__ivesli_48118 { , NN } ; 
  double _emal_52318__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52317__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_52316__uprf_7374 { , NN } ; 
  int _emal_52315__pinl_10522_z { , NN } ; 
  double[1000000,2] _emal_52309__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_52308__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_52307__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_52306__pinl_4548__flat_1465 { , NN } ; 
  double _emal_52305__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52304__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52303__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_52302__uprf_7371 { , NN } ; 
  int _emal_52301__pinl_10537_z { , NN } ; 
  double _emal_52297_val { , NN } ; 
  double _emal_52296_val { , NN } ; 
  double[1000000,2] _emal_52295__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_52294__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_52293__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_52292__pinl_4480__flat_1465 { , NN } ; 
  double _emal_52291__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52290__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52289__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_52285_val { , NN } ; 
  double _emal_52284_val { , NN } ; 
  double[1000000,2] _emal_52283__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51438 { , NN } ; 
  int _iveras_51437 { , NN } ; 
  int _iveras_51436 { , NN } ; 
  int _iveras_51435 { , NN } ; 
  int _ivesli_48124 { , NN } ; 
  int _ivesli_48122 { , NN } ; 
  int _ivesli_48120 { , NN } ; 
  int _ivesli_48118 { , NN } ; 
  int _wlidx_47869__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47868__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47867__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_13744 { , NN } ; 
  int[2] _wlsb_13716 { , NN } ; 
  int _eat_13195 { , NN } ; 
  int _eat_13194 { , NN } ; 
  int _pinl_10522_z { , NN } ; 
  int _pinl_10537_z { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7374 { , NN } ; 
  int _uprf_7371 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_52330__iveras_51435 = _alloc_( 1, 0, [:int]); 
    _iveras_51435 = _fill_( 0, _emal_52330__iveras_51435); 
    _ivesli_48124 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51435), _iveras_51435); 
    _emal_52328__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48124, P), _emal_52328__pinl_4643__flat_149__SSA2_1); 
    _emal_52327__iveras_51436 = _alloc_( 1, 0, [:int]); 
    _iveras_51436 = _fill_( 0, _emal_52327__iveras_51436); 
    _ivesli_48122 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51436), _iveras_51436); 
    _emal_52325__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48122, P), _emal_52325__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_52323__iveras_51437 = _alloc_( 1, 0, [:int]); 
    _iveras_51437 = _fill_( 1, _emal_52323__iveras_51437); 
    _ivesli_48120 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51437), _iveras_51437); 
    _emal_52321__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48120, P), _emal_52321__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52320__iveras_51438 = _alloc_( 1, 0, [:int]); 
    _iveras_51438 = _fill_( 1, _emal_52320__iveras_51438); 
    _ivesli_48118 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51438), _iveras_51438); 
    _emal_52318__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48118, P), _emal_52318__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52316__uprf_7374 = _alloc_( 1, 0, [:int]); 
    _uprf_7374 = _fill_( _add_SxS_( 1, l), _emal_52316__uprf_7374); 
    _emal_52315__pinl_10522_z = _alloc_( 1, 0, [:int]); 
    _pinl_10522_z = _fill_( _max_SxS_( _uprf_7374, l), _emal_52315__pinl_10522_z); 
    _emal_52309__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47867__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55669_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55670_val = _fill_( _isreused_( _emal_52309__pinl_4435_P__SSA0_1, P), _emrb_55669_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5656_BlockHoare__Cond_1__ReuseCond_35( _emrb_55670_val, _pinl_4616__flat_1457, _uprf_7374, _pinl_4616__flat_1457__SSA3_2, _pinl_10522_z, _wlidx_47867__pinl_4435_P__SSA0_1, _emal_52309__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_52308__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48124, _pinl_4435_P__SSA0_1), _emal_52308__pinl_4575__flat_149__SSA2_1); 
    _emal_52307__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48122, _pinl_4435_P__SSA0_1), _emal_52307__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_52305__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48120, _pinl_4435_P__SSA0_1), _emal_52305__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52304__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48118, _pinl_4435_P__SSA0_1), _emal_52304__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52302__uprf_7371 = _alloc_( 1, 0, [:int]); 
    _uprf_7371 = _fill_( _add_SxS_( 1, r), _emal_52302__uprf_7371); 
    _emal_52301__pinl_10537_z = _alloc_( 1, 0, [:int]); 
    _pinl_10537_z = _fill_( _max_SxS_( _uprf_7371, r), _emal_52301__pinl_10537_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_13194 = _alloc_( 1, 0, [:int]); 
    _wlidx_47868__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_13744=[_pinl_4513__eat_766, _eat_13194] (IDXS:_wlidx_47868__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52296_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_13744, _wlidx_47868__pinl_4437_P__SSA0_3); 
          } : _emal_52296_val ; ,
        op_1 =
          { 
            _emal_52297_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_13744, _wlidx_47868__pinl_4437_P__SSA0_3); 
          } : _emal_52297_val ; ,
        op_2 =
          { 
            _emdr_55756 = _noop_( _wlsb_13744); 
          } : _emdr_55756 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7371, 1 ]
         */
        (r => _uprf_7371), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7371, 2 ]
         */
        (r => _uprf_7371), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10537_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10537_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47868__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_10537_z); 
    _free_( _uprf_7371); 
    _free_( _eat_13194); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47868__pinl_4437_P__SSA0_3); 
    _emal_52294__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48124, _pinl_4437_P__SSA0_3), _emal_52294__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48124); 
    _emal_52293__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48122, _pinl_4437_P__SSA0_3), _emal_52293__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48122); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_52291__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48120, _pinl_4437_P__SSA0_3), _emal_52291__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48120); 
    _emal_52290__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48118, _pinl_4437_P__SSA0_3), _emal_52290__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48118); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_13195 = _alloc_( 1, 0, [:int]); 
    _wlidx_47869__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_13716=[_pinl_4445__eat_766, _eat_13195] (IDXS:_wlidx_47869__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52284_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_13716, _wlidx_47869__pinl_4439_P__SSA0_5); 
          } : _emal_52284_val ; ,
        op_1 =
          { 
            _emal_52285_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_13716, _wlidx_47869__pinl_4439_P__SSA0_5); 
          } : _emal_52285_val ; ,
        op_2 =
          { 
            _emdr_55757 = _noop_( _wlsb_13716); 
          } : _emdr_55757 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7374, 1 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7374, 2 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10522_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10522_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47869__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_10522_z); 
    _free_( _uprf_7374); 
    _free_( _eat_13195); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47869__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5656_BlockHoare__Cond_1__ReuseCond_35(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5656_BlockHoare__Cond_1__ReuseCond_35( bool _emrb_55645 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _uprf_7374 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _pinl_10522_z { ,NN } , int _wlidx_47867__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_52309__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5656_BlockHoare__Cond_1__ReuseCond_35 ::  ---
 */
{ 
  double _emdr_55755 { , NN } ; 
  double[1000000,2] _emrb_55668 { , NN } ; 
  double _dup_55667__emal_52314_val { , NN } ; 
  double _dup_55666__pinl_10533__flat_28 { , NN } ; 
  double _dup_55665__emal_52312__dup_13778__pinl_10533__flat_28 { , NN } ; 
  int _dup_55664__ivesli_48116 { , NN } ; 
  int _dup_55663__emal_52313__ivesli_48116 { , NN } ; 
  double _dup_55662__emal_52311_val { , NN } ; 
  double _dup_55661__emal_52310_val { , NN } ; 
  double[1000000,2] _dup_55660__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55659__eat_13193 { , NN } ; 
  int _dup_55658__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55657__wlsb_13772 { , NN } ; 
  double _dup_55651__emal_52311_val { , NN } ; 
  double _dup_55650__emal_52310_val { , NN } ; 
  double[1000000,2] _dup_55649__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55648__eat_13193 { , NN } ; 
  int _dup_55647__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55646__wlsb_13772 { , NN } ; 

  if (_emrb_55645) 
  { 
    _dec_rc_( _emrb_55645, 1); 
    _dup_55647__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55648__eat_13193 = _alloc_( 1, 0, [:int]); 
    _dup_55649__pinl_4435_P__SSA0_1 = with2 (_dup_55646__wlsb_13772=[_dup_55647__pinl_4581__eat_766, _dup_55648__eat_13193] (IDXS:_wlidx_47867__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55650__emal_52310_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52309__pinl_4435_P__SSA0_1, _dup_55646__wlsb_13772, _wlidx_47867__pinl_4435_P__SSA0_1); 
          } : _dup_55650__emal_52310_val ; ,
        op_1 =
          { 
            _dup_55651__emal_52311_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52309__pinl_4435_P__SSA0_1, _dup_55646__wlsb_13772, _wlidx_47867__pinl_4435_P__SSA0_1); 
          } : _dup_55651__emal_52311_val ; ,
        op_2 =
          { 
            _emdr_55755 = _noop_( _dup_55646__wlsb_13772); 
          } : _emdr_55755 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7374, 1 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7374, 2 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10522_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10522_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52309__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47867__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55648__eat_13193); 
    _free_( _dup_55647__pinl_4581__eat_766); 
    _free_( _wlidx_47867__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55645, 1); 
    _dup_55658__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55659__eat_13193 = _alloc_( 1, 0, [:int]); 
    _dup_55660__pinl_4435_P__SSA0_1 = with2 (_dup_55657__wlsb_13772=[_dup_55658__pinl_4581__eat_766, _dup_55659__eat_13193] (IDXS:_wlidx_47867__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55661__emal_52310_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52309__pinl_4435_P__SSA0_1, _dup_55657__wlsb_13772, _wlidx_47867__pinl_4435_P__SSA0_1); 
          } : _dup_55661__emal_52310_val ; ,
        op_1 =
          { 
            _dup_55662__emal_52311_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52309__pinl_4435_P__SSA0_1, _dup_55657__wlsb_13772, _wlidx_47867__pinl_4435_P__SSA0_1); 
          } : _dup_55662__emal_52311_val ; ,
        op_2 =
          { 
            _dup_55663__emal_52313__ivesli_48116 = _alloc_( 1, 0, [:int]); 
            _dup_55664__ivesli_48116 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55658__pinl_4581__eat_766, _dup_55659__eat_13193), _dup_55663__emal_52313__ivesli_48116); 
            _dup_55665__emal_52312__dup_13778__pinl_10533__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55666__pinl_10533__flat_28 = _fill_( _idx_sel_( _dup_55664__ivesli_48116, P), _dup_55665__emal_52312__dup_13778__pinl_10533__flat_28); 
            _free_( _dup_55664__ivesli_48116); 
            _dup_55667__emal_52314_val = _wl_assign_( _dup_55666__pinl_10533__flat_28, _emal_52309__pinl_4435_P__SSA0_1, _dup_55657__wlsb_13772, _wlidx_47867__pinl_4435_P__SSA0_1); 
            _free_( _dup_55666__pinl_10533__flat_28); 
          } : _dup_55667__emal_52314_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7374, 1 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7374, 2 ]
         */
        (l => _uprf_7374), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10522_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10522_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52309__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47867__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55658__pinl_4581__eat_766); 
    _free_( _dup_55659__eat_13193); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47867__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55668 = ( _emrb_55645 ? _dup_55649__pinl_4435_P__SSA0_1 : _dup_55660__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55668); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5655_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5655_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5655_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_52332__ctz_7602 { , NN } ; 
  bool _emal_52331__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7602 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_52332__ctz_7602 = _alloc_( 1, 0, [:int]); 
    _ctz_7602 = _fill_( _sub_SxS_( l, r), _emal_52332__ctz_7602); 
    _emal_52331__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7602, 0), _emal_52331__pinl_4093__flat_197); 
    _free_( _ctz_7602); 
    _hce_4 = _MAIN::_dup_5650_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5654_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5654_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5654_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5654_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55117_r { , NN } ; 
  int _emlr_55116_r { , NN } ; 
  int _emal_52340__dlirmov_50913__wlsimp_6719 { , NN } ; 
  int _emal_52339__dlirmov_50915__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_52338__dlirmov_50918__pinl_4296__flat_149 { , NN } ; 
  double _emal_52337__dlirmov_50921__pinl_4271__flat_149 { , NN } ; 
  double _emal_52336__dlirmov_50924__pinl_4257__flat_149 { , NN } ; 
  double _emal_52335__dlirmov_50927__pinl_4244__flat_149 { , NN } ; 
  int _emal_52334__dlirmov_51635__iveras_51439 { , NN } ; 
  int _emal_52333__dlirmov_51636__iveras_51440 { , NN } ; 
  int _dlirmov_51636__iveras_51440 { , NN } ; 
  int _dlirmov_51635__iveras_51439 { , NN } ; 
  double _dlirmov_50927__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_50924__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_50921__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_50918__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_50915__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50913__wlsimp_6719 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_52340__dlirmov_50913__wlsimp_6719 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50913__wlsimp_6719 = _fill_( 0, _emal_52340__dlirmov_50913__wlsimp_6719); 
    _emal_52339__dlirmov_50915__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50915__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_52339__dlirmov_50915__pinl_4214__eat_768__SSA3_1); 
    _emal_52338__dlirmov_50918__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50918__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_50913__wlsimp_6719, q), _emal_52338__dlirmov_50918__pinl_4296__flat_149); 
    _emal_52337__dlirmov_50921__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50921__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_50915__pinl_4214__eat_768__SSA3_1, p), _emal_52337__dlirmov_50921__pinl_4271__flat_149); 
    _emal_52336__dlirmov_50924__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50924__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_50915__pinl_4214__eat_768__SSA3_1, q), _emal_52336__dlirmov_50924__pinl_4257__flat_149); 
    _free_( _dlirmov_50915__pinl_4214__eat_768__SSA3_1); 
    _emal_52335__dlirmov_50927__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50927__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_50913__wlsimp_6719, p), _emal_52335__dlirmov_50927__pinl_4244__flat_149); 
    _free_( _dlirmov_50913__wlsimp_6719); 
    _emal_52334__dlirmov_51635__iveras_51439 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51635__iveras_51439 = _fill_( 0, _emal_52334__dlirmov_51635__iveras_51439); 
    _emal_52333__dlirmov_51636__iveras_51440 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51636__iveras_51440 = _fill_( 1, _emal_52333__dlirmov_51636__iveras_51440); 
    _emlr_55116_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55117_r = _fill_( _copy_( r), _emlr_55116_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5653_BlockHoare__Loop_3( _dlirmov_51636__iveras_51440, _dlirmov_51635__iveras_51439, _dlirmov_50927__pinl_4244__flat_149, _dlirmov_50924__pinl_4257__flat_149, _dlirmov_50921__pinl_4271__flat_149, _dlirmov_50918__pinl_4296__flat_149, argmax, max, q, p, _emlr_55117_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5653_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5653_BlockHoare__Loop_3( int _iveras_51440 { ,NN } , int _iveras_51439 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5653_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_52358__ivesli_48128 { , NN } ; 
  double _emal_52357__pinl_4213__flat_149 { , NN } ; 
  int _emal_52356__ivesli_48126 { , NN } ; 
  double _emal_52355__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52354__flat_129__SSA3_2 { , NN } ; 
  double _emal_52353__pinl_4284__flat_95 { , NN } ; 
  double _emal_52352__pinl_4259__flat_95 { , NN } ; 
  double _emal_52346__ctz_7606 { , NN } ; 
  bool _emal_52345__pinl_4312__flat_252 { , NN } ; 
  int _emal_52344__pinl_4315__flat_124 { , NN } ; 
  int _emal_52343__esd_7941 { , NN } ; 
  bool _emal_52341__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48128 { , NN } ; 
  int _ivesli_48126 { , NN } ; 
  int _esd_7941 { , NN } ; 
  double _ctz_7606 { , NN } ; 
  int _ctz_7604 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_52358__ivesli_48128 = _alloc_( 1, 0, [:int]); 
  _ivesli_48128 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51439), _emal_52358__ivesli_48128); 
  _emal_52357__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48128, P), _emal_52357__pinl_4213__flat_149); 
  _free_( _ivesli_48128); 
  _emal_52356__ivesli_48126 = _alloc_( 1, 0, [:int]); 
  _ivesli_48126 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51440), _emal_52356__ivesli_48126); 
  _emal_52355__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48126, P), _emal_52355__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48126); 
  _emal_52354__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_52354__flat_129__SSA3_2); 
  _emal_52353__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_52353__pinl_4284__flat_95); 
  _emal_52352__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_52352__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_52346__ctz_7606 = _alloc_( 1, 0, [:int]); 
  _ctz_7606 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_52346__ctz_7606); 
  _emal_52345__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7606, 0.0), _emal_52345__pinl_4312__flat_252); 
  _free_( _ctz_7606); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5651_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_52344__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_52344__pinl_4315__flat_124); 
  _emal_52343__esd_7941 = r; 
  _esd_7941 = _fill_( _sub_SxS_( 1, r), _emal_52343__esd_7941); 
  _ctz_7604 = _fill_( _add_SxS_( _esd_7941, l), _esd_7941); 
  _emal_52341__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7604, 0), _emal_52341__pinl_4316__flat_197); 
  _free_( _ctz_7604); 
  _hce_3 = _MAIN::_dup_5652_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5653_BlockHoare__Loop_3( _iveras_51440, _iveras_51439, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51439, 1); 
    _dec_rc_( _iveras_51440, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5652_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5652_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5652_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_52379__hce_3__SSA0_1 { , NN } ; 
  int _emal_52378__wlsimp_6722 { , NN } ; 
  int _emal_52377__iveras_51441 { , NN } ; 
  int _emal_52376__ivesli_48132 { , NN } ; 
  double _emal_52375__pinl_4328__flat_149 { , NN } ; 
  int _emal_52374__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_52373__iveras_51442 { , NN } ; 
  int _emal_52372__ivesli_48130 { , NN } ; 
  double _emal_52371__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_52370__pinl_4411__flat_149 { , NN } ; 
  double _emal_52369__pinl_4399__flat_95 { , NN } ; 
  double _emal_52368__pinl_4386__flat_149 { , NN } ; 
  double _emal_52367__pinl_4374__flat_95 { , NN } ; 
  double _emal_52366__pinl_4373__flat_96 { , NN } ; 
  double _emal_52365__pinl_4372__flat_149 { , NN } ; 
  double _emal_52364__pinl_4360__flat_95 { , NN } ; 
  double _emal_52363__pinl_4359__flat_149 { , NN } ; 
  double _emal_52362__pinl_4347__flat_95 { , NN } ; 
  double _emal_52361__pinl_4346__flat_96 { , NN } ; 
  double _emal_52360__pinl_4345__flat_95 { , NN } ; 
  bool _emal_52359__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51442 { , NN } ; 
  int _iveras_51441 { , NN } ; 
  int _ivesli_48132 { , NN } ; 
  int _ivesli_48130 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6722 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_52378__wlsimp_6722 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6722 = _fill_( 0, _emal_52378__wlsimp_6722); 
    _emal_52377__iveras_51441 = _alloc_( 1, 0, [:int]); 
    _iveras_51441 = _fill_( 0, _emal_52377__iveras_51441); 
    _ivesli_48132 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51441), _iveras_51441); 
    _emal_52375__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48132, P), _emal_52375__pinl_4328__flat_149); 
    _free_( _ivesli_48132); 
    _emal_52374__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_52374__pinl_4329__eat_768__SSA3_1); 
    _emal_52373__iveras_51442 = _alloc_( 1, 0, [:int]); 
    _iveras_51442 = _fill_( 1, _emal_52373__iveras_51442); 
    _ivesli_48130 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51442), _iveras_51442); 
    _emal_52371__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48130, P), _emal_52371__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48130); 
    _emal_52370__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_6722, q), _emal_52370__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_52368__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_52368__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_52365__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_52365__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_52363__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_6722, p), _emal_52363__pinl_4359__flat_149); 
    _free_( _wlsimp_6722); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_52359__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_52359__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_52379__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_52379__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5651_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5651_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5651_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5650_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5650_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5650_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_52400__hce_4__SSA0_1 { , NN } ; 
  int _emal_52399__wlsimp_6725 { , NN } ; 
  int _emal_52398__iveras_51443 { , NN } ; 
  int _emal_52397__ivesli_48136 { , NN } ; 
  double _emal_52396__pinl_4105__flat_149 { , NN } ; 
  int _emal_52395__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_52394__iveras_51444 { , NN } ; 
  int _emal_52393__ivesli_48134 { , NN } ; 
  double _emal_52392__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_52391__pinl_4188__flat_149 { , NN } ; 
  double _emal_52390__pinl_4176__flat_95 { , NN } ; 
  double _emal_52389__pinl_4163__flat_149 { , NN } ; 
  double _emal_52388__pinl_4151__flat_95 { , NN } ; 
  double _emal_52387__pinl_4150__flat_96 { , NN } ; 
  double _emal_52386__pinl_4149__flat_149 { , NN } ; 
  double _emal_52385__pinl_4137__flat_95 { , NN } ; 
  double _emal_52384__pinl_4136__flat_149 { , NN } ; 
  double _emal_52383__pinl_4124__flat_95 { , NN } ; 
  double _emal_52382__pinl_4123__flat_96 { , NN } ; 
  double _emal_52381__pinl_4122__flat_95 { , NN } ; 
  bool _emal_52380__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51444 { , NN } ; 
  int _iveras_51443 { , NN } ; 
  int _ivesli_48136 { , NN } ; 
  int _ivesli_48134 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6725 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_52399__wlsimp_6725 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6725 = _fill_( 0, _emal_52399__wlsimp_6725); 
    _emal_52398__iveras_51443 = _alloc_( 1, 0, [:int]); 
    _iveras_51443 = _fill_( 0, _emal_52398__iveras_51443); 
    _ivesli_48136 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51443), _iveras_51443); 
    _emal_52396__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48136, P), _emal_52396__pinl_4105__flat_149); 
    _free_( _ivesli_48136); 
    _emal_52395__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_52395__pinl_4106__eat_768__SSA3_1); 
    _emal_52394__iveras_51444 = _alloc_( 1, 0, [:int]); 
    _iveras_51444 = _fill_( 1, _emal_52394__iveras_51444); 
    _ivesli_48134 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51444), _iveras_51444); 
    _emal_52392__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48134, P), _emal_52392__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48134); 
    _emal_52391__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_6725, q), _emal_52391__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_52389__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_52389__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_52386__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_52386__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_52384__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_6725, p), _emal_52384__pinl_4136__flat_149); 
    _free_( _wlsimp_6725); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_52380__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_52380__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_52400__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_52400__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5649_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5649_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5649_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55119_l { , NN } ; 
  int _emlr_55118_l { , NN } ; 
  int _emal_52408__dlirmov_50897__wlsimp_6728 { , NN } ; 
  int _emal_52407__dlirmov_50899__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_52406__dlirmov_50902__pinl_3963__flat_149 { , NN } ; 
  double _emal_52405__dlirmov_50905__pinl_3938__flat_149 { , NN } ; 
  double _emal_52404__dlirmov_50908__pinl_3924__flat_149 { , NN } ; 
  double _emal_52403__dlirmov_50911__pinl_3911__flat_149 { , NN } ; 
  int _emal_52402__dlirmov_51633__iveras_51445 { , NN } ; 
  int _emal_52401__dlirmov_51634__iveras_51446 { , NN } ; 
  int _dlirmov_51634__iveras_51446 { , NN } ; 
  int _dlirmov_51633__iveras_51445 { , NN } ; 
  double _dlirmov_50911__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_50908__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_50905__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_50902__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_50899__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50897__wlsimp_6728 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_52408__dlirmov_50897__wlsimp_6728 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50897__wlsimp_6728 = _fill_( 0, _emal_52408__dlirmov_50897__wlsimp_6728); 
    _emal_52407__dlirmov_50899__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50899__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_52407__dlirmov_50899__pinl_3881__eat_768__SSA3_1); 
    _emal_52406__dlirmov_50902__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50902__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_50897__wlsimp_6728, q), _emal_52406__dlirmov_50902__pinl_3963__flat_149); 
    _emal_52405__dlirmov_50905__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50905__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_50899__pinl_3881__eat_768__SSA3_1, p), _emal_52405__dlirmov_50905__pinl_3938__flat_149); 
    _emal_52404__dlirmov_50908__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50908__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_50899__pinl_3881__eat_768__SSA3_1, q), _emal_52404__dlirmov_50908__pinl_3924__flat_149); 
    _free_( _dlirmov_50899__pinl_3881__eat_768__SSA3_1); 
    _emal_52403__dlirmov_50911__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50911__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_50897__wlsimp_6728, p), _emal_52403__dlirmov_50911__pinl_3911__flat_149); 
    _free_( _dlirmov_50897__wlsimp_6728); 
    _emal_52402__dlirmov_51633__iveras_51445 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51633__iveras_51445 = _fill_( 0, _emal_52402__dlirmov_51633__iveras_51445); 
    _emal_52401__dlirmov_51634__iveras_51446 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51634__iveras_51446 = _fill_( 1, _emal_52401__dlirmov_51634__iveras_51446); 
    _emlr_55118_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55119_l = _fill_( _copy_( l), _emlr_55118_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5648_BlockHoare__Loop_8( _dlirmov_51634__iveras_51446, _dlirmov_51633__iveras_51445, _dlirmov_50911__pinl_3911__flat_149, _dlirmov_50908__pinl_3924__flat_149, _dlirmov_50905__pinl_3938__flat_149, _dlirmov_50902__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55119_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5648_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5648_BlockHoare__Loop_8( int _iveras_51446 { ,NN } , int _iveras_51445 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5648_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_52425__ivesli_48140 { , NN } ; 
  double _emal_52424__pinl_3880__flat_149 { , NN } ; 
  int _emal_52423__ivesli_48138 { , NN } ; 
  double _emal_52422__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52421__flat_117__SSA3_2 { , NN } ; 
  double _emal_52420__pinl_3951__flat_95 { , NN } ; 
  double _emal_52419__pinl_3926__flat_95 { , NN } ; 
  double _emal_52413__ctz_7610 { , NN } ; 
  bool _emal_52412__pinl_3979__flat_252 { , NN } ; 
  int _emal_52411__pinl_3982__flat_122 { , NN } ; 
  int _emal_52410__ctz_7608 { , NN } ; 
  bool _emal_52409__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48140 { , NN } ; 
  int _ivesli_48138 { , NN } ; 
  double _ctz_7610 { , NN } ; 
  int _ctz_7608 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_52425__ivesli_48140 = _alloc_( 1, 0, [:int]); 
  _ivesli_48140 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51445), _emal_52425__ivesli_48140); 
  _emal_52424__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48140, P), _emal_52424__pinl_3880__flat_149); 
  _free_( _ivesli_48140); 
  _emal_52423__ivesli_48138 = _alloc_( 1, 0, [:int]); 
  _ivesli_48138 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51446), _emal_52423__ivesli_48138); 
  _emal_52422__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48138, P), _emal_52422__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48138); 
  _emal_52421__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_52421__flat_117__SSA3_2); 
  _emal_52420__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_52420__pinl_3951__flat_95); 
  _emal_52419__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_52419__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_52413__ctz_7610 = _alloc_( 1, 0, [:int]); 
  _ctz_7610 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_52413__ctz_7610); 
  _emal_52412__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7610, 0.0), _emal_52412__pinl_3979__flat_252); 
  _free_( _ctz_7610); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5646_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_52411__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_52411__pinl_3982__flat_122); 
  _emal_52410__ctz_7608 = _alloc_( 1, 0, [:int]); 
  _ctz_7608 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_52410__ctz_7608); 
  _emal_52409__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7608, 0), _emal_52409__pinl_3983__flat_197); 
  _free_( _ctz_7608); 
  _hce_5 = _MAIN::_dup_5647_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5648_BlockHoare__Loop_8( _iveras_51446, _iveras_51445, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51445, 1); 
    _dec_rc_( _iveras_51446, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5647_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5647_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5647_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_52446__hce_5__SSA0_1 { , NN } ; 
  int _emal_52445__wlsimp_6731 { , NN } ; 
  int _emal_52444__iveras_51447 { , NN } ; 
  int _emal_52443__ivesli_48144 { , NN } ; 
  double _emal_52442__pinl_3995__flat_149 { , NN } ; 
  int _emal_52441__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_52440__iveras_51448 { , NN } ; 
  int _emal_52439__ivesli_48142 { , NN } ; 
  double _emal_52438__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_52437__pinl_4078__flat_149 { , NN } ; 
  double _emal_52436__pinl_4066__flat_95 { , NN } ; 
  double _emal_52435__pinl_4053__flat_149 { , NN } ; 
  double _emal_52434__pinl_4041__flat_95 { , NN } ; 
  double _emal_52433__pinl_4040__flat_96 { , NN } ; 
  double _emal_52432__pinl_4039__flat_149 { , NN } ; 
  double _emal_52431__pinl_4027__flat_95 { , NN } ; 
  double _emal_52430__pinl_4026__flat_149 { , NN } ; 
  double _emal_52429__pinl_4014__flat_95 { , NN } ; 
  double _emal_52428__pinl_4013__flat_96 { , NN } ; 
  double _emal_52427__pinl_4012__flat_95 { , NN } ; 
  bool _emal_52426__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51448 { , NN } ; 
  int _iveras_51447 { , NN } ; 
  int _ivesli_48144 { , NN } ; 
  int _ivesli_48142 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6731 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_52445__wlsimp_6731 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6731 = _fill_( 0, _emal_52445__wlsimp_6731); 
    _emal_52444__iveras_51447 = _alloc_( 1, 0, [:int]); 
    _iveras_51447 = _fill_( 0, _emal_52444__iveras_51447); 
    _ivesli_48144 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51447), _iveras_51447); 
    _emal_52442__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48144, P), _emal_52442__pinl_3995__flat_149); 
    _free_( _ivesli_48144); 
    _emal_52441__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_52441__pinl_3996__eat_768__SSA3_1); 
    _emal_52440__iveras_51448 = _alloc_( 1, 0, [:int]); 
    _iveras_51448 = _fill_( 1, _emal_52440__iveras_51448); 
    _ivesli_48142 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51448), _iveras_51448); 
    _emal_52438__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48142, P), _emal_52438__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48142); 
    _emal_52437__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_6731, q), _emal_52437__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_52435__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_52435__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_52432__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_52432__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_52430__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_6731, p), _emal_52430__pinl_4026__flat_149); 
    _free_( _wlsimp_6731); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_52426__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_52426__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_52446__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_52446__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5646_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5646_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5646_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5645_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5645_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5645_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_52467__hce_6__SSA0_1 { , NN } ; 
  int _emal_52466__wlsimp_6734 { , NN } ; 
  int _emal_52465__iveras_51449 { , NN } ; 
  int _emal_52464__ivesli_48148 { , NN } ; 
  double _emal_52463__pinl_3772__flat_149 { , NN } ; 
  int _emal_52462__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_52461__iveras_51450 { , NN } ; 
  int _emal_52460__ivesli_48146 { , NN } ; 
  double _emal_52459__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_52458__pinl_3855__flat_149 { , NN } ; 
  double _emal_52457__pinl_3843__flat_95 { , NN } ; 
  double _emal_52456__pinl_3830__flat_149 { , NN } ; 
  double _emal_52455__pinl_3818__flat_95 { , NN } ; 
  double _emal_52454__pinl_3817__flat_96 { , NN } ; 
  double _emal_52453__pinl_3816__flat_149 { , NN } ; 
  double _emal_52452__pinl_3804__flat_95 { , NN } ; 
  double _emal_52451__pinl_3803__flat_149 { , NN } ; 
  double _emal_52450__pinl_3791__flat_95 { , NN } ; 
  double _emal_52449__pinl_3790__flat_96 { , NN } ; 
  double _emal_52448__pinl_3789__flat_95 { , NN } ; 
  bool _emal_52447__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51450 { , NN } ; 
  int _iveras_51449 { , NN } ; 
  int _ivesli_48148 { , NN } ; 
  int _ivesli_48146 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6734 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_52466__wlsimp_6734 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6734 = _fill_( 0, _emal_52466__wlsimp_6734); 
    _emal_52465__iveras_51449 = _alloc_( 1, 0, [:int]); 
    _iveras_51449 = _fill_( 0, _emal_52465__iveras_51449); 
    _ivesli_48148 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51449), _iveras_51449); 
    _emal_52463__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48148, P), _emal_52463__pinl_3772__flat_149); 
    _free_( _ivesli_48148); 
    _emal_52462__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_52462__pinl_3773__eat_768__SSA3_1); 
    _emal_52461__iveras_51450 = _alloc_( 1, 0, [:int]); 
    _iveras_51450 = _fill_( 1, _emal_52461__iveras_51450); 
    _ivesli_48146 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51450), _iveras_51450); 
    _emal_52459__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48146, P), _emal_52459__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48146); 
    _emal_52458__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_6734, q), _emal_52458__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_52456__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_52456__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_52453__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_52453__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_52451__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_6734, p), _emal_52451__pinl_3803__flat_149); 
    _free_( _wlsimp_6734); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_52447__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_52447__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_52467__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_52467__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5644_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5644_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5644_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_52468__dlirmov_50894__flat_65 { , NN } ; 
  int{0} _dlirmov_50894__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_59); 
    _emal_52468__dlirmov_50894__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50894__flat_65 = _fill_( 0, _emal_52468__dlirmov_50894__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5643_BlockHoare__Loop_24( _dlirmov_50894__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( numr, 1); 
    _dec_rc_( numl, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5643_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5643_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5643_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_52487__esd_29479 { , NN } ; 
  bool _emal_52486__pinl_3238__flat_194 { , NN } ; 
  int _emal_52485__esd_29478 { , NN } ; 
  bool _emal_52484__pinl_3360__flat_194 { , NN } ; 
  int _emal_52483__ctz_7616 { , NN } ; 
  bool _emal_52482__pinl_3482__flat_196 { , NN } ; 
  int _emal_52481__esd_7986 { , NN } ; 
  bool _emal_52480__pinl_3483__flat_196 { , NN } ; 
  int _emal_52479__pinl_3748__flat_41 { , NN } ; 
  int _emal_52478__pinl_3749__flat_41 { , NN } ; 
  int _emal_52477__pinl_3750__flat_40 { , NN } ; 
  int _emal_52476__pinl_3751__flat_40 { , NN } ; 
  int _emal_52475__esd_29474 { , NN } ; 
  bool _emal_52474__pinl_3752__flat_194 { , NN } ; 
  int _emal_52473__esd_29473 { , NN } ; 
  bool _emal_52472__pinl_3754__flat_194 { , NN } ; 
  int _emal_52471__pinl_3757__flat_41 { , NN } ; 
  bool _emal_52469__pinl_3758__flat_198 { , NN } ; 
  int _esd_29479 { , NN } ; 
  int _esd_29478 { , NN } ; 
  int _esd_29474 { , NN } ; 
  int _esd_29473 { , NN } ; 
  int _esd_7986 { , NN } ; 
  int _ctz_7616 { , NN } ; 
  int _ctz_7612 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_52487__esd_29479 = _alloc_( 1, 0, [:int]); 
  _esd_29479 = _fill_( _neg_S_( numl), _emal_52487__esd_29479); 
  _emal_52486__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29479, 0), _emal_52486__pinl_3238__flat_194); 
  _free_( _esd_29479); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5633_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_52485__esd_29478 = _alloc_( 1, 0, [:int]); 
  _esd_29478 = _fill_( _neg_S_( numr), _emal_52485__esd_29478); 
  _emal_52484__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29478, 0), _emal_52484__pinl_3360__flat_194); 
  _free_( _esd_29478); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5637_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_52483__ctz_7616 = _alloc_( 1, 0, [:int]); 
  _ctz_7616 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_52483__ctz_7616); 
  _emal_52482__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7616, 0), _emal_52482__pinl_3482__flat_196); 
  _free_( _ctz_7616); 
  _hce_7 = _MAIN::_dup_5638_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_52481__esd_7986 = _alloc_( 1, 0, [:int]); 
  _esd_7986 = _fill_( _neg_S_( _hce_7), _emal_52481__esd_7986); 
  _emal_52480__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_7986, 0), _emal_52480__pinl_3483__flat_196); 
  _free_( _esd_7986); 
  P__SSA0_1 = _MAIN::_dup_5640_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_52479__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_52479__pinl_3748__flat_41); 
  _emal_52478__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_52478__pinl_3749__flat_41); 
  _emal_52477__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_52477__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_52476__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_52476__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_52475__esd_29474 = _alloc_( 1, 0, [:int]); 
  _esd_29474 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_52475__esd_29474); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_52474__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29474, 0), _emal_52474__pinl_3752__flat_194); 
  _free_( _esd_29474); 
  l__SSA0_1 = _MAIN::_dup_5641_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_52473__esd_29473 = _alloc_( 1, 0, [:int]); 
  _esd_29473 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_52473__esd_29473); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_52472__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29473, 0), _emal_52472__pinl_3754__flat_194); 
  _free_( _esd_29473); 
  r__SSA0_1 = _MAIN::_dup_5642_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_52471__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_52471__pinl_3757__flat_41); 
  _ctz_7612 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_52469__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7612, 0), _emal_52469__pinl_3758__flat_198); 
  _free_( _ctz_7612); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5643_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5642_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5642_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5642_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_52488__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_52488__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_52488__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5641_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5641_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5641_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_52489__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_52489__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_52489__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5640_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5640_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5640_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55643_val { , NN } ; 
  bool _emrb_55642_mem { , NN } ; 
  double[1000000,2] _emlr_55123_P { , NN } ; 
  double[1000000,2] _emlr_55122_P { , NN } ; 
  int{0} _emlr_55121_j { , NN } ; 
  int _emlr_55120_j { , NN } ; 
  int _emal_52493__dlirmov_51629__iveras_51451 { , NN } ; 
  int _emal_52492__dlirmov_51630__iveras_51452 { , NN } ; 
  int _emal_52491__dlirmov_51631__iveras_51453 { , NN } ; 
  int _emal_52490__dlirmov_51632__iveras_51454 { , NN } ; 
  int _dlirmov_51632__iveras_51454 { , NN } ; 
  int _dlirmov_51631__iveras_51453 { , NN } ; 
  int _dlirmov_51630__iveras_51452 { , NN } ; 
  int _dlirmov_51629__iveras_51451 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_52493__dlirmov_51629__iveras_51451 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51629__iveras_51451 = _fill_( 0, _emal_52493__dlirmov_51629__iveras_51451); 
    _emal_52492__dlirmov_51630__iveras_51452 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51630__iveras_51452 = _fill_( 0, _emal_52492__dlirmov_51630__iveras_51452); 
    _emal_52491__dlirmov_51631__iveras_51453 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51631__iveras_51453 = _fill_( 1, _emal_52491__dlirmov_51631__iveras_51453); 
    _emal_52490__dlirmov_51632__iveras_51454 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51632__iveras_51454 = _fill_( 1, _emal_52490__dlirmov_51632__iveras_51454); 
    _emlr_55122_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55642_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55643_val = _fill_( _isreused_( _emlr_55122_P, P), _emrb_55642_mem); 
    _emlr_55123_P = _MAIN::_dup_5640_BlockHoare__Cond_16__ReuseCond_34( _emrb_55643_val, _emlr_55122_P, P) ; 
    _emlr_55120_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55121_j = _fill_( _copy_( j), _emlr_55120_j); 
    P__SSA0_1 = _MAIN::_dup_5639_BlockHoare__Loop_15( _dlirmov_51632__iveras_51454, _dlirmov_51631__iveras_51453, _dlirmov_51630__iveras_51452, _dlirmov_51629__iveras_51451, offsetsl, offsetsr, startl, startr, num, _emlr_55121_j, r, l, _emlr_55123_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5640_BlockHoare__Cond_16__ReuseCond_34(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5640_BlockHoare__Cond_16__ReuseCond_34( bool _emrb_55638 { ,NN } , double[1000000,2] _emlr_55122_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5640_BlockHoare__Cond_16__ReuseCond_34 ::  ---
 */
{ 
  double[1000000,2] _emrb_55641 { , NN } ; 
  double[1000000,2] _dup_55640__emlr_55123_P { , NN } ; 
  double[1000000,2] _dup_55639__emlr_55123_P { , NN } ; 

  if (_emrb_55638) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55638, 1); 
    _dup_55639__emlr_55123_P = _fill_( _noop_( P), _emlr_55122_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55638, 1); 
    _dup_55640__emlr_55123_P = _fill_( _copy_( P), _emlr_55122_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55641 = ( _emrb_55638 ? _dup_55639__emlr_55123_P : _dup_55640__emlr_55123_P ); 
  return( _emrb_55641); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5639_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5639_BlockHoare__Loop_15( int _iveras_51454 { ,NN } , int _iveras_51453 { ,NN } , int _iveras_51452 { ,NN } , int _iveras_51451 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5639_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55760 { , NN } ; 
  double _emdr_55759 { , NN } ; 
  double _emdr_55758 { , NN } ; 
  int _emal_52549__ivesli_48169 { , NN } ; 
  int _emal_52548__pinl_3507__flat_68 { , NN } ; 
  int _emal_52547__pinl_3510__flat_41 { , NN } ; 
  int _emal_52546__ivesli_48166 { , NN } ; 
  int _emal_52545__pinl_3522__flat_68 { , NN } ; 
  int _emal_52544__pinl_3525__flat_40 { , NN } ; 
  int _emal_52541__ivesli_48165 { , NN } ; 
  double _emal_52540__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_52538__ivesli_48161 { , NN } ; 
  double _emal_52537__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_52534__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52532__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52530__uprf_7383 { , NN } ; 
  int _emal_52529__pinl_10477_z { , NN } ; 
  double _emal_52525_val { , NN } ; 
  double _emal_52524_val { , NN } ; 
  double[1000000,2] _emal_52523__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_52522__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_52521__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_52519__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52518__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52516__uprf_7380 { , NN } ; 
  int _emal_52515__pinl_10492_z { , NN } ; 
  double _emal_52511_val { , NN } ; 
  double _emal_52510_val { , NN } ; 
  double _emal_52508__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_52507__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_52505__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52504__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52499_val { , NN } ; 
  double _emal_52498_val { , NN } ; 
  int _emal_52496__pinl_3746__flat_122 { , NN } ; 
  int _emal_52495__ctz_7618 { , NN } ; 
  bool _emal_52494__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48169 { , NN } ; 
  int _ivesli_48166 { , NN } ; 
  int _ivesli_48165 { , NN } ; 
  int _ivesli_48163 { , NN } ; 
  int _ivesli_48162 { , NN } ; 
  int _ivesli_48161 { , NN } ; 
  int _ivesli_48159 { , NN } ; 
  int _ivesli_48158 { , NN } ; 
  int _ivesli_48154 { , NN } ; 
  int _wlidx_47872__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47871__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47870__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_13856 { , NN } ; 
  int[2] _wlsb_13828 { , NN } ; 
  int[2] _wlsb_13800 { , NN } ; 
  int _eat_13192 { , NN } ; 
  int _eat_13191 { , NN } ; 
  int _eat_13190 { , NN } ; 
  int _pinl_10477_z { , NN } ; 
  int _pinl_10492_z { , NN } ; 
  int _ctz_7618 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7383 { , NN } ; 
  int _uprf_7380 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_52549__ivesli_48169 = _alloc_( 1, 0, [:int]); 
  _ivesli_48169 = _fill_( _add_SxS_( startr, j), _emal_52549__ivesli_48169); 
  _emal_52548__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48169, offsetsr), _emal_52548__pinl_3507__flat_68); 
  _free_( _ivesli_48169); 
  _emal_52547__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_52547__pinl_3510__flat_41); 
  _emal_52546__ivesli_48166 = _alloc_( 1, 0, [:int]); 
  _ivesli_48166 = _fill_( _add_SxS_( startl, j), _emal_52546__ivesli_48166); 
  _emal_52545__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48166, offsetsl), _emal_52545__pinl_3522__flat_68); 
  _free_( _ivesli_48166); 
  _emal_52544__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_52544__pinl_3525__flat_40); 
  _ivesli_48162 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48163 = _fill_( _neg_S_( _ivesli_48162), _ivesli_48162); 
  _emal_52541__ivesli_48165 = _alloc_( 1, 0, [:int]); 
  _ivesli_48165 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48163, _iveras_51451), _emal_52541__ivesli_48165); 
  _emal_52540__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48165, P), _emal_52540__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48159 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_52538__ivesli_48161 = _alloc_( 1, 0, [:int]); 
  _ivesli_48161 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48159, _iveras_51452), _emal_52538__ivesli_48161); 
  _emal_52537__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48161, P), _emal_52537__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48158 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48163, _iveras_51453), _ivesli_48163); 
  _emal_52534__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48158, P), _emal_52534__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48154 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48159, _iveras_51454), _ivesli_48159); 
  _emal_52532__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48154, P), _emal_52532__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_52530__uprf_7383 = _alloc_( 1, 0, [:int]); 
  _uprf_7383 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_52530__uprf_7383); 
  _emal_52529__pinl_10477_z = _alloc_( 1, 0, [:int]); 
  _pinl_10477_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7383), _emal_52529__pinl_10477_z); 
  _emal_52523__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13190 = _alloc_( 1, 0, [:int]); 
  _wlidx_47870__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_13856=[_pinl_3681__eat_766, _eat_13190] (IDXS:_wlidx_47870__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52524_val = _wl_assign_( _pinl_3716__flat_1457, _emal_52523__pinl_3535_P__SSA0_1, _wlsb_13856, _wlidx_47870__pinl_3535_P__SSA0_1); 
        } : _emal_52524_val ; ,
      op_1 =
        { 
          _emal_52525_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_52523__pinl_3535_P__SSA0_1, _wlsb_13856, _wlidx_47870__pinl_3535_P__SSA0_1); 
        } : _emal_52525_val ; ,
      op_2 =
        { 
          _emdr_55758 = _noop_( _wlsb_13856); 
        } : _emdr_55758 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7383, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7383), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7383, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7383), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10477_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10477_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_52523__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47870__pinl_3535_P__SSA0_1)); 
  _free_( _eat_13190); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47870__pinl_3535_P__SSA0_1); 
  _emal_52522__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48165, _pinl_3535_P__SSA0_1), _emal_52522__pinl_3675__flat_149__SSA2_1); 
  _emal_52521__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48161, _pinl_3535_P__SSA0_1), _emal_52521__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_52519__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48158, _pinl_3535_P__SSA0_1), _emal_52519__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52518__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48154, _pinl_3535_P__SSA0_1), _emal_52518__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52516__uprf_7380 = _alloc_( 1, 0, [:int]); 
  _uprf_7380 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_52516__uprf_7380); 
  _emal_52515__pinl_10492_z = _alloc_( 1, 0, [:int]); 
  _pinl_10492_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7380), _emal_52515__pinl_10492_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13191 = _alloc_( 1, 0, [:int]); 
  _wlidx_47871__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_13828=[_pinl_3613__eat_766, _eat_13191] (IDXS:_wlidx_47871__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52510_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_13828, _wlidx_47871__pinl_3537_P__SSA0_3); 
        } : _emal_52510_val ; ,
      op_1 =
        { 
          _emal_52511_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_13828, _wlidx_47871__pinl_3537_P__SSA0_3); 
        } : _emal_52511_val ; ,
      op_2 =
        { 
          _emdr_55759 = _noop_( _wlsb_13828); 
        } : _emdr_55759 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7380, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7380), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7380, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7380), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10492_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10492_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47871__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_10492_z); 
  _free_( _uprf_7380); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_13191); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47871__pinl_3537_P__SSA0_3); 
  _emal_52508__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48165, _pinl_3537_P__SSA0_3), _emal_52508__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48165); 
  _emal_52507__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48161, _pinl_3537_P__SSA0_3), _emal_52507__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48161); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_52505__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48158, _pinl_3537_P__SSA0_3), _emal_52505__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48158); 
  _emal_52504__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48154, _pinl_3537_P__SSA0_3), _emal_52504__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48154); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13192 = _alloc_( 1, 0, [:int]); 
  _wlidx_47872__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_13800=[_pinl_3545__eat_766, _eat_13192] (IDXS:_wlidx_47872__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52498_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_13800, _wlidx_47872__pinl_3539_P__SSA0_5); 
        } : _emal_52498_val ; ,
      op_1 =
        { 
          _emal_52499_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_13800, _wlidx_47872__pinl_3539_P__SSA0_5); 
        } : _emal_52499_val ; ,
      op_2 =
        { 
          _emdr_55760 = _noop_( _wlsb_13800); 
        } : _emdr_55760 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7383, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7383), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7383, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7383), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10477_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10477_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47872__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_10477_z); 
  _free_( _uprf_7383); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_13192); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47872__pinl_3539_P__SSA0_5); 
  _emal_52496__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_52496__pinl_3746__flat_122); 
  _emal_52495__ctz_7618 = _alloc_( 1, 0, [:int]); 
  _ctz_7618 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_52495__ctz_7618); 
  _emal_52494__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7618, 0), _emal_52494__pinl_3747__flat_196); 
  _free_( _ctz_7618); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5639_BlockHoare__Loop_15( _iveras_51454, _iveras_51453, _iveras_51452, _iveras_51451, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51451, 1); 
    _dec_rc_( _iveras_51452, 1); 
    _dec_rc_( _iveras_51453, 1); 
    _dec_rc_( _iveras_51454, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5638_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5638_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5638_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5637_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5637_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5637_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55636_val { , NN } ; 
  bool _emrb_55635_mem { , NN } ; 
  int{0} _emlr_55129_startr__SSA0_1 { , NN } ; 
  int _emlr_55128_startr__SSA0_1 { , NN } ; 
  int _emlr_55127_numr { , NN } ; 
  int _emlr_55126_numr { , NN } ; 
  int[64] _emlr_55125_offsetsr { , NN } ; 
  int[64] _emlr_55124_offsetsr { , NN } ; 
  int _emal_52557_startr__SSA0_1 { , NN } ; 
  int _emal_52556__ivesplit_24242 { , NN } ; 
  double _emal_52555__pinl_10799__ls_6229 { , NN } ; 
  double _emal_52554__pinl_10800__ls_6230 { , NN } ; 
  double _emal_52553__pinl_10795__ls_6219 { , NN } ; 
  double _emal_52552__pinl_10796__ls_6220 { , NN } ; 
  int _emal_52551__dlirmov_51627__iveras_51395 { , NN } ; 
  int _emal_52550__dlirmov_51628__iveras_51396 { , NN } ; 
  int _dlirmov_51628__iveras_51396 { , NN } ; 
  int _dlirmov_51627__iveras_51395 { , NN } ; 
  int{1} _ivesplit_24242 { , NN } ; 
  double _pinl_10800__ls_6230 { , NN } ; 
  double _pinl_10799__ls_6229 { , NN } ; 
  double _pinl_10796__ls_6220 { , NN } ; 
  double _pinl_10795__ls_6219 { , NN } ; 
  int _pinl_10794_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_10793_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_10792_max__SSA0_1 { , NN } ; 
  double[2] _pinl_10791_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_52557_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_52557_startr__SSA0_1); 
    _emal_52556__ivesplit_24242 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24242 = _fill_( 1, _emal_52556__ivesplit_24242); 
    _emal_52555__pinl_10799__ls_6229 = _alloc_( 1, 0, [:int]); 
    _pinl_10799__ls_6229 = _fill_( _idx_sel_( _ivesplit_24242, q), _emal_52555__pinl_10799__ls_6229); 
    _emal_52554__pinl_10800__ls_6230 = _alloc_( 1, 0, [:int]); 
    _pinl_10800__ls_6230 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_52554__pinl_10800__ls_6230); 
    _emal_52553__pinl_10795__ls_6219 = _alloc_( 1, 0, [:int]); 
    _pinl_10795__ls_6219 = _fill_( _idx_sel_( _ivesplit_24242, p), _emal_52553__pinl_10795__ls_6219); 
    _free_( _ivesplit_24242); 
    _emal_52552__pinl_10796__ls_6220 = _alloc_( 1, 0, [:int]); 
    _pinl_10796__ls_6220 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_52552__pinl_10796__ls_6220); 
    _emal_52551__dlirmov_51627__iveras_51395 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51627__iveras_51395 = _fill_( 0, _emal_52551__dlirmov_51627__iveras_51395); 
    _emal_52550__dlirmov_51628__iveras_51396 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51628__iveras_51396 = _fill_( 1, _emal_52550__dlirmov_51628__iveras_51396); 
    _emlr_55128_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55129_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55128_startr__SSA0_1); 
    _emlr_55126_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55127_numr = _fill_( _copy_( numr), _emlr_55126_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55124_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55635_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55636_val = _fill_( _isreused_( _emlr_55124_offsetsr, offsetsr), _emrb_55635_mem); 
    _emlr_55125_offsetsr = _MAIN::_dup_5637_BlockHoare__Cond_20__ReuseCond_33( _emrb_55636_val, _emlr_55124_offsetsr, offsetsr) ; 
    _pinl_10791_argmax__SSA0_1, _pinl_10792_max__SSA0_1, _pinl_10793_offsetsr__SSA0_1, _pinl_10794_numr__SSA0_1 = _MAIN::_dup_10802_BlockHoare__Loop_18( _dlirmov_51628__iveras_51396, _dlirmov_51627__iveras_51395, argmax, max, _emlr_55125_offsetsr, _emlr_55127_numr, _emlr_55129_startr__SSA0_1, _pinl_10800__ls_6230, _pinl_10799__ls_6229, _pinl_10796__ls_6220, _pinl_10795__ls_6219, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_10794_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_10793_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_10792_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_10791_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5637_BlockHoare__Cond_20__ReuseCond_33(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5637_BlockHoare__Cond_20__ReuseCond_33( bool _emrb_55631 { ,NN } , int[64] _emlr_55124_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5637_BlockHoare__Cond_20__ReuseCond_33 ::  ---
 */
{ 
  int[64] _emrb_55634 { , NN } ; 
  int[64] _dup_55633__emlr_55125_offsetsr { , NN } ; 
  int[64] _dup_55632__emlr_55125_offsetsr { , NN } ; 

  if (_emrb_55631) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55631, 1); 
    _dup_55632__emlr_55125_offsetsr = _fill_( _noop_( offsetsr), _emlr_55124_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55631, 1); 
    _dup_55633__emlr_55125_offsetsr = _fill_( _copy_( offsetsr), _emlr_55124_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55634 = ( _emrb_55631 ? _dup_55632__emlr_55125_offsetsr : _dup_55633__emlr_55125_offsetsr ); 
  return( _emrb_55634); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5633_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5633_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5633_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55629_val { , NN } ; 
  bool _emrb_55628_mem { , NN } ; 
  int{0} _emlr_55135_startl__SSA0_1 { , NN } ; 
  int _emlr_55134_startl__SSA0_1 { , NN } ; 
  int _emlr_55133_numl { , NN } ; 
  int _emlr_55132_numl { , NN } ; 
  int[64] _emlr_55131_offsetsl { , NN } ; 
  int[64] _emlr_55130_offsetsl { , NN } ; 
  int _emal_52565_startl__SSA0_1 { , NN } ; 
  int _emal_52564__ivesplit_24250 { , NN } ; 
  double _emal_52563__pinl_10787__ls_6249 { , NN } ; 
  double _emal_52562__pinl_10788__ls_6250 { , NN } ; 
  double _emal_52561__pinl_10783__ls_6239 { , NN } ; 
  double _emal_52560__pinl_10784__ls_6240 { , NN } ; 
  int _emal_52559__dlirmov_51625__iveras_51397 { , NN } ; 
  int _emal_52558__dlirmov_51626__iveras_51398 { , NN } ; 
  int _dlirmov_51626__iveras_51398 { , NN } ; 
  int _dlirmov_51625__iveras_51397 { , NN } ; 
  int{1} _ivesplit_24250 { , NN } ; 
  double _pinl_10788__ls_6250 { , NN } ; 
  double _pinl_10787__ls_6249 { , NN } ; 
  double _pinl_10784__ls_6240 { , NN } ; 
  double _pinl_10783__ls_6239 { , NN } ; 
  int _pinl_10782_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_10781_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_10780_max__SSA0_1 { , NN } ; 
  double[2] _pinl_10779_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_52565_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_52565_startl__SSA0_1); 
    _emal_52564__ivesplit_24250 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24250 = _fill_( 1, _emal_52564__ivesplit_24250); 
    _emal_52563__pinl_10787__ls_6249 = _alloc_( 1, 0, [:int]); 
    _pinl_10787__ls_6249 = _fill_( _idx_sel_( _ivesplit_24250, q), _emal_52563__pinl_10787__ls_6249); 
    _emal_52562__pinl_10788__ls_6250 = _alloc_( 1, 0, [:int]); 
    _pinl_10788__ls_6250 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_52562__pinl_10788__ls_6250); 
    _emal_52561__pinl_10783__ls_6239 = _alloc_( 1, 0, [:int]); 
    _pinl_10783__ls_6239 = _fill_( _idx_sel_( _ivesplit_24250, p), _emal_52561__pinl_10783__ls_6239); 
    _free_( _ivesplit_24250); 
    _emal_52560__pinl_10784__ls_6240 = _alloc_( 1, 0, [:int]); 
    _pinl_10784__ls_6240 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_52560__pinl_10784__ls_6240); 
    _emal_52559__dlirmov_51625__iveras_51397 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51625__iveras_51397 = _fill_( 0, _emal_52559__dlirmov_51625__iveras_51397); 
    _emal_52558__dlirmov_51626__iveras_51398 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51626__iveras_51398 = _fill_( 1, _emal_52558__dlirmov_51626__iveras_51398); 
    _emlr_55134_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55135_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55134_startl__SSA0_1); 
    _emlr_55132_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55133_numl = _fill_( _copy_( numl), _emlr_55132_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55130_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55628_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55629_val = _fill_( _isreused_( _emlr_55130_offsetsl, offsetsl), _emrb_55628_mem); 
    _emlr_55131_offsetsl = _MAIN::_dup_5633_BlockHoare__Cond_23__ReuseCond_32( _emrb_55629_val, _emlr_55130_offsetsl, offsetsl) ; 
    _pinl_10779_argmax__SSA0_1, _pinl_10780_max__SSA0_1, _pinl_10781_offsetsl__SSA0_1, _pinl_10782_numl__SSA0_1 = _MAIN::_dup_10790_BlockHoare__Loop_21( _dlirmov_51626__iveras_51398, _dlirmov_51625__iveras_51397, argmax, max, _emlr_55131_offsetsl, _emlr_55133_numl, _emlr_55135_startl__SSA0_1, _pinl_10788__ls_6250, _pinl_10787__ls_6249, _pinl_10784__ls_6240, _pinl_10783__ls_6239, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_10782_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_10781_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_10780_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_10779_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5633_BlockHoare__Cond_23__ReuseCond_32(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5633_BlockHoare__Cond_23__ReuseCond_32( bool _emrb_55624 { ,NN } , int[64] _emlr_55130_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5633_BlockHoare__Cond_23__ReuseCond_32 ::  ---
 */
{ 
  int[64] _emrb_55627 { , NN } ; 
  int[64] _dup_55626__emlr_55131_offsetsl { , NN } ; 
  int[64] _dup_55625__emlr_55131_offsetsl { , NN } ; 

  if (_emrb_55624) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55624, 1); 
    _dup_55625__emlr_55131_offsetsl = _fill_( _noop_( offsetsl), _emlr_55130_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55624, 1); 
    _dup_55626__emlr_55131_offsetsl = _fill_( _copy_( offsetsl), _emlr_55130_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55627 = ( _emrb_55624 ? _dup_55625__emlr_55131_offsetsl : _dup_55626__emlr_55131_offsetsl ); 
  return( _emrb_55627); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5629_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5629_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5629_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5628_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
    _inc_rc_( l__SSA0_1, 1); 
  }
  else
  { 
    _inc_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5628_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5628_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5628_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_52572__ctz_7638 { , NN } ; 
  bool _emal_52571__pinl_3760__flat_197 { , NN } ; 
  int _emal_52570__ctz_7636 { , NN } ; 
  bool _emal_52569__pinl_4092__flat_197 { , NN } ; 
  int _emal_52568__ctz_7634 { , NN } ; 
  bool _emal_52567__pinl_4425__flat_196 { , NN } ; 
  bool _emal_52566__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7638 { , NN } ; 
  int _ctz_7636 { , NN } ; 
  int _ctz_7634 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_52572__ctz_7638 = _alloc_( 1, 0, [:int]); 
  _ctz_7638 = _fill_( _sub_SxS_( l, r), _emal_52572__ctz_7638); 
  _emal_52571__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7638, 0), _emal_52571__pinl_3760__flat_197); 
  _free_( _ctz_7638); 
  _hce_6 = _MAIN::_dup_5616_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5620_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_52570__ctz_7636 = _alloc_( 1, 0, [:int]); 
  _ctz_7636 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_52570__ctz_7636); 
  _emal_52569__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7636, 0), _emal_52569__pinl_4092__flat_197); 
  _free_( _ctz_7636); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5626_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_52568__ctz_7634 = _alloc_( 1, 0, [:int]); 
  _ctz_7634 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_52568__ctz_7634); 
  _emal_52567__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7634, 0), _emal_52567__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5627_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_52566__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7634, 0), _emal_52566__pinl_4645__flat_197); 
  _free_( _ctz_7634); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5628_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5627_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5627_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5627_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55763 { , NN } ; 
  double _emdr_55762 { , NN } ; 
  bool _emrb_55622_val { , NN } ; 
  bool _emrb_55621_mem { , NN } ; 
  int _emal_52620__iveras_51455 { , NN } ; 
  int _emal_52619__ivesli_48182 { , NN } ; 
  double _emal_52618__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_52617__iveras_51456 { , NN } ; 
  int _emal_52616__ivesli_48180 { , NN } ; 
  double _emal_52615__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_52614__pinl_4616__flat_1457 { , NN } ; 
  int _emal_52613__iveras_51457 { , NN } ; 
  int _emal_52612__ivesli_48178 { , NN } ; 
  double _emal_52611__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52610__iveras_51458 { , NN } ; 
  int _emal_52609__ivesli_48176 { , NN } ; 
  double _emal_52608__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52607__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_52606__uprf_7392 { , NN } ; 
  int _emal_52605__pinl_10417_z { , NN } ; 
  double[1000000,2] _emal_52599__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_52598__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_52597__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_52596__pinl_4548__flat_1465 { , NN } ; 
  double _emal_52595__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52594__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52593__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_52592__uprf_7389 { , NN } ; 
  int _emal_52591__pinl_10432_z { , NN } ; 
  double _emal_52587_val { , NN } ; 
  double _emal_52586_val { , NN } ; 
  double[1000000,2] _emal_52585__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_52584__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_52583__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_52582__pinl_4480__flat_1465 { , NN } ; 
  double _emal_52581__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52580__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52579__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_52575_val { , NN } ; 
  double _emal_52574_val { , NN } ; 
  double[1000000,2] _emal_52573__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51458 { , NN } ; 
  int _iveras_51457 { , NN } ; 
  int _iveras_51456 { , NN } ; 
  int _iveras_51455 { , NN } ; 
  int _ivesli_48182 { , NN } ; 
  int _ivesli_48180 { , NN } ; 
  int _ivesli_48178 { , NN } ; 
  int _ivesli_48176 { , NN } ; 
  int _wlidx_47875__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47874__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47873__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_13912 { , NN } ; 
  int[2] _wlsb_13884 { , NN } ; 
  int _eat_13188 { , NN } ; 
  int _eat_13187 { , NN } ; 
  int _pinl_10417_z { , NN } ; 
  int _pinl_10432_z { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7392 { , NN } ; 
  int _uprf_7389 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_52620__iveras_51455 = _alloc_( 1, 0, [:int]); 
    _iveras_51455 = _fill_( 0, _emal_52620__iveras_51455); 
    _ivesli_48182 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51455), _iveras_51455); 
    _emal_52618__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48182, P), _emal_52618__pinl_4643__flat_149__SSA2_1); 
    _emal_52617__iveras_51456 = _alloc_( 1, 0, [:int]); 
    _iveras_51456 = _fill_( 0, _emal_52617__iveras_51456); 
    _ivesli_48180 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51456), _iveras_51456); 
    _emal_52615__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48180, P), _emal_52615__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_52613__iveras_51457 = _alloc_( 1, 0, [:int]); 
    _iveras_51457 = _fill_( 1, _emal_52613__iveras_51457); 
    _ivesli_48178 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51457), _iveras_51457); 
    _emal_52611__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48178, P), _emal_52611__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52610__iveras_51458 = _alloc_( 1, 0, [:int]); 
    _iveras_51458 = _fill_( 1, _emal_52610__iveras_51458); 
    _ivesli_48176 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51458), _iveras_51458); 
    _emal_52608__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48176, P), _emal_52608__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52606__uprf_7392 = _alloc_( 1, 0, [:int]); 
    _uprf_7392 = _fill_( _add_SxS_( 1, l), _emal_52606__uprf_7392); 
    _emal_52605__pinl_10417_z = _alloc_( 1, 0, [:int]); 
    _pinl_10417_z = _fill_( _max_SxS_( _uprf_7392, l), _emal_52605__pinl_10417_z); 
    _emal_52599__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47873__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55621_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55622_val = _fill_( _isreused_( _emal_52599__pinl_4435_P__SSA0_1, P), _emrb_55621_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5627_BlockHoare__Cond_1__ReuseCond_31( _emrb_55622_val, _pinl_4616__flat_1457, _uprf_7392, _pinl_4616__flat_1457__SSA3_2, _pinl_10417_z, _wlidx_47873__pinl_4435_P__SSA0_1, _emal_52599__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_52598__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48182, _pinl_4435_P__SSA0_1), _emal_52598__pinl_4575__flat_149__SSA2_1); 
    _emal_52597__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48180, _pinl_4435_P__SSA0_1), _emal_52597__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_52595__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48178, _pinl_4435_P__SSA0_1), _emal_52595__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52594__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48176, _pinl_4435_P__SSA0_1), _emal_52594__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52592__uprf_7389 = _alloc_( 1, 0, [:int]); 
    _uprf_7389 = _fill_( _add_SxS_( 1, r), _emal_52592__uprf_7389); 
    _emal_52591__pinl_10432_z = _alloc_( 1, 0, [:int]); 
    _pinl_10432_z = _fill_( _max_SxS_( _uprf_7389, r), _emal_52591__pinl_10432_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_13187 = _alloc_( 1, 0, [:int]); 
    _wlidx_47874__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_13912=[_pinl_4513__eat_766, _eat_13187] (IDXS:_wlidx_47874__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52586_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_13912, _wlidx_47874__pinl_4437_P__SSA0_3); 
          } : _emal_52586_val ; ,
        op_1 =
          { 
            _emal_52587_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_13912, _wlidx_47874__pinl_4437_P__SSA0_3); 
          } : _emal_52587_val ; ,
        op_2 =
          { 
            _emdr_55762 = _noop_( _wlsb_13912); 
          } : _emdr_55762 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7389, 1 ]
         */
        (r => _uprf_7389), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7389, 2 ]
         */
        (r => _uprf_7389), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10432_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10432_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47874__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_10432_z); 
    _free_( _uprf_7389); 
    _free_( _eat_13187); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47874__pinl_4437_P__SSA0_3); 
    _emal_52584__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48182, _pinl_4437_P__SSA0_3), _emal_52584__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48182); 
    _emal_52583__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48180, _pinl_4437_P__SSA0_3), _emal_52583__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48180); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_52581__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48178, _pinl_4437_P__SSA0_3), _emal_52581__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48178); 
    _emal_52580__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48176, _pinl_4437_P__SSA0_3), _emal_52580__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48176); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_13188 = _alloc_( 1, 0, [:int]); 
    _wlidx_47875__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_13884=[_pinl_4445__eat_766, _eat_13188] (IDXS:_wlidx_47875__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52574_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_13884, _wlidx_47875__pinl_4439_P__SSA0_5); 
          } : _emal_52574_val ; ,
        op_1 =
          { 
            _emal_52575_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_13884, _wlidx_47875__pinl_4439_P__SSA0_5); 
          } : _emal_52575_val ; ,
        op_2 =
          { 
            _emdr_55763 = _noop_( _wlsb_13884); 
          } : _emdr_55763 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7392, 1 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7392, 2 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10417_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10417_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47875__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_10417_z); 
    _free_( _uprf_7392); 
    _free_( _eat_13188); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47875__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5627_BlockHoare__Cond_1__ReuseCond_31(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5627_BlockHoare__Cond_1__ReuseCond_31( bool _emrb_55597 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _uprf_7392 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _pinl_10417_z { ,NN } , int _wlidx_47873__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_52599__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5627_BlockHoare__Cond_1__ReuseCond_31 ::  ---
 */
{ 
  double _emdr_55761 { , NN } ; 
  double[1000000,2] _emrb_55620 { , NN } ; 
  double _dup_55619__emal_52604_val { , NN } ; 
  double _dup_55618__pinl_10428__flat_28 { , NN } ; 
  double _dup_55617__emal_52602__dup_13946__pinl_10428__flat_28 { , NN } ; 
  int _dup_55616__ivesli_48174 { , NN } ; 
  int _dup_55615__emal_52603__ivesli_48174 { , NN } ; 
  double _dup_55614__emal_52601_val { , NN } ; 
  double _dup_55613__emal_52600_val { , NN } ; 
  double[1000000,2] _dup_55612__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55611__eat_13186 { , NN } ; 
  int _dup_55610__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55609__wlsb_13940 { , NN } ; 
  double _dup_55603__emal_52601_val { , NN } ; 
  double _dup_55602__emal_52600_val { , NN } ; 
  double[1000000,2] _dup_55601__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55600__eat_13186 { , NN } ; 
  int _dup_55599__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55598__wlsb_13940 { , NN } ; 

  if (_emrb_55597) 
  { 
    _dec_rc_( _emrb_55597, 1); 
    _dup_55599__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55600__eat_13186 = _alloc_( 1, 0, [:int]); 
    _dup_55601__pinl_4435_P__SSA0_1 = with2 (_dup_55598__wlsb_13940=[_dup_55599__pinl_4581__eat_766, _dup_55600__eat_13186] (IDXS:_wlidx_47873__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55602__emal_52600_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52599__pinl_4435_P__SSA0_1, _dup_55598__wlsb_13940, _wlidx_47873__pinl_4435_P__SSA0_1); 
          } : _dup_55602__emal_52600_val ; ,
        op_1 =
          { 
            _dup_55603__emal_52601_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52599__pinl_4435_P__SSA0_1, _dup_55598__wlsb_13940, _wlidx_47873__pinl_4435_P__SSA0_1); 
          } : _dup_55603__emal_52601_val ; ,
        op_2 =
          { 
            _emdr_55761 = _noop_( _dup_55598__wlsb_13940); 
          } : _emdr_55761 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7392, 1 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7392, 2 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10417_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10417_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52599__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47873__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55600__eat_13186); 
    _free_( _dup_55599__pinl_4581__eat_766); 
    _free_( _wlidx_47873__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55597, 1); 
    _dup_55610__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55611__eat_13186 = _alloc_( 1, 0, [:int]); 
    _dup_55612__pinl_4435_P__SSA0_1 = with2 (_dup_55609__wlsb_13940=[_dup_55610__pinl_4581__eat_766, _dup_55611__eat_13186] (IDXS:_wlidx_47873__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55613__emal_52600_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52599__pinl_4435_P__SSA0_1, _dup_55609__wlsb_13940, _wlidx_47873__pinl_4435_P__SSA0_1); 
          } : _dup_55613__emal_52600_val ; ,
        op_1 =
          { 
            _dup_55614__emal_52601_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52599__pinl_4435_P__SSA0_1, _dup_55609__wlsb_13940, _wlidx_47873__pinl_4435_P__SSA0_1); 
          } : _dup_55614__emal_52601_val ; ,
        op_2 =
          { 
            _dup_55615__emal_52603__ivesli_48174 = _alloc_( 1, 0, [:int]); 
            _dup_55616__ivesli_48174 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55610__pinl_4581__eat_766, _dup_55611__eat_13186), _dup_55615__emal_52603__ivesli_48174); 
            _dup_55617__emal_52602__dup_13946__pinl_10428__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55618__pinl_10428__flat_28 = _fill_( _idx_sel_( _dup_55616__ivesli_48174, P), _dup_55617__emal_52602__dup_13946__pinl_10428__flat_28); 
            _free_( _dup_55616__ivesli_48174); 
            _dup_55619__emal_52604_val = _wl_assign_( _dup_55618__pinl_10428__flat_28, _emal_52599__pinl_4435_P__SSA0_1, _dup_55609__wlsb_13940, _wlidx_47873__pinl_4435_P__SSA0_1); 
            _free_( _dup_55618__pinl_10428__flat_28); 
          } : _dup_55619__emal_52604_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7392, 1 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7392, 2 ]
         */
        (l => _uprf_7392), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_10417_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_10417_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52599__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47873__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55610__pinl_4581__eat_766); 
    _free_( _dup_55611__eat_13186); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47873__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55620 = ( _emrb_55597 ? _dup_55601__pinl_4435_P__SSA0_1 : _dup_55612__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55620); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5626_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5626_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5626_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_52622__ctz_7640 { , NN } ; 
  bool _emal_52621__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7640 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_52622__ctz_7640 = _alloc_( 1, 0, [:int]); 
    _ctz_7640 = _fill_( _sub_SxS_( l, r), _emal_52622__ctz_7640); 
    _emal_52621__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7640, 0), _emal_52621__pinl_4093__flat_197); 
    _free_( _ctz_7640); 
    _hce_4 = _MAIN::_dup_5621_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5625_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5625_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5625_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5625_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55137_r { , NN } ; 
  int _emlr_55136_r { , NN } ; 
  int _emal_52630__dlirmov_50821__wlsimp_6821 { , NN } ; 
  int _emal_52629__dlirmov_50823__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_52628__dlirmov_50826__pinl_4296__flat_149 { , NN } ; 
  double _emal_52627__dlirmov_50829__pinl_4271__flat_149 { , NN } ; 
  double _emal_52626__dlirmov_50832__pinl_4257__flat_149 { , NN } ; 
  double _emal_52625__dlirmov_50835__pinl_4244__flat_149 { , NN } ; 
  int _emal_52624__dlirmov_51623__iveras_51459 { , NN } ; 
  int _emal_52623__dlirmov_51624__iveras_51460 { , NN } ; 
  int _dlirmov_51624__iveras_51460 { , NN } ; 
  int _dlirmov_51623__iveras_51459 { , NN } ; 
  double _dlirmov_50835__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_50832__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_50829__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_50826__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_50823__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50821__wlsimp_6821 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_52630__dlirmov_50821__wlsimp_6821 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50821__wlsimp_6821 = _fill_( 0, _emal_52630__dlirmov_50821__wlsimp_6821); 
    _emal_52629__dlirmov_50823__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50823__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_52629__dlirmov_50823__pinl_4214__eat_768__SSA3_1); 
    _emal_52628__dlirmov_50826__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50826__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_50821__wlsimp_6821, q), _emal_52628__dlirmov_50826__pinl_4296__flat_149); 
    _emal_52627__dlirmov_50829__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50829__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_50823__pinl_4214__eat_768__SSA3_1, p), _emal_52627__dlirmov_50829__pinl_4271__flat_149); 
    _emal_52626__dlirmov_50832__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50832__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_50823__pinl_4214__eat_768__SSA3_1, q), _emal_52626__dlirmov_50832__pinl_4257__flat_149); 
    _free_( _dlirmov_50823__pinl_4214__eat_768__SSA3_1); 
    _emal_52625__dlirmov_50835__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50835__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_50821__wlsimp_6821, p), _emal_52625__dlirmov_50835__pinl_4244__flat_149); 
    _free_( _dlirmov_50821__wlsimp_6821); 
    _emal_52624__dlirmov_51623__iveras_51459 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51623__iveras_51459 = _fill_( 0, _emal_52624__dlirmov_51623__iveras_51459); 
    _emal_52623__dlirmov_51624__iveras_51460 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51624__iveras_51460 = _fill_( 1, _emal_52623__dlirmov_51624__iveras_51460); 
    _emlr_55136_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55137_r = _fill_( _copy_( r), _emlr_55136_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5624_BlockHoare__Loop_3( _dlirmov_51624__iveras_51460, _dlirmov_51623__iveras_51459, _dlirmov_50835__pinl_4244__flat_149, _dlirmov_50832__pinl_4257__flat_149, _dlirmov_50829__pinl_4271__flat_149, _dlirmov_50826__pinl_4296__flat_149, argmax, max, q, p, _emlr_55137_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5624_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5624_BlockHoare__Loop_3( int _iveras_51460 { ,NN } , int _iveras_51459 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5624_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_52648__ivesli_48186 { , NN } ; 
  double _emal_52647__pinl_4213__flat_149 { , NN } ; 
  int _emal_52646__ivesli_48184 { , NN } ; 
  double _emal_52645__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52644__flat_129__SSA3_2 { , NN } ; 
  double _emal_52643__pinl_4284__flat_95 { , NN } ; 
  double _emal_52642__pinl_4259__flat_95 { , NN } ; 
  double _emal_52636__ctz_7644 { , NN } ; 
  bool _emal_52635__pinl_4312__flat_252 { , NN } ; 
  int _emal_52634__pinl_4315__flat_124 { , NN } ; 
  int _emal_52633__esd_8041 { , NN } ; 
  bool _emal_52631__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48186 { , NN } ; 
  int _ivesli_48184 { , NN } ; 
  int _esd_8041 { , NN } ; 
  double _ctz_7644 { , NN } ; 
  int _ctz_7642 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_52648__ivesli_48186 = _alloc_( 1, 0, [:int]); 
  _ivesli_48186 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51459), _emal_52648__ivesli_48186); 
  _emal_52647__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48186, P), _emal_52647__pinl_4213__flat_149); 
  _free_( _ivesli_48186); 
  _emal_52646__ivesli_48184 = _alloc_( 1, 0, [:int]); 
  _ivesli_48184 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51460), _emal_52646__ivesli_48184); 
  _emal_52645__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48184, P), _emal_52645__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48184); 
  _emal_52644__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_52644__flat_129__SSA3_2); 
  _emal_52643__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_52643__pinl_4284__flat_95); 
  _emal_52642__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_52642__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_52636__ctz_7644 = _alloc_( 1, 0, [:int]); 
  _ctz_7644 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_52636__ctz_7644); 
  _emal_52635__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7644, 0.0), _emal_52635__pinl_4312__flat_252); 
  _free_( _ctz_7644); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5622_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_52634__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_52634__pinl_4315__flat_124); 
  _emal_52633__esd_8041 = r; 
  _esd_8041 = _fill_( _sub_SxS_( 1, r), _emal_52633__esd_8041); 
  _ctz_7642 = _fill_( _add_SxS_( _esd_8041, l), _esd_8041); 
  _emal_52631__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7642, 0), _emal_52631__pinl_4316__flat_197); 
  _free_( _ctz_7642); 
  _hce_3 = _MAIN::_dup_5623_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5624_BlockHoare__Loop_3( _iveras_51460, _iveras_51459, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51459, 1); 
    _dec_rc_( _iveras_51460, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5623_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5623_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5623_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_52669__hce_3__SSA0_1 { , NN } ; 
  int _emal_52668__wlsimp_6824 { , NN } ; 
  int _emal_52667__iveras_51461 { , NN } ; 
  int _emal_52666__ivesli_48190 { , NN } ; 
  double _emal_52665__pinl_4328__flat_149 { , NN } ; 
  int _emal_52664__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_52663__iveras_51462 { , NN } ; 
  int _emal_52662__ivesli_48188 { , NN } ; 
  double _emal_52661__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_52660__pinl_4411__flat_149 { , NN } ; 
  double _emal_52659__pinl_4399__flat_95 { , NN } ; 
  double _emal_52658__pinl_4386__flat_149 { , NN } ; 
  double _emal_52657__pinl_4374__flat_95 { , NN } ; 
  double _emal_52656__pinl_4373__flat_96 { , NN } ; 
  double _emal_52655__pinl_4372__flat_149 { , NN } ; 
  double _emal_52654__pinl_4360__flat_95 { , NN } ; 
  double _emal_52653__pinl_4359__flat_149 { , NN } ; 
  double _emal_52652__pinl_4347__flat_95 { , NN } ; 
  double _emal_52651__pinl_4346__flat_96 { , NN } ; 
  double _emal_52650__pinl_4345__flat_95 { , NN } ; 
  bool _emal_52649__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51462 { , NN } ; 
  int _iveras_51461 { , NN } ; 
  int _ivesli_48190 { , NN } ; 
  int _ivesli_48188 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6824 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_52668__wlsimp_6824 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6824 = _fill_( 0, _emal_52668__wlsimp_6824); 
    _emal_52667__iveras_51461 = _alloc_( 1, 0, [:int]); 
    _iveras_51461 = _fill_( 0, _emal_52667__iveras_51461); 
    _ivesli_48190 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51461), _iveras_51461); 
    _emal_52665__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48190, P), _emal_52665__pinl_4328__flat_149); 
    _free_( _ivesli_48190); 
    _emal_52664__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_52664__pinl_4329__eat_768__SSA3_1); 
    _emal_52663__iveras_51462 = _alloc_( 1, 0, [:int]); 
    _iveras_51462 = _fill_( 1, _emal_52663__iveras_51462); 
    _ivesli_48188 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51462), _iveras_51462); 
    _emal_52661__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48188, P), _emal_52661__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48188); 
    _emal_52660__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_6824, q), _emal_52660__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_52658__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_52658__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_52655__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_52655__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_52653__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_6824, p), _emal_52653__pinl_4359__flat_149); 
    _free_( _wlsimp_6824); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_52649__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_52649__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_52669__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_52669__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5622_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5622_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5622_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5621_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5621_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5621_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_52690__hce_4__SSA0_1 { , NN } ; 
  int _emal_52689__wlsimp_6827 { , NN } ; 
  int _emal_52688__iveras_51463 { , NN } ; 
  int _emal_52687__ivesli_48194 { , NN } ; 
  double _emal_52686__pinl_4105__flat_149 { , NN } ; 
  int _emal_52685__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_52684__iveras_51464 { , NN } ; 
  int _emal_52683__ivesli_48192 { , NN } ; 
  double _emal_52682__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_52681__pinl_4188__flat_149 { , NN } ; 
  double _emal_52680__pinl_4176__flat_95 { , NN } ; 
  double _emal_52679__pinl_4163__flat_149 { , NN } ; 
  double _emal_52678__pinl_4151__flat_95 { , NN } ; 
  double _emal_52677__pinl_4150__flat_96 { , NN } ; 
  double _emal_52676__pinl_4149__flat_149 { , NN } ; 
  double _emal_52675__pinl_4137__flat_95 { , NN } ; 
  double _emal_52674__pinl_4136__flat_149 { , NN } ; 
  double _emal_52673__pinl_4124__flat_95 { , NN } ; 
  double _emal_52672__pinl_4123__flat_96 { , NN } ; 
  double _emal_52671__pinl_4122__flat_95 { , NN } ; 
  bool _emal_52670__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51464 { , NN } ; 
  int _iveras_51463 { , NN } ; 
  int _ivesli_48194 { , NN } ; 
  int _ivesli_48192 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6827 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_52689__wlsimp_6827 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6827 = _fill_( 0, _emal_52689__wlsimp_6827); 
    _emal_52688__iveras_51463 = _alloc_( 1, 0, [:int]); 
    _iveras_51463 = _fill_( 0, _emal_52688__iveras_51463); 
    _ivesli_48194 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51463), _iveras_51463); 
    _emal_52686__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48194, P), _emal_52686__pinl_4105__flat_149); 
    _free_( _ivesli_48194); 
    _emal_52685__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_52685__pinl_4106__eat_768__SSA3_1); 
    _emal_52684__iveras_51464 = _alloc_( 1, 0, [:int]); 
    _iveras_51464 = _fill_( 1, _emal_52684__iveras_51464); 
    _ivesli_48192 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51464), _iveras_51464); 
    _emal_52682__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48192, P), _emal_52682__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48192); 
    _emal_52681__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_6827, q), _emal_52681__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_52679__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_52679__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_52676__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_52676__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_52674__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_6827, p), _emal_52674__pinl_4136__flat_149); 
    _free_( _wlsimp_6827); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_52670__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_52670__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_52690__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_52690__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5620_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5620_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5620_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55139_l { , NN } ; 
  int _emlr_55138_l { , NN } ; 
  int _emal_52698__dlirmov_50805__wlsimp_6830 { , NN } ; 
  int _emal_52697__dlirmov_50807__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_52696__dlirmov_50810__pinl_3963__flat_149 { , NN } ; 
  double _emal_52695__dlirmov_50813__pinl_3938__flat_149 { , NN } ; 
  double _emal_52694__dlirmov_50816__pinl_3924__flat_149 { , NN } ; 
  double _emal_52693__dlirmov_50819__pinl_3911__flat_149 { , NN } ; 
  int _emal_52692__dlirmov_51621__iveras_51465 { , NN } ; 
  int _emal_52691__dlirmov_51622__iveras_51466 { , NN } ; 
  int _dlirmov_51622__iveras_51466 { , NN } ; 
  int _dlirmov_51621__iveras_51465 { , NN } ; 
  double _dlirmov_50819__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_50816__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_50813__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_50810__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_50807__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50805__wlsimp_6830 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_52698__dlirmov_50805__wlsimp_6830 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50805__wlsimp_6830 = _fill_( 0, _emal_52698__dlirmov_50805__wlsimp_6830); 
    _emal_52697__dlirmov_50807__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50807__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_52697__dlirmov_50807__pinl_3881__eat_768__SSA3_1); 
    _emal_52696__dlirmov_50810__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50810__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_50805__wlsimp_6830, q), _emal_52696__dlirmov_50810__pinl_3963__flat_149); 
    _emal_52695__dlirmov_50813__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50813__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_50807__pinl_3881__eat_768__SSA3_1, p), _emal_52695__dlirmov_50813__pinl_3938__flat_149); 
    _emal_52694__dlirmov_50816__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50816__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_50807__pinl_3881__eat_768__SSA3_1, q), _emal_52694__dlirmov_50816__pinl_3924__flat_149); 
    _free_( _dlirmov_50807__pinl_3881__eat_768__SSA3_1); 
    _emal_52693__dlirmov_50819__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50819__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_50805__wlsimp_6830, p), _emal_52693__dlirmov_50819__pinl_3911__flat_149); 
    _free_( _dlirmov_50805__wlsimp_6830); 
    _emal_52692__dlirmov_51621__iveras_51465 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51621__iveras_51465 = _fill_( 0, _emal_52692__dlirmov_51621__iveras_51465); 
    _emal_52691__dlirmov_51622__iveras_51466 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51622__iveras_51466 = _fill_( 1, _emal_52691__dlirmov_51622__iveras_51466); 
    _emlr_55138_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55139_l = _fill_( _copy_( l), _emlr_55138_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5619_BlockHoare__Loop_8( _dlirmov_51622__iveras_51466, _dlirmov_51621__iveras_51465, _dlirmov_50819__pinl_3911__flat_149, _dlirmov_50816__pinl_3924__flat_149, _dlirmov_50813__pinl_3938__flat_149, _dlirmov_50810__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55139_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5619_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5619_BlockHoare__Loop_8( int _iveras_51466 { ,NN } , int _iveras_51465 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5619_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_52715__ivesli_48198 { , NN } ; 
  double _emal_52714__pinl_3880__flat_149 { , NN } ; 
  int _emal_52713__ivesli_48196 { , NN } ; 
  double _emal_52712__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52711__flat_117__SSA3_2 { , NN } ; 
  double _emal_52710__pinl_3951__flat_95 { , NN } ; 
  double _emal_52709__pinl_3926__flat_95 { , NN } ; 
  double _emal_52703__ctz_7648 { , NN } ; 
  bool _emal_52702__pinl_3979__flat_252 { , NN } ; 
  int _emal_52701__pinl_3982__flat_122 { , NN } ; 
  int _emal_52700__ctz_7646 { , NN } ; 
  bool _emal_52699__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48198 { , NN } ; 
  int _ivesli_48196 { , NN } ; 
  double _ctz_7648 { , NN } ; 
  int _ctz_7646 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_52715__ivesli_48198 = _alloc_( 1, 0, [:int]); 
  _ivesli_48198 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51465), _emal_52715__ivesli_48198); 
  _emal_52714__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48198, P), _emal_52714__pinl_3880__flat_149); 
  _free_( _ivesli_48198); 
  _emal_52713__ivesli_48196 = _alloc_( 1, 0, [:int]); 
  _ivesli_48196 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51466), _emal_52713__ivesli_48196); 
  _emal_52712__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48196, P), _emal_52712__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48196); 
  _emal_52711__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_52711__flat_117__SSA3_2); 
  _emal_52710__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_52710__pinl_3951__flat_95); 
  _emal_52709__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_52709__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_52703__ctz_7648 = _alloc_( 1, 0, [:int]); 
  _ctz_7648 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_52703__ctz_7648); 
  _emal_52702__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7648, 0.0), _emal_52702__pinl_3979__flat_252); 
  _free_( _ctz_7648); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5617_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_52701__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_52701__pinl_3982__flat_122); 
  _emal_52700__ctz_7646 = _alloc_( 1, 0, [:int]); 
  _ctz_7646 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_52700__ctz_7646); 
  _emal_52699__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7646, 0), _emal_52699__pinl_3983__flat_197); 
  _free_( _ctz_7646); 
  _hce_5 = _MAIN::_dup_5618_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5619_BlockHoare__Loop_8( _iveras_51466, _iveras_51465, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51465, 1); 
    _dec_rc_( _iveras_51466, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5618_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5618_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5618_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_52736__hce_5__SSA0_1 { , NN } ; 
  int _emal_52735__wlsimp_6833 { , NN } ; 
  int _emal_52734__iveras_51467 { , NN } ; 
  int _emal_52733__ivesli_48202 { , NN } ; 
  double _emal_52732__pinl_3995__flat_149 { , NN } ; 
  int _emal_52731__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_52730__iveras_51468 { , NN } ; 
  int _emal_52729__ivesli_48200 { , NN } ; 
  double _emal_52728__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_52727__pinl_4078__flat_149 { , NN } ; 
  double _emal_52726__pinl_4066__flat_95 { , NN } ; 
  double _emal_52725__pinl_4053__flat_149 { , NN } ; 
  double _emal_52724__pinl_4041__flat_95 { , NN } ; 
  double _emal_52723__pinl_4040__flat_96 { , NN } ; 
  double _emal_52722__pinl_4039__flat_149 { , NN } ; 
  double _emal_52721__pinl_4027__flat_95 { , NN } ; 
  double _emal_52720__pinl_4026__flat_149 { , NN } ; 
  double _emal_52719__pinl_4014__flat_95 { , NN } ; 
  double _emal_52718__pinl_4013__flat_96 { , NN } ; 
  double _emal_52717__pinl_4012__flat_95 { , NN } ; 
  bool _emal_52716__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51468 { , NN } ; 
  int _iveras_51467 { , NN } ; 
  int _ivesli_48202 { , NN } ; 
  int _ivesli_48200 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6833 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_52735__wlsimp_6833 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6833 = _fill_( 0, _emal_52735__wlsimp_6833); 
    _emal_52734__iveras_51467 = _alloc_( 1, 0, [:int]); 
    _iveras_51467 = _fill_( 0, _emal_52734__iveras_51467); 
    _ivesli_48202 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51467), _iveras_51467); 
    _emal_52732__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48202, P), _emal_52732__pinl_3995__flat_149); 
    _free_( _ivesli_48202); 
    _emal_52731__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_52731__pinl_3996__eat_768__SSA3_1); 
    _emal_52730__iveras_51468 = _alloc_( 1, 0, [:int]); 
    _iveras_51468 = _fill_( 1, _emal_52730__iveras_51468); 
    _ivesli_48200 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51468), _iveras_51468); 
    _emal_52728__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48200, P), _emal_52728__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48200); 
    _emal_52727__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_6833, q), _emal_52727__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_52725__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_52725__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_52722__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_52722__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_52720__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_6833, p), _emal_52720__pinl_4026__flat_149); 
    _free_( _wlsimp_6833); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_52716__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_52716__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_52736__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_52736__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5617_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5617_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5617_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5616_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5616_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5616_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_52757__hce_6__SSA0_1 { , NN } ; 
  int _emal_52756__wlsimp_6836 { , NN } ; 
  int _emal_52755__iveras_51469 { , NN } ; 
  int _emal_52754__ivesli_48206 { , NN } ; 
  double _emal_52753__pinl_3772__flat_149 { , NN } ; 
  int _emal_52752__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_52751__iveras_51470 { , NN } ; 
  int _emal_52750__ivesli_48204 { , NN } ; 
  double _emal_52749__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_52748__pinl_3855__flat_149 { , NN } ; 
  double _emal_52747__pinl_3843__flat_95 { , NN } ; 
  double _emal_52746__pinl_3830__flat_149 { , NN } ; 
  double _emal_52745__pinl_3818__flat_95 { , NN } ; 
  double _emal_52744__pinl_3817__flat_96 { , NN } ; 
  double _emal_52743__pinl_3816__flat_149 { , NN } ; 
  double _emal_52742__pinl_3804__flat_95 { , NN } ; 
  double _emal_52741__pinl_3803__flat_149 { , NN } ; 
  double _emal_52740__pinl_3791__flat_95 { , NN } ; 
  double _emal_52739__pinl_3790__flat_96 { , NN } ; 
  double _emal_52738__pinl_3789__flat_95 { , NN } ; 
  bool _emal_52737__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51470 { , NN } ; 
  int _iveras_51469 { , NN } ; 
  int _ivesli_48206 { , NN } ; 
  int _ivesli_48204 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6836 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_52756__wlsimp_6836 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6836 = _fill_( 0, _emal_52756__wlsimp_6836); 
    _emal_52755__iveras_51469 = _alloc_( 1, 0, [:int]); 
    _iveras_51469 = _fill_( 0, _emal_52755__iveras_51469); 
    _ivesli_48206 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51469), _iveras_51469); 
    _emal_52753__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48206, P), _emal_52753__pinl_3772__flat_149); 
    _free_( _ivesli_48206); 
    _emal_52752__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_52752__pinl_3773__eat_768__SSA3_1); 
    _emal_52751__iveras_51470 = _alloc_( 1, 0, [:int]); 
    _iveras_51470 = _fill_( 1, _emal_52751__iveras_51470); 
    _ivesli_48204 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51470), _iveras_51470); 
    _emal_52749__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48204, P), _emal_52749__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48204); 
    _emal_52748__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_6836, q), _emal_52748__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_52746__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_52746__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_52743__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_52743__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_52741__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_6836, p), _emal_52741__pinl_3803__flat_149); 
    _free_( _wlsimp_6836); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_52737__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_52737__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_52757__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_52757__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5615_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5615_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int{999...} r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5615_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_52758__dlirmov_50802__flat_65 { , NN } ; 
  int{0} _dlirmov_50802__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _inc_rc_( numr, 1); 
    _inc_rc_( numl, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_59); 
    _emal_52758__dlirmov_50802__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50802__flat_65 = _fill_( 0, _emal_52758__dlirmov_50802__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5614_BlockHoare__Loop_24( _dlirmov_50802__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5614_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5614_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5614_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_52777__esd_29539 { , NN } ; 
  bool _emal_52776__pinl_3238__flat_194 { , NN } ; 
  int _emal_52775__esd_29538 { , NN } ; 
  bool _emal_52774__pinl_3360__flat_194 { , NN } ; 
  int _emal_52773__ctz_7654 { , NN } ; 
  bool _emal_52772__pinl_3482__flat_196 { , NN } ; 
  int _emal_52771__esd_8086 { , NN } ; 
  bool _emal_52770__pinl_3483__flat_196 { , NN } ; 
  int _emal_52769__pinl_3748__flat_41 { , NN } ; 
  int _emal_52768__pinl_3749__flat_41 { , NN } ; 
  int _emal_52767__pinl_3750__flat_40 { , NN } ; 
  int _emal_52766__pinl_3751__flat_40 { , NN } ; 
  int _emal_52765__esd_29534 { , NN } ; 
  bool _emal_52764__pinl_3752__flat_194 { , NN } ; 
  int _emal_52763__esd_29533 { , NN } ; 
  bool _emal_52762__pinl_3754__flat_194 { , NN } ; 
  int _emal_52761__pinl_3757__flat_41 { , NN } ; 
  bool _emal_52759__pinl_3758__flat_198 { , NN } ; 
  int _esd_29539 { , NN } ; 
  int _esd_29538 { , NN } ; 
  int _esd_29534 { , NN } ; 
  int _esd_29533 { , NN } ; 
  int _esd_8086 { , NN } ; 
  int _ctz_7654 { , NN } ; 
  int _ctz_7650 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_52777__esd_29539 = _alloc_( 1, 0, [:int]); 
  _esd_29539 = _fill_( _neg_S_( numl), _emal_52777__esd_29539); 
  _emal_52776__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29539, 0), _emal_52776__pinl_3238__flat_194); 
  _free_( _esd_29539); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5604_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_52775__esd_29538 = _alloc_( 1, 0, [:int]); 
  _esd_29538 = _fill_( _neg_S_( numr), _emal_52775__esd_29538); 
  _emal_52774__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29538, 0), _emal_52774__pinl_3360__flat_194); 
  _free_( _esd_29538); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5608_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_52773__ctz_7654 = _alloc_( 1, 0, [:int]); 
  _ctz_7654 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_52773__ctz_7654); 
  _emal_52772__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7654, 0), _emal_52772__pinl_3482__flat_196); 
  _free_( _ctz_7654); 
  _hce_7 = _MAIN::_dup_5609_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_52771__esd_8086 = _alloc_( 1, 0, [:int]); 
  _esd_8086 = _fill_( _neg_S_( _hce_7), _emal_52771__esd_8086); 
  _emal_52770__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_8086, 0), _emal_52770__pinl_3483__flat_196); 
  _free_( _esd_8086); 
  P__SSA0_1 = _MAIN::_dup_5611_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_52769__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_52769__pinl_3748__flat_41); 
  _emal_52768__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_52768__pinl_3749__flat_41); 
  _emal_52767__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_52767__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_52766__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_52766__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_52765__esd_29534 = _alloc_( 1, 0, [:int]); 
  _esd_29534 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_52765__esd_29534); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_52764__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29534, 0), _emal_52764__pinl_3752__flat_194); 
  _free_( _esd_29534); 
  l__SSA0_1 = _MAIN::_dup_5612_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_52763__esd_29533 = _alloc_( 1, 0, [:int]); 
  _esd_29533 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_52763__esd_29533); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_52762__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29533, 0), _emal_52762__pinl_3754__flat_194); 
  _free_( _esd_29533); 
  r__SSA0_1 = _MAIN::_dup_5613_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_52761__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_52761__pinl_3757__flat_41); 
  _ctz_7650 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_52759__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7650, 0), _emal_52759__pinl_3758__flat_198); 
  _free_( _ctz_7650); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5614_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5613_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5613_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5613_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_52778__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_52778__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_52778__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5612_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5612_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5612_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_52779__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_52779__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_52779__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5611_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5611_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5611_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55595_val { , NN } ; 
  bool _emrb_55594_mem { , NN } ; 
  double[1000000,2] _emlr_55143_P { , NN } ; 
  double[1000000,2] _emlr_55142_P { , NN } ; 
  int{0} _emlr_55141_j { , NN } ; 
  int _emlr_55140_j { , NN } ; 
  int _emal_52783__dlirmov_51617__iveras_51471 { , NN } ; 
  int _emal_52782__dlirmov_51618__iveras_51472 { , NN } ; 
  int _emal_52781__dlirmov_51619__iveras_51473 { , NN } ; 
  int _emal_52780__dlirmov_51620__iveras_51474 { , NN } ; 
  int _dlirmov_51620__iveras_51474 { , NN } ; 
  int _dlirmov_51619__iveras_51473 { , NN } ; 
  int _dlirmov_51618__iveras_51472 { , NN } ; 
  int _dlirmov_51617__iveras_51471 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_52783__dlirmov_51617__iveras_51471 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51617__iveras_51471 = _fill_( 0, _emal_52783__dlirmov_51617__iveras_51471); 
    _emal_52782__dlirmov_51618__iveras_51472 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51618__iveras_51472 = _fill_( 0, _emal_52782__dlirmov_51618__iveras_51472); 
    _emal_52781__dlirmov_51619__iveras_51473 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51619__iveras_51473 = _fill_( 1, _emal_52781__dlirmov_51619__iveras_51473); 
    _emal_52780__dlirmov_51620__iveras_51474 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51620__iveras_51474 = _fill_( 1, _emal_52780__dlirmov_51620__iveras_51474); 
    _emlr_55142_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55594_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55595_val = _fill_( _isreused_( _emlr_55142_P, P), _emrb_55594_mem); 
    _emlr_55143_P = _MAIN::_dup_5611_BlockHoare__Cond_16__ReuseCond_30( _emrb_55595_val, _emlr_55142_P, P) ; 
    _emlr_55140_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55141_j = _fill_( _copy_( j), _emlr_55140_j); 
    P__SSA0_1 = _MAIN::_dup_5610_BlockHoare__Loop_15( _dlirmov_51620__iveras_51474, _dlirmov_51619__iveras_51473, _dlirmov_51618__iveras_51472, _dlirmov_51617__iveras_51471, offsetsl, offsetsr, startl, startr, num, _emlr_55141_j, r, l, _emlr_55143_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5611_BlockHoare__Cond_16__ReuseCond_30(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5611_BlockHoare__Cond_16__ReuseCond_30( bool _emrb_55590 { ,NN } , double[1000000,2] _emlr_55142_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5611_BlockHoare__Cond_16__ReuseCond_30 ::  ---
 */
{ 
  double[1000000,2] _emrb_55593 { , NN } ; 
  double[1000000,2] _dup_55592__emlr_55143_P { , NN } ; 
  double[1000000,2] _dup_55591__emlr_55143_P { , NN } ; 

  if (_emrb_55590) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55590, 1); 
    _dup_55591__emlr_55143_P = _fill_( _noop_( P), _emlr_55142_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55590, 1); 
    _dup_55592__emlr_55143_P = _fill_( _copy_( P), _emlr_55142_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55593 = ( _emrb_55590 ? _dup_55591__emlr_55143_P : _dup_55592__emlr_55143_P ); 
  return( _emrb_55593); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5610_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5610_BlockHoare__Loop_15( int _iveras_51474 { ,NN } , int _iveras_51473 { ,NN } , int _iveras_51472 { ,NN } , int _iveras_51471 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5610_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55766 { , NN } ; 
  double _emdr_55765 { , NN } ; 
  double _emdr_55764 { , NN } ; 
  int _emal_52839__ivesli_48227 { , NN } ; 
  int _emal_52838__pinl_3507__flat_68 { , NN } ; 
  int _emal_52837__pinl_3510__flat_41 { , NN } ; 
  int _emal_52836__ivesli_48224 { , NN } ; 
  int _emal_52835__pinl_3522__flat_68 { , NN } ; 
  int _emal_52834__pinl_3525__flat_40 { , NN } ; 
  int _emal_52831__ivesli_48223 { , NN } ; 
  double _emal_52830__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_52828__ivesli_48219 { , NN } ; 
  double _emal_52827__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_52824__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52822__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52820__uprf_7401 { , NN } ; 
  int _emal_52819__pinl_10372_z { , NN } ; 
  double _emal_52815_val { , NN } ; 
  double _emal_52814_val { , NN } ; 
  double[1000000,2] _emal_52813__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_52812__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_52811__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_52809__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52808__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52806__uprf_7398 { , NN } ; 
  int _emal_52805__pinl_10387_z { , NN } ; 
  double _emal_52801_val { , NN } ; 
  double _emal_52800_val { , NN } ; 
  double _emal_52798__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_52797__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_52795__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52794__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52789_val { , NN } ; 
  double _emal_52788_val { , NN } ; 
  int _emal_52786__pinl_3746__flat_122 { , NN } ; 
  int _emal_52785__ctz_7656 { , NN } ; 
  bool _emal_52784__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48227 { , NN } ; 
  int _ivesli_48224 { , NN } ; 
  int _ivesli_48223 { , NN } ; 
  int _ivesli_48221 { , NN } ; 
  int _ivesli_48220 { , NN } ; 
  int _ivesli_48219 { , NN } ; 
  int _ivesli_48217 { , NN } ; 
  int _ivesli_48216 { , NN } ; 
  int _ivesli_48212 { , NN } ; 
  int _wlidx_47878__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47877__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47876__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_14024 { , NN } ; 
  int[2] _wlsb_13996 { , NN } ; 
  int[2] _wlsb_13968 { , NN } ; 
  int _eat_13185 { , NN } ; 
  int _eat_13184 { , NN } ; 
  int _eat_13183 { , NN } ; 
  int _pinl_10372_z { , NN } ; 
  int _pinl_10387_z { , NN } ; 
  int _ctz_7656 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7401 { , NN } ; 
  int _uprf_7398 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_52839__ivesli_48227 = _alloc_( 1, 0, [:int]); 
  _ivesli_48227 = _fill_( _add_SxS_( startr, j), _emal_52839__ivesli_48227); 
  _emal_52838__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48227, offsetsr), _emal_52838__pinl_3507__flat_68); 
  _free_( _ivesli_48227); 
  _emal_52837__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_52837__pinl_3510__flat_41); 
  _emal_52836__ivesli_48224 = _alloc_( 1, 0, [:int]); 
  _ivesli_48224 = _fill_( _add_SxS_( startl, j), _emal_52836__ivesli_48224); 
  _emal_52835__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48224, offsetsl), _emal_52835__pinl_3522__flat_68); 
  _free_( _ivesli_48224); 
  _emal_52834__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_52834__pinl_3525__flat_40); 
  _ivesli_48220 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48221 = _fill_( _neg_S_( _ivesli_48220), _ivesli_48220); 
  _emal_52831__ivesli_48223 = _alloc_( 1, 0, [:int]); 
  _ivesli_48223 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48221, _iveras_51471), _emal_52831__ivesli_48223); 
  _emal_52830__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48223, P), _emal_52830__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48217 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_52828__ivesli_48219 = _alloc_( 1, 0, [:int]); 
  _ivesli_48219 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48217, _iveras_51472), _emal_52828__ivesli_48219); 
  _emal_52827__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48219, P), _emal_52827__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48216 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48221, _iveras_51473), _ivesli_48221); 
  _emal_52824__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48216, P), _emal_52824__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48212 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48217, _iveras_51474), _ivesli_48217); 
  _emal_52822__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48212, P), _emal_52822__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_52820__uprf_7401 = _alloc_( 1, 0, [:int]); 
  _uprf_7401 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_52820__uprf_7401); 
  _emal_52819__pinl_10372_z = _alloc_( 1, 0, [:int]); 
  _pinl_10372_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7401), _emal_52819__pinl_10372_z); 
  _emal_52813__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13183 = _alloc_( 1, 0, [:int]); 
  _wlidx_47876__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_14024=[_pinl_3681__eat_766, _eat_13183] (IDXS:_wlidx_47876__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52814_val = _wl_assign_( _pinl_3716__flat_1457, _emal_52813__pinl_3535_P__SSA0_1, _wlsb_14024, _wlidx_47876__pinl_3535_P__SSA0_1); 
        } : _emal_52814_val ; ,
      op_1 =
        { 
          _emal_52815_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_52813__pinl_3535_P__SSA0_1, _wlsb_14024, _wlidx_47876__pinl_3535_P__SSA0_1); 
        } : _emal_52815_val ; ,
      op_2 =
        { 
          _emdr_55764 = _noop_( _wlsb_14024); 
        } : _emdr_55764 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7401, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7401), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7401, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7401), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10372_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10372_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_52813__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47876__pinl_3535_P__SSA0_1)); 
  _free_( _eat_13183); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47876__pinl_3535_P__SSA0_1); 
  _emal_52812__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48223, _pinl_3535_P__SSA0_1), _emal_52812__pinl_3675__flat_149__SSA2_1); 
  _emal_52811__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48219, _pinl_3535_P__SSA0_1), _emal_52811__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_52809__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48216, _pinl_3535_P__SSA0_1), _emal_52809__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52808__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48212, _pinl_3535_P__SSA0_1), _emal_52808__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_52806__uprf_7398 = _alloc_( 1, 0, [:int]); 
  _uprf_7398 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_52806__uprf_7398); 
  _emal_52805__pinl_10387_z = _alloc_( 1, 0, [:int]); 
  _pinl_10387_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7398), _emal_52805__pinl_10387_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13184 = _alloc_( 1, 0, [:int]); 
  _wlidx_47877__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_13996=[_pinl_3613__eat_766, _eat_13184] (IDXS:_wlidx_47877__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52800_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_13996, _wlidx_47877__pinl_3537_P__SSA0_3); 
        } : _emal_52800_val ; ,
      op_1 =
        { 
          _emal_52801_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_13996, _wlidx_47877__pinl_3537_P__SSA0_3); 
        } : _emal_52801_val ; ,
      op_2 =
        { 
          _emdr_55765 = _noop_( _wlsb_13996); 
        } : _emdr_55765 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7398, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7398), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7398, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7398), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10387_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10387_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47877__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_10387_z); 
  _free_( _uprf_7398); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_13184); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47877__pinl_3537_P__SSA0_3); 
  _emal_52798__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48223, _pinl_3537_P__SSA0_3), _emal_52798__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48223); 
  _emal_52797__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48219, _pinl_3537_P__SSA0_3), _emal_52797__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48219); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_52795__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48216, _pinl_3537_P__SSA0_3), _emal_52795__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48216); 
  _emal_52794__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48212, _pinl_3537_P__SSA0_3), _emal_52794__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48212); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_13185 = _alloc_( 1, 0, [:int]); 
  _wlidx_47878__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_13968=[_pinl_3545__eat_766, _eat_13185] (IDXS:_wlidx_47878__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_52788_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_13968, _wlidx_47878__pinl_3539_P__SSA0_5); 
        } : _emal_52788_val ; ,
      op_1 =
        { 
          _emal_52789_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_13968, _wlidx_47878__pinl_3539_P__SSA0_5); 
        } : _emal_52789_val ; ,
      op_2 =
        { 
          _emdr_55766 = _noop_( _wlsb_13968); 
        } : _emdr_55766 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7401, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7401), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7401, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7401), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_10372_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_10372_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47878__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_10372_z); 
  _free_( _uprf_7401); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_13185); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47878__pinl_3539_P__SSA0_5); 
  _emal_52786__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_52786__pinl_3746__flat_122); 
  _emal_52785__ctz_7656 = _alloc_( 1, 0, [:int]); 
  _ctz_7656 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_52785__ctz_7656); 
  _emal_52784__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7656, 0), _emal_52784__pinl_3747__flat_196); 
  _free_( _ctz_7656); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5610_BlockHoare__Loop_15( _iveras_51474, _iveras_51473, _iveras_51472, _iveras_51471, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51471, 1); 
    _dec_rc_( _iveras_51472, 1); 
    _dec_rc_( _iveras_51473, 1); 
    _dec_rc_( _iveras_51474, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5609_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5609_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5609_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5608_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5608_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5608_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55588_val { , NN } ; 
  bool _emrb_55587_mem { , NN } ; 
  int{0} _emlr_55149_startr__SSA0_1 { , NN } ; 
  int _emlr_55148_startr__SSA0_1 { , NN } ; 
  int _emlr_55147_numr { , NN } ; 
  int _emlr_55146_numr { , NN } ; 
  int[64] _emlr_55145_offsetsr { , NN } ; 
  int[64] _emlr_55144_offsetsr { , NN } ; 
  int _emal_52847_startr__SSA0_1 { , NN } ; 
  int _emal_52846__ivesplit_24418 { , NN } ; 
  double _emal_52845__pinl_10775__ls_6269 { , NN } ; 
  double _emal_52844__pinl_10776__ls_6270 { , NN } ; 
  double _emal_52843__pinl_10771__ls_6259 { , NN } ; 
  double _emal_52842__pinl_10772__ls_6260 { , NN } ; 
  int _emal_52841__dlirmov_51615__iveras_51399 { , NN } ; 
  int _emal_52840__dlirmov_51616__iveras_51400 { , NN } ; 
  int _dlirmov_51616__iveras_51400 { , NN } ; 
  int _dlirmov_51615__iveras_51399 { , NN } ; 
  int{1} _ivesplit_24418 { , NN } ; 
  double _pinl_10776__ls_6270 { , NN } ; 
  double _pinl_10775__ls_6269 { , NN } ; 
  double _pinl_10772__ls_6260 { , NN } ; 
  double _pinl_10771__ls_6259 { , NN } ; 
  int _pinl_10770_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_10769_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_10768_max__SSA0_1 { , NN } ; 
  double[2] _pinl_10767_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_52847_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_52847_startr__SSA0_1); 
    _emal_52846__ivesplit_24418 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24418 = _fill_( 1, _emal_52846__ivesplit_24418); 
    _emal_52845__pinl_10775__ls_6269 = _alloc_( 1, 0, [:int]); 
    _pinl_10775__ls_6269 = _fill_( _idx_sel_( _ivesplit_24418, q), _emal_52845__pinl_10775__ls_6269); 
    _emal_52844__pinl_10776__ls_6270 = _alloc_( 1, 0, [:int]); 
    _pinl_10776__ls_6270 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_52844__pinl_10776__ls_6270); 
    _emal_52843__pinl_10771__ls_6259 = _alloc_( 1, 0, [:int]); 
    _pinl_10771__ls_6259 = _fill_( _idx_sel_( _ivesplit_24418, p), _emal_52843__pinl_10771__ls_6259); 
    _free_( _ivesplit_24418); 
    _emal_52842__pinl_10772__ls_6260 = _alloc_( 1, 0, [:int]); 
    _pinl_10772__ls_6260 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_52842__pinl_10772__ls_6260); 
    _emal_52841__dlirmov_51615__iveras_51399 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51615__iveras_51399 = _fill_( 0, _emal_52841__dlirmov_51615__iveras_51399); 
    _emal_52840__dlirmov_51616__iveras_51400 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51616__iveras_51400 = _fill_( 1, _emal_52840__dlirmov_51616__iveras_51400); 
    _emlr_55148_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55149_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55148_startr__SSA0_1); 
    _emlr_55146_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55147_numr = _fill_( _copy_( numr), _emlr_55146_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55144_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55587_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55588_val = _fill_( _isreused_( _emlr_55144_offsetsr, offsetsr), _emrb_55587_mem); 
    _emlr_55145_offsetsr = _MAIN::_dup_5608_BlockHoare__Cond_20__ReuseCond_29( _emrb_55588_val, _emlr_55144_offsetsr, offsetsr) ; 
    _pinl_10767_argmax__SSA0_1, _pinl_10768_max__SSA0_1, _pinl_10769_offsetsr__SSA0_1, _pinl_10770_numr__SSA0_1 = _MAIN::_dup_10778_BlockHoare__Loop_18( _dlirmov_51616__iveras_51400, _dlirmov_51615__iveras_51399, argmax, max, _emlr_55145_offsetsr, _emlr_55147_numr, _emlr_55149_startr__SSA0_1, _pinl_10776__ls_6270, _pinl_10775__ls_6269, _pinl_10772__ls_6260, _pinl_10771__ls_6259, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_10770_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_10769_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_10768_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_10767_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5608_BlockHoare__Cond_20__ReuseCond_29(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5608_BlockHoare__Cond_20__ReuseCond_29( bool _emrb_55583 { ,NN } , int[64] _emlr_55144_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5608_BlockHoare__Cond_20__ReuseCond_29 ::  ---
 */
{ 
  int[64] _emrb_55586 { , NN } ; 
  int[64] _dup_55585__emlr_55145_offsetsr { , NN } ; 
  int[64] _dup_55584__emlr_55145_offsetsr { , NN } ; 

  if (_emrb_55583) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55583, 1); 
    _dup_55584__emlr_55145_offsetsr = _fill_( _noop_( offsetsr), _emlr_55144_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55583, 1); 
    _dup_55585__emlr_55145_offsetsr = _fill_( _copy_( offsetsr), _emlr_55144_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55586 = ( _emrb_55583 ? _dup_55584__emlr_55145_offsetsr : _dup_55585__emlr_55145_offsetsr ); 
  return( _emrb_55586); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5604_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5604_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5604_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55581_val { , NN } ; 
  bool _emrb_55580_mem { , NN } ; 
  int{0} _emlr_55155_startl__SSA0_1 { , NN } ; 
  int _emlr_55154_startl__SSA0_1 { , NN } ; 
  int _emlr_55153_numl { , NN } ; 
  int _emlr_55152_numl { , NN } ; 
  int[64] _emlr_55151_offsetsl { , NN } ; 
  int[64] _emlr_55150_offsetsl { , NN } ; 
  int _emal_52855_startl__SSA0_1 { , NN } ; 
  int _emal_52854__ivesplit_24426 { , NN } ; 
  double _emal_52853__pinl_10763__ls_6289 { , NN } ; 
  double _emal_52852__pinl_10764__ls_6290 { , NN } ; 
  double _emal_52851__pinl_10759__ls_6279 { , NN } ; 
  double _emal_52850__pinl_10760__ls_6280 { , NN } ; 
  int _emal_52849__dlirmov_51613__iveras_51401 { , NN } ; 
  int _emal_52848__dlirmov_51614__iveras_51402 { , NN } ; 
  int _dlirmov_51614__iveras_51402 { , NN } ; 
  int _dlirmov_51613__iveras_51401 { , NN } ; 
  int{1} _ivesplit_24426 { , NN } ; 
  double _pinl_10764__ls_6290 { , NN } ; 
  double _pinl_10763__ls_6289 { , NN } ; 
  double _pinl_10760__ls_6280 { , NN } ; 
  double _pinl_10759__ls_6279 { , NN } ; 
  int _pinl_10758_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_10757_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_10756_max__SSA0_1 { , NN } ; 
  double[2] _pinl_10755_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_52855_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_52855_startl__SSA0_1); 
    _emal_52854__ivesplit_24426 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24426 = _fill_( 1, _emal_52854__ivesplit_24426); 
    _emal_52853__pinl_10763__ls_6289 = _alloc_( 1, 0, [:int]); 
    _pinl_10763__ls_6289 = _fill_( _idx_sel_( _ivesplit_24426, q), _emal_52853__pinl_10763__ls_6289); 
    _emal_52852__pinl_10764__ls_6290 = _alloc_( 1, 0, [:int]); 
    _pinl_10764__ls_6290 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_52852__pinl_10764__ls_6290); 
    _emal_52851__pinl_10759__ls_6279 = _alloc_( 1, 0, [:int]); 
    _pinl_10759__ls_6279 = _fill_( _idx_sel_( _ivesplit_24426, p), _emal_52851__pinl_10759__ls_6279); 
    _free_( _ivesplit_24426); 
    _emal_52850__pinl_10760__ls_6280 = _alloc_( 1, 0, [:int]); 
    _pinl_10760__ls_6280 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_52850__pinl_10760__ls_6280); 
    _emal_52849__dlirmov_51613__iveras_51401 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51613__iveras_51401 = _fill_( 0, _emal_52849__dlirmov_51613__iveras_51401); 
    _emal_52848__dlirmov_51614__iveras_51402 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51614__iveras_51402 = _fill_( 1, _emal_52848__dlirmov_51614__iveras_51402); 
    _emlr_55154_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55155_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55154_startl__SSA0_1); 
    _emlr_55152_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55153_numl = _fill_( _copy_( numl), _emlr_55152_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55150_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55580_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55581_val = _fill_( _isreused_( _emlr_55150_offsetsl, offsetsl), _emrb_55580_mem); 
    _emlr_55151_offsetsl = _MAIN::_dup_5604_BlockHoare__Cond_23__ReuseCond_28( _emrb_55581_val, _emlr_55150_offsetsl, offsetsl) ; 
    _pinl_10755_argmax__SSA0_1, _pinl_10756_max__SSA0_1, _pinl_10757_offsetsl__SSA0_1, _pinl_10758_numl__SSA0_1 = _MAIN::_dup_10766_BlockHoare__Loop_21( _dlirmov_51614__iveras_51402, _dlirmov_51613__iveras_51401, argmax, max, _emlr_55151_offsetsl, _emlr_55153_numl, _emlr_55155_startl__SSA0_1, _pinl_10764__ls_6290, _pinl_10763__ls_6289, _pinl_10760__ls_6280, _pinl_10759__ls_6279, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_10758_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_10757_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_10756_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_10755_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5604_BlockHoare__Cond_23__ReuseCond_28(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5604_BlockHoare__Cond_23__ReuseCond_28( bool _emrb_55576 { ,NN } , int[64] _emlr_55150_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5604_BlockHoare__Cond_23__ReuseCond_28 ::  ---
 */
{ 
  int[64] _emrb_55579 { , NN } ; 
  int[64] _dup_55578__emlr_55151_offsetsl { , NN } ; 
  int[64] _dup_55577__emlr_55151_offsetsl { , NN } ; 

  if (_emrb_55576) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55576, 1); 
    _dup_55577__emlr_55151_offsetsl = _fill_( _noop_( offsetsl), _emlr_55150_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55576, 1); 
    _dup_55578__emlr_55151_offsetsl = _fill_( _copy_( offsetsl), _emlr_55150_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55579 = ( _emrb_55576 ? _dup_55577__emlr_55151_offsetsl : _dup_55578__emlr_55151_offsetsl ); 
  return( _emrb_55579); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5326_FindHull__Cond_40(...) [ body ]
 ****************************************************************************/
int, double[1000000,2] _MAIN::_dup_5326_FindHull__Cond_40( bool _flat_231 { ,NN } , int hull_count { ,NN } , double[1000000,2] hull { ,NN } , double[2] rk { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int hi { ,NN } , int lo { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5326_FindHull__Cond_40 ::  ---
 */
{ 
  bool _emrb_55574_val { , NN } ; 
  bool _emrb_55573_mem { , NN } ; 
  int _emal_52884_count__SSA0_2 { , NN } ; 
  int _emal_52883__pinl_5130__flat_41 { , NN } ; 
  double[2] _emal_52882__pinl_5093_argmax { , NN } ; 
  double _emal_52881__pinl_5095_max { , NN } ; 
  int _emal_52880__pinl_5096__flat_55 { , NN } ; 
  int{0} _emal_52879_val { , NN } ; 
  int[64] _emal_52878__pinl_5099_offsetsl { , NN } ; 
  int _emal_52877__al_8664 { , NN } ; 
  int _emal_52876__al_8665 { , NN } ; 
  bool _emal_52875__pinl_5116__flat_198 { , NN } ; 
  int _emal_52874__ctz_7676 { , NN } ; 
  bool _emal_52873__pinl_5115__flat_197 { , NN } ; 
  int _emal_52872__uprf_7404 { , NN } ; 
  int _emal_52871__pinl_5928_z { , NN } ; 
  double[1000000,2] _emal_52865_hull__SSA0_3 { , NN } ; 
  int _emal_52864__pinl_5229__flat_41 { , NN } ; 
  int _emal_52863__al_8659 { , NN } ; 
  int _emal_52862__al_8660 { , NN } ; 
  bool _emal_52861__pinl_5215__flat_198 { , NN } ; 
  int _emal_52860__ctz_7672 { , NN } ; 
  bool _emal_52859__pinl_5214__flat_197 { , NN } ; 
  int _emal_52858__pinl_5259__flat_40 { , NN } ; 
  int _emal_52857__pinl_5260__flat_40 { , NN } ; 
  int _emal_52856__pinl_5262__flat_40 { , NN } ; 
  int _wlidx_47880_hull__SSA0_3 { , NN } ; 
  int _wlidx_47879__pinl_5099_offsetsl { , NN } ; 
  int _al_8665 { , NN } ; 
  int _al_8664 { , NN } ; 
  int _al_8660 { , NN } ; 
  int _al_8659 { , NN } ; 
  int _ctz_7676 { , NN } ; 
  int _ctz_7672 { , NN } ; 
  int _uprf_7404 { , NN } ; 
  int _pinl_5928_z { , NN } ; 
  int _pinl_5130__flat_41 { , NN } ; 
  int _pinl_5122__eat_764 { , NN } ; 
  int[1] _pinl_5121_iv { , NN } ; 
  bool _pinl_5116__flat_198 { , NN } ; 
  bool _pinl_5115__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5114_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5113_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5112_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5111_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5110_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5109_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5108_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5107_argmax__SSA0_1 { , NN } ; 
  int[64] _pinl_5099_offsetsl { , NN } ; 
  int{0} _pinl_5096__flat_55 { , NN } ; 
  double{-17...} _pinl_5095_max { , NN } ; 
  double[2]{0.0...} _pinl_5093_argmax { , NN } ; 
  int _pinl_5229__flat_41 { , NN } ; 
  bool _pinl_5215__flat_198 { , NN } ; 
  bool _pinl_5214__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5213_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5212_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5211_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5210_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5209_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5208_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5207_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5206_argmax__SSA0_1 { , NN } ; 
  int _pinl_5259__flat_40 { , NN } ; 
  int _pinl_5260__flat_40 { , NN } ; 
  int _pinl_5262__flat_40 { , NN } ; 
  int count__SSA0_4 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  int{0} count__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  int lcount { , NN } ; 
  int rcount { , NN } ; 

  if (_flat_231) 
  { 
    _inc_rc_( lo, 1); 
    _inc_rc_( rk, 1); 
    _inc_rc_( hull_count, 1); 
    _free_( _flat_231); 
    _emal_52883__pinl_5130__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5130__flat_41 = _fill_( _add_SxS_( -1, hi), _emal_52883__pinl_5130__flat_41); 
    _emal_52882__pinl_5093_argmax = _alloc_( 2, 1, [ 2 ]); 
    _pinl_5093_argmax = _fill_( [ 0.0, 0.0 ], _emal_52882__pinl_5093_argmax); 
    _emal_52881__pinl_5095_max = _alloc_( 2, 0, [:int]); 
    _pinl_5095_max = _fill_( -1.797690000000000063230304921389426434930330364336853362154109832891264341489062899406152996321966094455338163203127744334848599000464911410516510916727344709727599413825823048028128827530592629736371829425359826368844446113768685826367454055532068818593409e+308, _emal_52881__pinl_5095_max); 
    _emal_52880__pinl_5096__flat_55 = _alloc_( 7, 0, [:int]); 
    _pinl_5096__flat_55 = _fill_( 0, _emal_52880__pinl_5096__flat_55); 
    _emal_52878__pinl_5099_offsetsl = _alloc_( 3, 1, [ 64 ]); 
    _pinl_5122__eat_764 = _alloc_( 1, 0, [:int]); 
    _wlidx_47879__pinl_5099_offsetsl = _alloc_( 1, 0, [:int]); 
    _pinl_5099_offsetsl = with2 (_pinl_5121_iv=[_pinl_5122__eat_764] (IDXS:_wlidx_47879__pinl_5099_offsetsl))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52879_val = _wl_assign_( _pinl_5096__flat_55, _emal_52878__pinl_5099_offsetsl, _pinl_5121_iv, _wlidx_47879__pinl_5099_offsetsl); 
          } : _emal_52879_val ; 
        /********** segment 0: **********
         * index domain: [ 0 ] -> [ 64 ]
         * bv: [ 1 ], [ 1 ], [ 1 ]
         * ubv: [ 1 ]
         * sv: [ 1 ]
         * homsv: [ 1 ]
         */
        (0 -> 64), step0[0] 1
          (0 --> 1): op_0
        /********** conexpr: **********/
        genarray( [ 64 ], _pinl_5096__flat_55, _emal_52878__pinl_5099_offsetsl, IDX(_wlidx_47879__pinl_5099_offsetsl)); 
    _free_( _pinl_5122__eat_764); 
    _free_( _wlidx_47879__pinl_5099_offsetsl); 
    _emal_52877__al_8664 = _alloc_( 1, 0, [:int]); 
    _al_8664 = _fill_( _sub_SxS_( hi, lo), _emal_52877__al_8664); 
    _al_8665 = _fill_( _add_SxS_( -129, _al_8664), _al_8664); 
    _emal_52875__pinl_5116__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5116__flat_198 = _fill_( _gt_SxS_( _al_8665, 0), _emal_52875__pinl_5116__flat_198); 
    _free_( _al_8665); 
    _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1 = _MAIN::_dup_5282_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5095_max, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5116__flat_198, rk, p, _pinl_5130__flat_41, lo, P) ; 
    _emal_52874__ctz_7676 = _alloc_( 1, 0, [:int]); 
    _ctz_7676 = _fill_( _sub_SxS_( _pinl_5110_l__SSA0_1, _pinl_5109_r__SSA0_3), _emal_52874__ctz_7676); 
    _emal_52873__pinl_5115__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5115__flat_197 = _fill_( _le_SxS_( _ctz_7676, 0), _emal_52873__pinl_5115__flat_197); 
    _free_( _ctz_7676); 
    _pinl_5112_argmax__SSA0_2, _pinl_5113_l__SSA0_2, _pinl_5114_P__SSA0_2 = _MAIN::_dup_5296_BlockHoare__Cond_12( _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5115__flat_197, rk, p, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1) ; 
    P__SSA0_3, lcount, hull__SSA0_1 = _MAIN::FindHull( _pinl_5114_P__SSA0_2, _pinl_5113_l__SSA0_2, hi, p, rk, _pinl_5112_argmax__SSA0_2, hull, hull_count) ; 
    _emal_52872__uprf_7404 = _alloc_( 1, 0, [:int]); 
    _uprf_7404 = _fill_( _add_SxS_( lcount, 1), _emal_52872__uprf_7404); 
    _emal_52871__pinl_5928_z = _alloc_( 1, 0, [:int]); 
    _pinl_5928_z = _fill_( _max_SxS_( lcount, _uprf_7404), _emal_52871__pinl_5928_z); 
    _emal_52865_hull__SSA0_3 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], hull__SSA0_1); 
    _wlidx_47880_hull__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _emrb_55573_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55574_val = _fill_( _isreused_( _emal_52865_hull__SSA0_3, hull__SSA0_1), _emrb_55573_mem); 
    hull__SSA0_3 = _MAIN::_dup_5326_FindHull__Cond_40__ReuseCond_27( _emrb_55574_val, lcount, hull__SSA0_1, _pinl_5928_z, _uprf_7404, _wlidx_47880_hull__SSA0_3, _emal_52865_hull__SSA0_3, rk) ; 
    _emal_52864__pinl_5229__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5229__flat_41 = _fill_( _add_SxS_( -1, _pinl_5113_l__SSA0_2), _emal_52864__pinl_5229__flat_41); 
    _emal_52863__al_8659 = _alloc_( 1, 0, [:int]); 
    _al_8659 = _fill_( _sub_SxS_( _pinl_5113_l__SSA0_2, lo), _emal_52863__al_8659); 
    _al_8660 = _fill_( _add_SxS_( _al_8659, -129), _al_8659); 
    _emal_52861__pinl_5215__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5215__flat_198 = _fill_( _gt_SxS_( _al_8660, 0), _emal_52861__pinl_5215__flat_198); 
    _free_( _al_8660); 
    _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1 = _MAIN::_dup_5311_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5095_max, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5215__flat_198, q, rk, _pinl_5229__flat_41, lo, P__SSA0_3) ; 
    _emal_52860__ctz_7672 = _alloc_( 1, 0, [:int]); 
    _ctz_7672 = _fill_( _sub_SxS_( _pinl_5209_l__SSA0_1, _pinl_5208_r__SSA0_3), _emal_52860__ctz_7672); 
    _emal_52859__pinl_5214__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5214__flat_197 = _fill_( _le_SxS_( _ctz_7672, 0), _emal_52859__pinl_5214__flat_197); 
    _free_( _ctz_7672); 
    _pinl_5211_argmax__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5213_P__SSA0_2 = _MAIN::_dup_5325_BlockHoare__Cond_12( _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5214__flat_197, q, rk, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1) ; 
    _pinl_5259__flat_40 = _fill_( _add_SxS_( lcount, hull_count), lcount); 
    _dec_rc_( hull_count, 1); 
    _pinl_5260__flat_40 = _fill_( _add_SxS_( 1, _pinl_5259__flat_40), _pinl_5259__flat_40); 
    P__SSA0_7, rcount, hull__SSA0_5 = _MAIN::FindHull( _pinl_5213_P__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5113_l__SSA0_2, rk, q, _pinl_5211_argmax__SSA0_2, hull__SSA0_3, _pinl_5260__flat_40) ; 
    _dec_rc_( P__SSA0_7, 1); 
    _pinl_5262__flat_40 = _fill_( _add_SxS_( rcount, _uprf_7404), rcount); 
    _free_( _uprf_7404); 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( lo, 1); 
    _dec_rc_( hi, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( rk, 1); 
    _dec_rc_( hull_count, 1); 
    _free_( _flat_231); 
    _emal_52884_count__SSA0_2 = _alloc_( 1, 0, [:int]); 
    count__SSA0_2 = _fill_( 0, _emal_52884_count__SSA0_2); 
  }
  hull__SSA0_7 = ( _flat_231 ? hull__SSA0_5 : hull ); 
  count__SSA0_4 = ( _flat_231 ? _pinl_5262__flat_40 : count__SSA0_2 ); 
  return( count__SSA0_4, hull__SSA0_7); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5326_FindHull__Cond_40__ReuseCond_27(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5326_FindHull__Cond_40__ReuseCond_27( bool _emrb_55547 { ,NN } , int lcount { ,NN } , double[1000000,2] hull__SSA0_1 { ,NN } , int _pinl_5928_z { ,NN } , int _uprf_7404 { ,NN } , int _wlidx_47880_hull__SSA0_3 { ,NN } , double[1000000,2] _emal_52865_hull__SSA0_3 { ,NN } , double[2] rk { ,NN } )
/*
 *  _dup_5326_FindHull__Cond_40__ReuseCond_27 ::  ---
 */
{ 
  double _emdr_55751 { , NN } ; 
  double[1000000,2] _emrb_55572 { , NN } ; 
  double _dup_55571__emal_52870_val { , NN } ; 
  double _dup_55570__pinl_5939__flat_28 { , NN } ; 
  double _dup_55569__emal_52868__dup_11034__pinl_5939__flat_28 { , NN } ; 
  int _dup_55568__ivesli_48232 { , NN } ; 
  int _dup_55567__emal_52869__ivesli_48232 { , NN } ; 
  double _dup_55566__emal_52867_val { , NN } ; 
  double _dup_55565__wlsw_11027 { , NN } ; 
  double _dup_55564__emal_52866__dup_11041__wlsw_11027 { , NN } ; 
  double[1000000,2] _dup_55563_hull__SSA0_3 { , NN } ; 
  int _dup_55562__eat_10362 { , NN } ; 
  int _dup_55561__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55560__wlsb_11028 { , NN } ; 
  double _dup_55554__emal_52867_val { , NN } ; 
  double _dup_55553__wlsw_11027 { , NN } ; 
  double _dup_55552__emal_52866__dup_11041__wlsw_11027 { , NN } ; 
  double[1000000,2] _dup_55551_hull__SSA0_3 { , NN } ; 
  int _dup_55550__eat_10362 { , NN } ; 
  int _dup_55549__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55548__wlsb_11028 { , NN } ; 

  if (_emrb_55547) 
  { 
    _dec_rc_( _emrb_55547, 1); 
    _dup_55549__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55550__eat_10362 = _alloc_( 1, 0, [:int]); 
    _dup_55551_hull__SSA0_3 = with2 (_dup_55548__wlsb_11028=[_dup_55549__pinl_5164__eat_766, _dup_55550__eat_10362] (IDXS:_wlidx_47880_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55552__emal_52866__dup_11041__wlsw_11027 = _alloc_( 1, 0, [:int]); 
            _dup_55553__wlsw_11027 = _fill_( _idx_sel_( _dup_55550__eat_10362, rk), _dup_55552__emal_52866__dup_11041__wlsw_11027); 
            _dup_55554__emal_52867_val = _wl_assign_( _dup_55553__wlsw_11027, _emal_52865_hull__SSA0_3, _dup_55548__wlsb_11028, _wlidx_47880_hull__SSA0_3); 
            _free_( _dup_55553__wlsw_11027); 
          } : _dup_55554__emal_52867_val ; ,
        op_1 =
          { 
            _emdr_55751 = _noop_( _dup_55548__wlsb_11028); 
          } : _emdr_55751 ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_7404, 2 ]
         */
        (lcount => _uprf_7404), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_5928_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5928_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_52865_hull__SSA0_3 ,IDX(_wlidx_47880_hull__SSA0_3)); 
    _dec_rc_( hull__SSA0_1, 1); 
    _free_( _pinl_5928_z); 
    _free_( _dup_55549__pinl_5164__eat_766); 
    _free_( _dup_55550__eat_10362); 
    _free_( _wlidx_47880_hull__SSA0_3); 
  }
  else
  { 
    _dec_rc_( _emrb_55547, 1); 
    _dup_55561__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55562__eat_10362 = _alloc_( 1, 0, [:int]); 
    _dup_55563_hull__SSA0_3 = with2 (_dup_55560__wlsb_11028=[_dup_55561__pinl_5164__eat_766, _dup_55562__eat_10362] (IDXS:_wlidx_47880_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55564__emal_52866__dup_11041__wlsw_11027 = _alloc_( 1, 0, [:int]); 
            _dup_55565__wlsw_11027 = _fill_( _idx_sel_( _dup_55562__eat_10362, rk), _dup_55564__emal_52866__dup_11041__wlsw_11027); 
            _dup_55566__emal_52867_val = _wl_assign_( _dup_55565__wlsw_11027, _emal_52865_hull__SSA0_3, _dup_55560__wlsb_11028, _wlidx_47880_hull__SSA0_3); 
            _free_( _dup_55565__wlsw_11027); 
          } : _dup_55566__emal_52867_val ; ,
        op_1 =
          { 
            _dup_55567__emal_52869__ivesli_48232 = _alloc_( 1, 0, [:int]); 
            _dup_55568__ivesli_48232 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55561__pinl_5164__eat_766, _dup_55562__eat_10362), _dup_55567__emal_52869__ivesli_48232); 
            _dup_55569__emal_52868__dup_11034__pinl_5939__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55570__pinl_5939__flat_28 = _fill_( _idx_sel_( _dup_55568__ivesli_48232, hull__SSA0_1), _dup_55569__emal_52868__dup_11034__pinl_5939__flat_28); 
            _free_( _dup_55568__ivesli_48232); 
            _dup_55571__emal_52870_val = _wl_assign_( _dup_55570__pinl_5939__flat_28, _emal_52865_hull__SSA0_3, _dup_55560__wlsb_11028, _wlidx_47880_hull__SSA0_3); 
            _free_( _dup_55570__pinl_5939__flat_28); 
          } : _dup_55571__emal_52870_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_7404, 2 ]
         */
        (lcount => _uprf_7404), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_5928_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5928_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_52865_hull__SSA0_3 ,IDX(_wlidx_47880_hull__SSA0_3)); 
    _free_( _pinl_5928_z); 
    _free_( _dup_55561__pinl_5164__eat_766); 
    _free_( _dup_55562__eat_10362); 
    _free_( _wlidx_47880_hull__SSA0_3); 
    _dec_rc_( hull__SSA0_1, 1); 
  }
  _emrb_55572 = ( _emrb_55547 ? _dup_55551_hull__SSA0_3 : _dup_55563_hull__SSA0_3 ); 
  return( _emrb_55572); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5325_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5325_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5325_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5324_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5324_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5324_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5324_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_52891__ctz_7686 { , NN } ; 
  bool _emal_52890__pinl_3760__flat_197 { , NN } ; 
  int _emal_52889__ctz_7684 { , NN } ; 
  bool _emal_52888__pinl_4092__flat_197 { , NN } ; 
  int _emal_52887__ctz_7682 { , NN } ; 
  bool _emal_52886__pinl_4425__flat_196 { , NN } ; 
  bool _emal_52885__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7686 { , NN } ; 
  int _ctz_7684 { , NN } ; 
  int _ctz_7682 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_52891__ctz_7686 = _alloc_( 1, 0, [:int]); 
  _ctz_7686 = _fill_( _sub_SxS_( l, r), _emal_52891__ctz_7686); 
  _emal_52890__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7686, 0), _emal_52890__pinl_3760__flat_197); 
  _free_( _ctz_7686); 
  _hce_6 = _MAIN::_dup_5312_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5316_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_52889__ctz_7684 = _alloc_( 1, 0, [:int]); 
  _ctz_7684 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_52889__ctz_7684); 
  _emal_52888__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7684, 0), _emal_52888__pinl_4092__flat_197); 
  _free_( _ctz_7684); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5322_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_52887__ctz_7682 = _alloc_( 1, 0, [:int]); 
  _ctz_7682 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_52887__ctz_7682); 
  _emal_52886__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7682, 0), _emal_52886__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5323_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_52885__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7682, 0), _emal_52885__pinl_4645__flat_197); 
  _free_( _ctz_7682); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5324_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5323_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5323_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5323_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55769 { , NN } ; 
  double _emdr_55768 { , NN } ; 
  bool _emrb_55545_val { , NN } ; 
  bool _emrb_55544_mem { , NN } ; 
  int _emal_52939__iveras_51475 { , NN } ; 
  int _emal_52938__ivesli_48243 { , NN } ; 
  double _emal_52937__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_52936__iveras_51476 { , NN } ; 
  int _emal_52935__ivesli_48241 { , NN } ; 
  double _emal_52934__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_52933__pinl_4616__flat_1457 { , NN } ; 
  int _emal_52932__iveras_51477 { , NN } ; 
  int _emal_52931__ivesli_48239 { , NN } ; 
  double _emal_52930__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_52929__iveras_51478 { , NN } ; 
  int _emal_52928__ivesli_48237 { , NN } ; 
  double _emal_52927__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52926__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_52925__uprf_7410 { , NN } ; 
  int _emal_52924__pinl_6008_z { , NN } ; 
  double[1000000,2] _emal_52918__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_52917__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_52916__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_52915__pinl_4548__flat_1465 { , NN } ; 
  double _emal_52914__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52913__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52912__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_52911__uprf_7407 { , NN } ; 
  int _emal_52910__pinl_6028_z { , NN } ; 
  double _emal_52906_val { , NN } ; 
  double _emal_52905_val { , NN } ; 
  double[1000000,2] _emal_52904__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_52903__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_52902__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_52901__pinl_4480__flat_1465 { , NN } ; 
  double _emal_52900__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52899__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_52898__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_52894_val { , NN } ; 
  double _emal_52893_val { , NN } ; 
  double[1000000,2] _emal_52892__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51478 { , NN } ; 
  int _iveras_51477 { , NN } ; 
  int _iveras_51476 { , NN } ; 
  int _iveras_51475 { , NN } ; 
  int _ivesli_48243 { , NN } ; 
  int _ivesli_48241 { , NN } ; 
  int _ivesli_48239 { , NN } ; 
  int _ivesli_48237 { , NN } ; 
  int _wlidx_47883__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47882__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47881__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11079 { , NN } ; 
  int[2] _wlsb_11051 { , NN } ; 
  int _eat_10368 { , NN } ; 
  int _eat_10367 { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7410 { , NN } ; 
  int _uprf_7407 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _pinl_6008_z { , NN } ; 
  int _pinl_6028_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_52939__iveras_51475 = _alloc_( 1, 0, [:int]); 
    _iveras_51475 = _fill_( 0, _emal_52939__iveras_51475); 
    _ivesli_48243 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51475), _iveras_51475); 
    _emal_52937__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48243, P), _emal_52937__pinl_4643__flat_149__SSA2_1); 
    _emal_52936__iveras_51476 = _alloc_( 1, 0, [:int]); 
    _iveras_51476 = _fill_( 0, _emal_52936__iveras_51476); 
    _ivesli_48241 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51476), _iveras_51476); 
    _emal_52934__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48241, P), _emal_52934__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_52932__iveras_51477 = _alloc_( 1, 0, [:int]); 
    _iveras_51477 = _fill_( 1, _emal_52932__iveras_51477); 
    _ivesli_48239 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51477), _iveras_51477); 
    _emal_52930__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48239, P), _emal_52930__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52929__iveras_51478 = _alloc_( 1, 0, [:int]); 
    _iveras_51478 = _fill_( 1, _emal_52929__iveras_51478); 
    _ivesli_48237 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51478), _iveras_51478); 
    _emal_52927__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48237, P), _emal_52927__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_52925__uprf_7410 = _alloc_( 1, 0, [:int]); 
    _uprf_7410 = _fill_( _add_SxS_( 1, l), _emal_52925__uprf_7410); 
    _emal_52924__pinl_6008_z = _alloc_( 1, 0, [:int]); 
    _pinl_6008_z = _fill_( _max_SxS_( _uprf_7410, l), _emal_52924__pinl_6008_z); 
    _emal_52918__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47881__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55544_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55545_val = _fill_( _isreused_( _emal_52918__pinl_4435_P__SSA0_1, P), _emrb_55544_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5323_BlockHoare__Cond_1__ReuseCond_26( _emrb_55545_val, _pinl_4616__flat_1457, _pinl_6008_z, _uprf_7410, _pinl_4616__flat_1457__SSA3_2, _wlidx_47881__pinl_4435_P__SSA0_1, _emal_52918__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_52917__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48243, _pinl_4435_P__SSA0_1), _emal_52917__pinl_4575__flat_149__SSA2_1); 
    _emal_52916__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48241, _pinl_4435_P__SSA0_1), _emal_52916__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_52914__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48239, _pinl_4435_P__SSA0_1), _emal_52914__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52913__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48237, _pinl_4435_P__SSA0_1), _emal_52913__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_52911__uprf_7407 = _alloc_( 1, 0, [:int]); 
    _uprf_7407 = _fill_( _add_SxS_( 1, r), _emal_52911__uprf_7407); 
    _emal_52910__pinl_6028_z = _alloc_( 1, 0, [:int]); 
    _pinl_6028_z = _fill_( _max_SxS_( _uprf_7407, r), _emal_52910__pinl_6028_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10367 = _alloc_( 1, 0, [:int]); 
    _wlidx_47882__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_11079=[_pinl_4513__eat_766, _eat_10367] (IDXS:_wlidx_47882__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52905_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_11079, _wlidx_47882__pinl_4437_P__SSA0_3); 
          } : _emal_52905_val ; ,
        op_1 =
          { 
            _emal_52906_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_11079, _wlidx_47882__pinl_4437_P__SSA0_3); 
          } : _emal_52906_val ; ,
        op_2 =
          { 
            _emdr_55768 = _noop_( _wlsb_11079); 
          } : _emdr_55768 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7407, 1 ]
         */
        (r => _uprf_7407), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7407, 2 ]
         */
        (r => _uprf_7407), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_6028_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_6028_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47882__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_6028_z); 
    _free_( _uprf_7407); 
    _free_( _eat_10367); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47882__pinl_4437_P__SSA0_3); 
    _emal_52903__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48243, _pinl_4437_P__SSA0_3), _emal_52903__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48243); 
    _emal_52902__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48241, _pinl_4437_P__SSA0_3), _emal_52902__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48241); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_52900__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48239, _pinl_4437_P__SSA0_3), _emal_52900__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48239); 
    _emal_52899__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48237, _pinl_4437_P__SSA0_3), _emal_52899__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48237); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10368 = _alloc_( 1, 0, [:int]); 
    _wlidx_47883__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_11051=[_pinl_4445__eat_766, _eat_10368] (IDXS:_wlidx_47883__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_52893_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_11051, _wlidx_47883__pinl_4439_P__SSA0_5); 
          } : _emal_52893_val ; ,
        op_1 =
          { 
            _emal_52894_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_11051, _wlidx_47883__pinl_4439_P__SSA0_5); 
          } : _emal_52894_val ; ,
        op_2 =
          { 
            _emdr_55769 = _noop_( _wlsb_11051); 
          } : _emdr_55769 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7410, 1 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7410, 2 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_6008_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_6008_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47883__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_6008_z); 
    _free_( _uprf_7410); 
    _free_( _eat_10368); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47883__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5323_BlockHoare__Cond_1__ReuseCond_26(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5323_BlockHoare__Cond_1__ReuseCond_26( bool _emrb_55520 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_6008_z { ,NN } , int _uprf_7410 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _wlidx_47881__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_52918__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5323_BlockHoare__Cond_1__ReuseCond_26 ::  ---
 */
{ 
  double _emdr_55767 { , NN } ; 
  double[1000000,2] _emrb_55543 { , NN } ; 
  double _dup_55542__emal_52923_val { , NN } ; 
  double _dup_55541__pinl_6019__flat_28 { , NN } ; 
  double _dup_55540__emal_52921__dup_11113__pinl_6019__flat_28 { , NN } ; 
  int _dup_55539__ivesli_48235 { , NN } ; 
  int _dup_55538__emal_52922__ivesli_48235 { , NN } ; 
  double _dup_55537__emal_52920_val { , NN } ; 
  double _dup_55536__emal_52919_val { , NN } ; 
  double[1000000,2] _dup_55535__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55534__eat_10366 { , NN } ; 
  int _dup_55533__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55532__wlsb_11107 { , NN } ; 
  double _dup_55526__emal_52920_val { , NN } ; 
  double _dup_55525__emal_52919_val { , NN } ; 
  double[1000000,2] _dup_55524__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55523__eat_10366 { , NN } ; 
  int _dup_55522__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55521__wlsb_11107 { , NN } ; 

  if (_emrb_55520) 
  { 
    _dec_rc_( _emrb_55520, 1); 
    _dup_55522__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55523__eat_10366 = _alloc_( 1, 0, [:int]); 
    _dup_55524__pinl_4435_P__SSA0_1 = with2 (_dup_55521__wlsb_11107=[_dup_55522__pinl_4581__eat_766, _dup_55523__eat_10366] (IDXS:_wlidx_47881__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55525__emal_52919_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52918__pinl_4435_P__SSA0_1, _dup_55521__wlsb_11107, _wlidx_47881__pinl_4435_P__SSA0_1); 
          } : _dup_55525__emal_52919_val ; ,
        op_1 =
          { 
            _dup_55526__emal_52920_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52918__pinl_4435_P__SSA0_1, _dup_55521__wlsb_11107, _wlidx_47881__pinl_4435_P__SSA0_1); 
          } : _dup_55526__emal_52920_val ; ,
        op_2 =
          { 
            _emdr_55767 = _noop_( _dup_55521__wlsb_11107); 
          } : _emdr_55767 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7410, 1 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7410, 2 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_6008_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_6008_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52918__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47881__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55523__eat_10366); 
    _free_( _dup_55522__pinl_4581__eat_766); 
    _free_( _wlidx_47881__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55520, 1); 
    _dup_55533__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55534__eat_10366 = _alloc_( 1, 0, [:int]); 
    _dup_55535__pinl_4435_P__SSA0_1 = with2 (_dup_55532__wlsb_11107=[_dup_55533__pinl_4581__eat_766, _dup_55534__eat_10366] (IDXS:_wlidx_47881__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55536__emal_52919_val = _wl_assign_( _pinl_4616__flat_1457, _emal_52918__pinl_4435_P__SSA0_1, _dup_55532__wlsb_11107, _wlidx_47881__pinl_4435_P__SSA0_1); 
          } : _dup_55536__emal_52919_val ; ,
        op_1 =
          { 
            _dup_55537__emal_52920_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_52918__pinl_4435_P__SSA0_1, _dup_55532__wlsb_11107, _wlidx_47881__pinl_4435_P__SSA0_1); 
          } : _dup_55537__emal_52920_val ; ,
        op_2 =
          { 
            _dup_55538__emal_52922__ivesli_48235 = _alloc_( 1, 0, [:int]); 
            _dup_55539__ivesli_48235 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55533__pinl_4581__eat_766, _dup_55534__eat_10366), _dup_55538__emal_52922__ivesli_48235); 
            _dup_55540__emal_52921__dup_11113__pinl_6019__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55541__pinl_6019__flat_28 = _fill_( _idx_sel_( _dup_55539__ivesli_48235, P), _dup_55540__emal_52921__dup_11113__pinl_6019__flat_28); 
            _free_( _dup_55539__ivesli_48235); 
            _dup_55542__emal_52923_val = _wl_assign_( _dup_55541__pinl_6019__flat_28, _emal_52918__pinl_4435_P__SSA0_1, _dup_55532__wlsb_11107, _wlidx_47881__pinl_4435_P__SSA0_1); 
            _free_( _dup_55541__pinl_6019__flat_28); 
          } : _dup_55542__emal_52923_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7410, 1 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7410, 2 ]
         */
        (l => _uprf_7410), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_6008_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_6008_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_52918__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47881__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55533__pinl_4581__eat_766); 
    _free_( _dup_55534__eat_10366); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47881__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55543 = ( _emrb_55520 ? _dup_55524__pinl_4435_P__SSA0_1 : _dup_55535__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55543); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5322_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5322_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5322_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_52941__ctz_7688 { , NN } ; 
  bool _emal_52940__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7688 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_52941__ctz_7688 = _alloc_( 1, 0, [:int]); 
    _ctz_7688 = _fill_( _sub_SxS_( l, r), _emal_52941__ctz_7688); 
    _emal_52940__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7688, 0), _emal_52940__pinl_4093__flat_197); 
    _free_( _ctz_7688); 
    _hce_4 = _MAIN::_dup_5317_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5321_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5321_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5321_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5321_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55057_r { , NN } ; 
  int _emlr_55056_r { , NN } ; 
  int _emal_52949__dlirmov_51189__wlsimp_6931 { , NN } ; 
  int _emal_52948__dlirmov_51191__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_52947__dlirmov_51194__pinl_4296__flat_149 { , NN } ; 
  double _emal_52946__dlirmov_51197__pinl_4271__flat_149 { , NN } ; 
  double _emal_52945__dlirmov_51200__pinl_4257__flat_149 { , NN } ; 
  double _emal_52944__dlirmov_51203__pinl_4244__flat_149 { , NN } ; 
  int _emal_52943__dlirmov_51671__iveras_51479 { , NN } ; 
  int _emal_52942__dlirmov_51672__iveras_51480 { , NN } ; 
  int _dlirmov_51672__iveras_51480 { , NN } ; 
  int _dlirmov_51671__iveras_51479 { , NN } ; 
  double _dlirmov_51203__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_51200__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_51197__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_51194__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_51191__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_51189__wlsimp_6931 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_52949__dlirmov_51189__wlsimp_6931 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51189__wlsimp_6931 = _fill_( 0, _emal_52949__dlirmov_51189__wlsimp_6931); 
    _emal_52948__dlirmov_51191__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51191__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_52948__dlirmov_51191__pinl_4214__eat_768__SSA3_1); 
    _emal_52947__dlirmov_51194__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51194__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_51189__wlsimp_6931, q), _emal_52947__dlirmov_51194__pinl_4296__flat_149); 
    _emal_52946__dlirmov_51197__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51197__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_51191__pinl_4214__eat_768__SSA3_1, p), _emal_52946__dlirmov_51197__pinl_4271__flat_149); 
    _emal_52945__dlirmov_51200__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51200__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_51191__pinl_4214__eat_768__SSA3_1, q), _emal_52945__dlirmov_51200__pinl_4257__flat_149); 
    _free_( _dlirmov_51191__pinl_4214__eat_768__SSA3_1); 
    _emal_52944__dlirmov_51203__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51203__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_51189__wlsimp_6931, p), _emal_52944__dlirmov_51203__pinl_4244__flat_149); 
    _free_( _dlirmov_51189__wlsimp_6931); 
    _emal_52943__dlirmov_51671__iveras_51479 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51671__iveras_51479 = _fill_( 0, _emal_52943__dlirmov_51671__iveras_51479); 
    _emal_52942__dlirmov_51672__iveras_51480 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51672__iveras_51480 = _fill_( 1, _emal_52942__dlirmov_51672__iveras_51480); 
    _emlr_55056_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55057_r = _fill_( _copy_( r), _emlr_55056_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5320_BlockHoare__Loop_3( _dlirmov_51672__iveras_51480, _dlirmov_51671__iveras_51479, _dlirmov_51203__pinl_4244__flat_149, _dlirmov_51200__pinl_4257__flat_149, _dlirmov_51197__pinl_4271__flat_149, _dlirmov_51194__pinl_4296__flat_149, argmax, max, q, p, _emlr_55057_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5320_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5320_BlockHoare__Loop_3( int _iveras_51480 { ,NN } , int _iveras_51479 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5320_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_52967__ivesli_48247 { , NN } ; 
  double _emal_52966__pinl_4213__flat_149 { , NN } ; 
  int _emal_52965__ivesli_48245 { , NN } ; 
  double _emal_52964__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_52963__flat_129__SSA3_2 { , NN } ; 
  double _emal_52962__pinl_4284__flat_95 { , NN } ; 
  double _emal_52961__pinl_4259__flat_95 { , NN } ; 
  double _emal_52955__ctz_7692 { , NN } ; 
  bool _emal_52954__pinl_4312__flat_252 { , NN } ; 
  int _emal_52953__pinl_4315__flat_124 { , NN } ; 
  int _emal_52952__esd_8156 { , NN } ; 
  bool _emal_52950__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48247 { , NN } ; 
  int _ivesli_48245 { , NN } ; 
  int _esd_8156 { , NN } ; 
  double _ctz_7692 { , NN } ; 
  int _ctz_7690 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_52967__ivesli_48247 = _alloc_( 1, 0, [:int]); 
  _ivesli_48247 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51479), _emal_52967__ivesli_48247); 
  _emal_52966__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48247, P), _emal_52966__pinl_4213__flat_149); 
  _free_( _ivesli_48247); 
  _emal_52965__ivesli_48245 = _alloc_( 1, 0, [:int]); 
  _ivesli_48245 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51480), _emal_52965__ivesli_48245); 
  _emal_52964__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48245, P), _emal_52964__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48245); 
  _emal_52963__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_52963__flat_129__SSA3_2); 
  _emal_52962__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_52962__pinl_4284__flat_95); 
  _emal_52961__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_52961__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_52955__ctz_7692 = _alloc_( 1, 0, [:int]); 
  _ctz_7692 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_52955__ctz_7692); 
  _emal_52954__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7692, 0.0), _emal_52954__pinl_4312__flat_252); 
  _free_( _ctz_7692); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5318_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_52953__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_52953__pinl_4315__flat_124); 
  _emal_52952__esd_8156 = r; 
  _esd_8156 = _fill_( _sub_SxS_( 1, r), _emal_52952__esd_8156); 
  _ctz_7690 = _fill_( _add_SxS_( _esd_8156, l), _esd_8156); 
  _emal_52950__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7690, 0), _emal_52950__pinl_4316__flat_197); 
  _free_( _ctz_7690); 
  _hce_3 = _MAIN::_dup_5319_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5320_BlockHoare__Loop_3( _iveras_51480, _iveras_51479, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51479, 1); 
    _dec_rc_( _iveras_51480, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5319_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5319_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5319_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_52988__hce_3__SSA0_1 { , NN } ; 
  int _emal_52987__wlsimp_6934 { , NN } ; 
  int _emal_52986__iveras_51481 { , NN } ; 
  int _emal_52985__ivesli_48251 { , NN } ; 
  double _emal_52984__pinl_4328__flat_149 { , NN } ; 
  int _emal_52983__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_52982__iveras_51482 { , NN } ; 
  int _emal_52981__ivesli_48249 { , NN } ; 
  double _emal_52980__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_52979__pinl_4411__flat_149 { , NN } ; 
  double _emal_52978__pinl_4399__flat_95 { , NN } ; 
  double _emal_52977__pinl_4386__flat_149 { , NN } ; 
  double _emal_52976__pinl_4374__flat_95 { , NN } ; 
  double _emal_52975__pinl_4373__flat_96 { , NN } ; 
  double _emal_52974__pinl_4372__flat_149 { , NN } ; 
  double _emal_52973__pinl_4360__flat_95 { , NN } ; 
  double _emal_52972__pinl_4359__flat_149 { , NN } ; 
  double _emal_52971__pinl_4347__flat_95 { , NN } ; 
  double _emal_52970__pinl_4346__flat_96 { , NN } ; 
  double _emal_52969__pinl_4345__flat_95 { , NN } ; 
  bool _emal_52968__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51482 { , NN } ; 
  int _iveras_51481 { , NN } ; 
  int _ivesli_48251 { , NN } ; 
  int _ivesli_48249 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6934 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_52987__wlsimp_6934 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6934 = _fill_( 0, _emal_52987__wlsimp_6934); 
    _emal_52986__iveras_51481 = _alloc_( 1, 0, [:int]); 
    _iveras_51481 = _fill_( 0, _emal_52986__iveras_51481); 
    _ivesli_48251 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51481), _iveras_51481); 
    _emal_52984__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48251, P), _emal_52984__pinl_4328__flat_149); 
    _free_( _ivesli_48251); 
    _emal_52983__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_52983__pinl_4329__eat_768__SSA3_1); 
    _emal_52982__iveras_51482 = _alloc_( 1, 0, [:int]); 
    _iveras_51482 = _fill_( 1, _emal_52982__iveras_51482); 
    _ivesli_48249 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51482), _iveras_51482); 
    _emal_52980__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48249, P), _emal_52980__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48249); 
    _emal_52979__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_6934, q), _emal_52979__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_52977__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_52977__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_52974__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_52974__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_52972__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_6934, p), _emal_52972__pinl_4359__flat_149); 
    _free_( _wlsimp_6934); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_52968__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_52968__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_52988__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_52988__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5318_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5318_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5318_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5317_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5317_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5317_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_53009__hce_4__SSA0_1 { , NN } ; 
  int _emal_53008__wlsimp_6937 { , NN } ; 
  int _emal_53007__iveras_51483 { , NN } ; 
  int _emal_53006__ivesli_48255 { , NN } ; 
  double _emal_53005__pinl_4105__flat_149 { , NN } ; 
  int _emal_53004__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_53003__iveras_51484 { , NN } ; 
  int _emal_53002__ivesli_48253 { , NN } ; 
  double _emal_53001__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_53000__pinl_4188__flat_149 { , NN } ; 
  double _emal_52999__pinl_4176__flat_95 { , NN } ; 
  double _emal_52998__pinl_4163__flat_149 { , NN } ; 
  double _emal_52997__pinl_4151__flat_95 { , NN } ; 
  double _emal_52996__pinl_4150__flat_96 { , NN } ; 
  double _emal_52995__pinl_4149__flat_149 { , NN } ; 
  double _emal_52994__pinl_4137__flat_95 { , NN } ; 
  double _emal_52993__pinl_4136__flat_149 { , NN } ; 
  double _emal_52992__pinl_4124__flat_95 { , NN } ; 
  double _emal_52991__pinl_4123__flat_96 { , NN } ; 
  double _emal_52990__pinl_4122__flat_95 { , NN } ; 
  bool _emal_52989__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51484 { , NN } ; 
  int _iveras_51483 { , NN } ; 
  int _ivesli_48255 { , NN } ; 
  int _ivesli_48253 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6937 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_53008__wlsimp_6937 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6937 = _fill_( 0, _emal_53008__wlsimp_6937); 
    _emal_53007__iveras_51483 = _alloc_( 1, 0, [:int]); 
    _iveras_51483 = _fill_( 0, _emal_53007__iveras_51483); 
    _ivesli_48255 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51483), _iveras_51483); 
    _emal_53005__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48255, P), _emal_53005__pinl_4105__flat_149); 
    _free_( _ivesli_48255); 
    _emal_53004__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_53004__pinl_4106__eat_768__SSA3_1); 
    _emal_53003__iveras_51484 = _alloc_( 1, 0, [:int]); 
    _iveras_51484 = _fill_( 1, _emal_53003__iveras_51484); 
    _ivesli_48253 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51484), _iveras_51484); 
    _emal_53001__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48253, P), _emal_53001__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48253); 
    _emal_53000__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_6937, q), _emal_53000__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_52998__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_52998__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_52995__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_52995__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_52993__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_6937, p), _emal_52993__pinl_4136__flat_149); 
    _free_( _wlsimp_6937); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_52989__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_52989__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_53009__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_53009__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5316_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5316_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5316_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55059_l { , NN } ; 
  int _emlr_55058_l { , NN } ; 
  int _emal_53017__dlirmov_51173__wlsimp_6940 { , NN } ; 
  int _emal_53016__dlirmov_51175__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_53015__dlirmov_51178__pinl_3963__flat_149 { , NN } ; 
  double _emal_53014__dlirmov_51181__pinl_3938__flat_149 { , NN } ; 
  double _emal_53013__dlirmov_51184__pinl_3924__flat_149 { , NN } ; 
  double _emal_53012__dlirmov_51187__pinl_3911__flat_149 { , NN } ; 
  int _emal_53011__dlirmov_51669__iveras_51485 { , NN } ; 
  int _emal_53010__dlirmov_51670__iveras_51486 { , NN } ; 
  int _dlirmov_51670__iveras_51486 { , NN } ; 
  int _dlirmov_51669__iveras_51485 { , NN } ; 
  double _dlirmov_51187__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_51184__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_51181__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_51178__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_51175__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_51173__wlsimp_6940 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_53017__dlirmov_51173__wlsimp_6940 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51173__wlsimp_6940 = _fill_( 0, _emal_53017__dlirmov_51173__wlsimp_6940); 
    _emal_53016__dlirmov_51175__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51175__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_53016__dlirmov_51175__pinl_3881__eat_768__SSA3_1); 
    _emal_53015__dlirmov_51178__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51178__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_51173__wlsimp_6940, q), _emal_53015__dlirmov_51178__pinl_3963__flat_149); 
    _emal_53014__dlirmov_51181__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51181__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_51175__pinl_3881__eat_768__SSA3_1, p), _emal_53014__dlirmov_51181__pinl_3938__flat_149); 
    _emal_53013__dlirmov_51184__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51184__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_51175__pinl_3881__eat_768__SSA3_1, q), _emal_53013__dlirmov_51184__pinl_3924__flat_149); 
    _free_( _dlirmov_51175__pinl_3881__eat_768__SSA3_1); 
    _emal_53012__dlirmov_51187__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51187__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_51173__wlsimp_6940, p), _emal_53012__dlirmov_51187__pinl_3911__flat_149); 
    _free_( _dlirmov_51173__wlsimp_6940); 
    _emal_53011__dlirmov_51669__iveras_51485 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51669__iveras_51485 = _fill_( 0, _emal_53011__dlirmov_51669__iveras_51485); 
    _emal_53010__dlirmov_51670__iveras_51486 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51670__iveras_51486 = _fill_( 1, _emal_53010__dlirmov_51670__iveras_51486); 
    _emlr_55058_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55059_l = _fill_( _copy_( l), _emlr_55058_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5315_BlockHoare__Loop_8( _dlirmov_51670__iveras_51486, _dlirmov_51669__iveras_51485, _dlirmov_51187__pinl_3911__flat_149, _dlirmov_51184__pinl_3924__flat_149, _dlirmov_51181__pinl_3938__flat_149, _dlirmov_51178__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55059_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5315_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5315_BlockHoare__Loop_8( int _iveras_51486 { ,NN } , int _iveras_51485 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5315_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_53034__ivesli_48259 { , NN } ; 
  double _emal_53033__pinl_3880__flat_149 { , NN } ; 
  int _emal_53032__ivesli_48257 { , NN } ; 
  double _emal_53031__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53030__flat_117__SSA3_2 { , NN } ; 
  double _emal_53029__pinl_3951__flat_95 { , NN } ; 
  double _emal_53028__pinl_3926__flat_95 { , NN } ; 
  double _emal_53022__ctz_7696 { , NN } ; 
  bool _emal_53021__pinl_3979__flat_252 { , NN } ; 
  int _emal_53020__pinl_3982__flat_122 { , NN } ; 
  int _emal_53019__ctz_7694 { , NN } ; 
  bool _emal_53018__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48259 { , NN } ; 
  int _ivesli_48257 { , NN } ; 
  double _ctz_7696 { , NN } ; 
  int _ctz_7694 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_53034__ivesli_48259 = _alloc_( 1, 0, [:int]); 
  _ivesli_48259 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51485), _emal_53034__ivesli_48259); 
  _emal_53033__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48259, P), _emal_53033__pinl_3880__flat_149); 
  _free_( _ivesli_48259); 
  _emal_53032__ivesli_48257 = _alloc_( 1, 0, [:int]); 
  _ivesli_48257 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51486), _emal_53032__ivesli_48257); 
  _emal_53031__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48257, P), _emal_53031__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48257); 
  _emal_53030__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_53030__flat_117__SSA3_2); 
  _emal_53029__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_53029__pinl_3951__flat_95); 
  _emal_53028__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_53028__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_53022__ctz_7696 = _alloc_( 1, 0, [:int]); 
  _ctz_7696 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_53022__ctz_7696); 
  _emal_53021__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7696, 0.0), _emal_53021__pinl_3979__flat_252); 
  _free_( _ctz_7696); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5313_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_53020__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_53020__pinl_3982__flat_122); 
  _emal_53019__ctz_7694 = _alloc_( 1, 0, [:int]); 
  _ctz_7694 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_53019__ctz_7694); 
  _emal_53018__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7694, 0), _emal_53018__pinl_3983__flat_197); 
  _free_( _ctz_7694); 
  _hce_5 = _MAIN::_dup_5314_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5315_BlockHoare__Loop_8( _iveras_51486, _iveras_51485, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51485, 1); 
    _dec_rc_( _iveras_51486, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5314_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5314_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5314_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_53055__hce_5__SSA0_1 { , NN } ; 
  int _emal_53054__wlsimp_6943 { , NN } ; 
  int _emal_53053__iveras_51487 { , NN } ; 
  int _emal_53052__ivesli_48263 { , NN } ; 
  double _emal_53051__pinl_3995__flat_149 { , NN } ; 
  int _emal_53050__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_53049__iveras_51488 { , NN } ; 
  int _emal_53048__ivesli_48261 { , NN } ; 
  double _emal_53047__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_53046__pinl_4078__flat_149 { , NN } ; 
  double _emal_53045__pinl_4066__flat_95 { , NN } ; 
  double _emal_53044__pinl_4053__flat_149 { , NN } ; 
  double _emal_53043__pinl_4041__flat_95 { , NN } ; 
  double _emal_53042__pinl_4040__flat_96 { , NN } ; 
  double _emal_53041__pinl_4039__flat_149 { , NN } ; 
  double _emal_53040__pinl_4027__flat_95 { , NN } ; 
  double _emal_53039__pinl_4026__flat_149 { , NN } ; 
  double _emal_53038__pinl_4014__flat_95 { , NN } ; 
  double _emal_53037__pinl_4013__flat_96 { , NN } ; 
  double _emal_53036__pinl_4012__flat_95 { , NN } ; 
  bool _emal_53035__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51488 { , NN } ; 
  int _iveras_51487 { , NN } ; 
  int _ivesli_48263 { , NN } ; 
  int _ivesli_48261 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6943 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_53054__wlsimp_6943 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6943 = _fill_( 0, _emal_53054__wlsimp_6943); 
    _emal_53053__iveras_51487 = _alloc_( 1, 0, [:int]); 
    _iveras_51487 = _fill_( 0, _emal_53053__iveras_51487); 
    _ivesli_48263 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51487), _iveras_51487); 
    _emal_53051__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48263, P), _emal_53051__pinl_3995__flat_149); 
    _free_( _ivesli_48263); 
    _emal_53050__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_53050__pinl_3996__eat_768__SSA3_1); 
    _emal_53049__iveras_51488 = _alloc_( 1, 0, [:int]); 
    _iveras_51488 = _fill_( 1, _emal_53049__iveras_51488); 
    _ivesli_48261 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51488), _iveras_51488); 
    _emal_53047__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48261, P), _emal_53047__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48261); 
    _emal_53046__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_6943, q), _emal_53046__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_53044__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_53044__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_53041__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_53041__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_53039__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_6943, p), _emal_53039__pinl_4026__flat_149); 
    _free_( _wlsimp_6943); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_53035__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_53035__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_53055__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_53055__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5313_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5313_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5313_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5312_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5312_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5312_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_53076__hce_6__SSA0_1 { , NN } ; 
  int _emal_53075__wlsimp_6946 { , NN } ; 
  int _emal_53074__iveras_51489 { , NN } ; 
  int _emal_53073__ivesli_48267 { , NN } ; 
  double _emal_53072__pinl_3772__flat_149 { , NN } ; 
  int _emal_53071__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_53070__iveras_51490 { , NN } ; 
  int _emal_53069__ivesli_48265 { , NN } ; 
  double _emal_53068__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_53067__pinl_3855__flat_149 { , NN } ; 
  double _emal_53066__pinl_3843__flat_95 { , NN } ; 
  double _emal_53065__pinl_3830__flat_149 { , NN } ; 
  double _emal_53064__pinl_3818__flat_95 { , NN } ; 
  double _emal_53063__pinl_3817__flat_96 { , NN } ; 
  double _emal_53062__pinl_3816__flat_149 { , NN } ; 
  double _emal_53061__pinl_3804__flat_95 { , NN } ; 
  double _emal_53060__pinl_3803__flat_149 { , NN } ; 
  double _emal_53059__pinl_3791__flat_95 { , NN } ; 
  double _emal_53058__pinl_3790__flat_96 { , NN } ; 
  double _emal_53057__pinl_3789__flat_95 { , NN } ; 
  bool _emal_53056__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51490 { , NN } ; 
  int _iveras_51489 { , NN } ; 
  int _ivesli_48267 { , NN } ; 
  int _ivesli_48265 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_6946 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_53075__wlsimp_6946 = _alloc_( 1, 0, [:int]); 
    _wlsimp_6946 = _fill_( 0, _emal_53075__wlsimp_6946); 
    _emal_53074__iveras_51489 = _alloc_( 1, 0, [:int]); 
    _iveras_51489 = _fill_( 0, _emal_53074__iveras_51489); 
    _ivesli_48267 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51489), _iveras_51489); 
    _emal_53072__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48267, P), _emal_53072__pinl_3772__flat_149); 
    _free_( _ivesli_48267); 
    _emal_53071__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_53071__pinl_3773__eat_768__SSA3_1); 
    _emal_53070__iveras_51490 = _alloc_( 1, 0, [:int]); 
    _iveras_51490 = _fill_( 1, _emal_53070__iveras_51490); 
    _ivesli_48265 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51490), _iveras_51490); 
    _emal_53068__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48265, P), _emal_53068__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48265); 
    _emal_53067__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_6946, q), _emal_53067__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_53065__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_53065__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_53062__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_53062__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_53060__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_6946, p), _emal_53060__pinl_3803__flat_149); 
    _free_( _wlsimp_6946); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_53056__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_53056__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_53076__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_53076__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5311_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5311_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5311_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_53077__dlirmov_51170__flat_65 { , NN } ; 
  int{0} _dlirmov_51170__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_59); 
    _emal_53077__dlirmov_51170__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51170__flat_65 = _fill_( 0, _emal_53077__dlirmov_51170__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5310_BlockHoare__Loop_24( _dlirmov_51170__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( numr, 1); 
    _dec_rc_( numl, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5310_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5310_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5310_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_53096__esd_29604 { , NN } ; 
  bool _emal_53095__pinl_3238__flat_194 { , NN } ; 
  int _emal_53094__esd_29603 { , NN } ; 
  bool _emal_53093__pinl_3360__flat_194 { , NN } ; 
  int _emal_53092__ctz_7702 { , NN } ; 
  bool _emal_53091__pinl_3482__flat_196 { , NN } ; 
  int _emal_53090__esd_8201 { , NN } ; 
  bool _emal_53089__pinl_3483__flat_196 { , NN } ; 
  int _emal_53088__pinl_3748__flat_41 { , NN } ; 
  int _emal_53087__pinl_3749__flat_41 { , NN } ; 
  int _emal_53086__pinl_3750__flat_40 { , NN } ; 
  int _emal_53085__pinl_3751__flat_40 { , NN } ; 
  int _emal_53084__esd_29599 { , NN } ; 
  bool _emal_53083__pinl_3752__flat_194 { , NN } ; 
  int _emal_53082__esd_29598 { , NN } ; 
  bool _emal_53081__pinl_3754__flat_194 { , NN } ; 
  int _emal_53080__pinl_3757__flat_41 { , NN } ; 
  bool _emal_53078__pinl_3758__flat_198 { , NN } ; 
  int _esd_29604 { , NN } ; 
  int _esd_29603 { , NN } ; 
  int _esd_29599 { , NN } ; 
  int _esd_29598 { , NN } ; 
  int _esd_8201 { , NN } ; 
  int _ctz_7702 { , NN } ; 
  int _ctz_7698 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_53096__esd_29604 = _alloc_( 1, 0, [:int]); 
  _esd_29604 = _fill_( _neg_S_( numl), _emal_53096__esd_29604); 
  _emal_53095__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29604, 0), _emal_53095__pinl_3238__flat_194); 
  _free_( _esd_29604); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5300_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_53094__esd_29603 = _alloc_( 1, 0, [:int]); 
  _esd_29603 = _fill_( _neg_S_( numr), _emal_53094__esd_29603); 
  _emal_53093__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29603, 0), _emal_53093__pinl_3360__flat_194); 
  _free_( _esd_29603); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5304_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_53092__ctz_7702 = _alloc_( 1, 0, [:int]); 
  _ctz_7702 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_53092__ctz_7702); 
  _emal_53091__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7702, 0), _emal_53091__pinl_3482__flat_196); 
  _free_( _ctz_7702); 
  _hce_7 = _MAIN::_dup_5305_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_53090__esd_8201 = _alloc_( 1, 0, [:int]); 
  _esd_8201 = _fill_( _neg_S_( _hce_7), _emal_53090__esd_8201); 
  _emal_53089__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_8201, 0), _emal_53089__pinl_3483__flat_196); 
  _free_( _esd_8201); 
  P__SSA0_1 = _MAIN::_dup_5307_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_53088__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_53088__pinl_3748__flat_41); 
  _emal_53087__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_53087__pinl_3749__flat_41); 
  _emal_53086__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_53086__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_53085__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_53085__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_53084__esd_29599 = _alloc_( 1, 0, [:int]); 
  _esd_29599 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_53084__esd_29599); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_53083__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29599, 0), _emal_53083__pinl_3752__flat_194); 
  _free_( _esd_29599); 
  l__SSA0_1 = _MAIN::_dup_5308_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_53082__esd_29598 = _alloc_( 1, 0, [:int]); 
  _esd_29598 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_53082__esd_29598); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_53081__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29598, 0), _emal_53081__pinl_3754__flat_194); 
  _free_( _esd_29598); 
  r__SSA0_1 = _MAIN::_dup_5309_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_53080__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_53080__pinl_3757__flat_41); 
  _ctz_7698 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_53078__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7698, 0), _emal_53078__pinl_3758__flat_198); 
  _free_( _ctz_7698); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5310_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5309_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5309_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5309_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_53097__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_53097__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_53097__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5308_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5308_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5308_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_53098__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_53098__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_53098__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5307_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5307_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5307_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55518_val { , NN } ; 
  bool _emrb_55517_mem { , NN } ; 
  double[1000000,2] _emlr_55063_P { , NN } ; 
  double[1000000,2] _emlr_55062_P { , NN } ; 
  int{0} _emlr_55061_j { , NN } ; 
  int _emlr_55060_j { , NN } ; 
  int _emal_53102__dlirmov_51665__iveras_51491 { , NN } ; 
  int _emal_53101__dlirmov_51666__iveras_51492 { , NN } ; 
  int _emal_53100__dlirmov_51667__iveras_51493 { , NN } ; 
  int _emal_53099__dlirmov_51668__iveras_51494 { , NN } ; 
  int _dlirmov_51668__iveras_51494 { , NN } ; 
  int _dlirmov_51667__iveras_51493 { , NN } ; 
  int _dlirmov_51666__iveras_51492 { , NN } ; 
  int _dlirmov_51665__iveras_51491 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_53102__dlirmov_51665__iveras_51491 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51665__iveras_51491 = _fill_( 0, _emal_53102__dlirmov_51665__iveras_51491); 
    _emal_53101__dlirmov_51666__iveras_51492 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51666__iveras_51492 = _fill_( 0, _emal_53101__dlirmov_51666__iveras_51492); 
    _emal_53100__dlirmov_51667__iveras_51493 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51667__iveras_51493 = _fill_( 1, _emal_53100__dlirmov_51667__iveras_51493); 
    _emal_53099__dlirmov_51668__iveras_51494 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51668__iveras_51494 = _fill_( 1, _emal_53099__dlirmov_51668__iveras_51494); 
    _emlr_55062_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55517_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55518_val = _fill_( _isreused_( _emlr_55062_P, P), _emrb_55517_mem); 
    _emlr_55063_P = _MAIN::_dup_5307_BlockHoare__Cond_16__ReuseCond_25( _emrb_55518_val, _emlr_55062_P, P) ; 
    _emlr_55060_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55061_j = _fill_( _copy_( j), _emlr_55060_j); 
    P__SSA0_1 = _MAIN::_dup_5306_BlockHoare__Loop_15( _dlirmov_51668__iveras_51494, _dlirmov_51667__iveras_51493, _dlirmov_51666__iveras_51492, _dlirmov_51665__iveras_51491, offsetsl, offsetsr, startl, startr, num, _emlr_55061_j, r, l, _emlr_55063_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5307_BlockHoare__Cond_16__ReuseCond_25(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5307_BlockHoare__Cond_16__ReuseCond_25( bool _emrb_55513 { ,NN } , double[1000000,2] _emlr_55062_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5307_BlockHoare__Cond_16__ReuseCond_25 ::  ---
 */
{ 
  double[1000000,2] _emrb_55516 { , NN } ; 
  double[1000000,2] _dup_55515__emlr_55063_P { , NN } ; 
  double[1000000,2] _dup_55514__emlr_55063_P { , NN } ; 

  if (_emrb_55513) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55513, 1); 
    _dup_55514__emlr_55063_P = _fill_( _noop_( P), _emlr_55062_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55513, 1); 
    _dup_55515__emlr_55063_P = _fill_( _copy_( P), _emlr_55062_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55516 = ( _emrb_55513 ? _dup_55514__emlr_55063_P : _dup_55515__emlr_55063_P ); 
  return( _emrb_55516); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5306_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5306_BlockHoare__Loop_15( int _iveras_51494 { ,NN } , int _iveras_51493 { ,NN } , int _iveras_51492 { ,NN } , int _iveras_51491 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5306_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55772 { , NN } ; 
  double _emdr_55771 { , NN } ; 
  double _emdr_55770 { , NN } ; 
  int _emal_53158__ivesli_48288 { , NN } ; 
  int _emal_53157__pinl_3507__flat_68 { , NN } ; 
  int _emal_53156__pinl_3510__flat_41 { , NN } ; 
  int _emal_53155__ivesli_48285 { , NN } ; 
  int _emal_53154__pinl_3522__flat_68 { , NN } ; 
  int _emal_53153__pinl_3525__flat_40 { , NN } ; 
  int _emal_53150__ivesli_48284 { , NN } ; 
  double _emal_53149__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_53147__ivesli_48280 { , NN } ; 
  double _emal_53146__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_53143__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53141__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53139__uprf_7416 { , NN } ; 
  int _emal_53138__pinl_5948_z { , NN } ; 
  double _emal_53134_val { , NN } ; 
  double _emal_53133_val { , NN } ; 
  double[1000000,2] _emal_53132__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_53131__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_53130__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_53128__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53127__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53125__uprf_7413 { , NN } ; 
  int _emal_53124__pinl_5968_z { , NN } ; 
  double _emal_53120_val { , NN } ; 
  double _emal_53119_val { , NN } ; 
  double _emal_53117__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_53116__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_53114__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53113__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53108_val { , NN } ; 
  double _emal_53107_val { , NN } ; 
  int _emal_53105__pinl_3746__flat_122 { , NN } ; 
  int _emal_53104__ctz_7704 { , NN } ; 
  bool _emal_53103__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48288 { , NN } ; 
  int _ivesli_48285 { , NN } ; 
  int _ivesli_48284 { , NN } ; 
  int _ivesli_48282 { , NN } ; 
  int _ivesli_48281 { , NN } ; 
  int _ivesli_48280 { , NN } ; 
  int _ivesli_48278 { , NN } ; 
  int _ivesli_48277 { , NN } ; 
  int _ivesli_48273 { , NN } ; 
  int _wlidx_47886__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47885__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47884__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11191 { , NN } ; 
  int[2] _wlsb_11163 { , NN } ; 
  int[2] _wlsb_11135 { , NN } ; 
  int _eat_10365 { , NN } ; 
  int _eat_10364 { , NN } ; 
  int _eat_10363 { , NN } ; 
  int _ctz_7704 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7416 { , NN } ; 
  int _uprf_7413 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5948_z { , NN } ; 
  int _pinl_5968_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_53158__ivesli_48288 = _alloc_( 1, 0, [:int]); 
  _ivesli_48288 = _fill_( _add_SxS_( startr, j), _emal_53158__ivesli_48288); 
  _emal_53157__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48288, offsetsr), _emal_53157__pinl_3507__flat_68); 
  _free_( _ivesli_48288); 
  _emal_53156__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_53156__pinl_3510__flat_41); 
  _emal_53155__ivesli_48285 = _alloc_( 1, 0, [:int]); 
  _ivesli_48285 = _fill_( _add_SxS_( startl, j), _emal_53155__ivesli_48285); 
  _emal_53154__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48285, offsetsl), _emal_53154__pinl_3522__flat_68); 
  _free_( _ivesli_48285); 
  _emal_53153__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_53153__pinl_3525__flat_40); 
  _ivesli_48281 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48282 = _fill_( _neg_S_( _ivesli_48281), _ivesli_48281); 
  _emal_53150__ivesli_48284 = _alloc_( 1, 0, [:int]); 
  _ivesli_48284 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48282, _iveras_51491), _emal_53150__ivesli_48284); 
  _emal_53149__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48284, P), _emal_53149__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48278 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_53147__ivesli_48280 = _alloc_( 1, 0, [:int]); 
  _ivesli_48280 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48278, _iveras_51492), _emal_53147__ivesli_48280); 
  _emal_53146__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48280, P), _emal_53146__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48277 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48282, _iveras_51493), _ivesli_48282); 
  _emal_53143__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48277, P), _emal_53143__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48273 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48278, _iveras_51494), _ivesli_48278); 
  _emal_53141__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48273, P), _emal_53141__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_53139__uprf_7416 = _alloc_( 1, 0, [:int]); 
  _uprf_7416 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_53139__uprf_7416); 
  _emal_53138__pinl_5948_z = _alloc_( 1, 0, [:int]); 
  _pinl_5948_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7416), _emal_53138__pinl_5948_z); 
  _emal_53132__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10363 = _alloc_( 1, 0, [:int]); 
  _wlidx_47884__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_11191=[_pinl_3681__eat_766, _eat_10363] (IDXS:_wlidx_47884__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53133_val = _wl_assign_( _pinl_3716__flat_1457, _emal_53132__pinl_3535_P__SSA0_1, _wlsb_11191, _wlidx_47884__pinl_3535_P__SSA0_1); 
        } : _emal_53133_val ; ,
      op_1 =
        { 
          _emal_53134_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_53132__pinl_3535_P__SSA0_1, _wlsb_11191, _wlidx_47884__pinl_3535_P__SSA0_1); 
        } : _emal_53134_val ; ,
      op_2 =
        { 
          _emdr_55770 = _noop_( _wlsb_11191); 
        } : _emdr_55770 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7416, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7416), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7416, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7416), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5948_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5948_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_53132__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47884__pinl_3535_P__SSA0_1)); 
  _free_( _eat_10363); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47884__pinl_3535_P__SSA0_1); 
  _emal_53131__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48284, _pinl_3535_P__SSA0_1), _emal_53131__pinl_3675__flat_149__SSA2_1); 
  _emal_53130__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48280, _pinl_3535_P__SSA0_1), _emal_53130__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_53128__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48277, _pinl_3535_P__SSA0_1), _emal_53128__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53127__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48273, _pinl_3535_P__SSA0_1), _emal_53127__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53125__uprf_7413 = _alloc_( 1, 0, [:int]); 
  _uprf_7413 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_53125__uprf_7413); 
  _emal_53124__pinl_5968_z = _alloc_( 1, 0, [:int]); 
  _pinl_5968_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7413), _emal_53124__pinl_5968_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10364 = _alloc_( 1, 0, [:int]); 
  _wlidx_47885__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_11163=[_pinl_3613__eat_766, _eat_10364] (IDXS:_wlidx_47885__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53119_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_11163, _wlidx_47885__pinl_3537_P__SSA0_3); 
        } : _emal_53119_val ; ,
      op_1 =
        { 
          _emal_53120_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_11163, _wlidx_47885__pinl_3537_P__SSA0_3); 
        } : _emal_53120_val ; ,
      op_2 =
        { 
          _emdr_55771 = _noop_( _wlsb_11163); 
        } : _emdr_55771 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7413, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7413), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7413, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7413), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5968_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5968_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47885__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_5968_z); 
  _free_( _uprf_7413); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_10364); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47885__pinl_3537_P__SSA0_3); 
  _emal_53117__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48284, _pinl_3537_P__SSA0_3), _emal_53117__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48284); 
  _emal_53116__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48280, _pinl_3537_P__SSA0_3), _emal_53116__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48280); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_53114__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48277, _pinl_3537_P__SSA0_3), _emal_53114__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48277); 
  _emal_53113__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48273, _pinl_3537_P__SSA0_3), _emal_53113__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48273); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10365 = _alloc_( 1, 0, [:int]); 
  _wlidx_47886__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_11135=[_pinl_3545__eat_766, _eat_10365] (IDXS:_wlidx_47886__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53107_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_11135, _wlidx_47886__pinl_3539_P__SSA0_5); 
        } : _emal_53107_val ; ,
      op_1 =
        { 
          _emal_53108_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_11135, _wlidx_47886__pinl_3539_P__SSA0_5); 
        } : _emal_53108_val ; ,
      op_2 =
        { 
          _emdr_55772 = _noop_( _wlsb_11135); 
        } : _emdr_55772 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7416, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7416), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7416, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7416), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5948_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5948_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47886__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_5948_z); 
  _free_( _uprf_7416); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_10365); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47886__pinl_3539_P__SSA0_5); 
  _emal_53105__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_53105__pinl_3746__flat_122); 
  _emal_53104__ctz_7704 = _alloc_( 1, 0, [:int]); 
  _ctz_7704 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_53104__ctz_7704); 
  _emal_53103__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7704, 0), _emal_53103__pinl_3747__flat_196); 
  _free_( _ctz_7704); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5306_BlockHoare__Loop_15( _iveras_51494, _iveras_51493, _iveras_51492, _iveras_51491, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51491, 1); 
    _dec_rc_( _iveras_51492, 1); 
    _dec_rc_( _iveras_51493, 1); 
    _dec_rc_( _iveras_51494, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5305_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5305_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5305_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5304_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5304_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5304_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55511_val { , NN } ; 
  bool _emrb_55510_mem { , NN } ; 
  int{0} _emlr_55069_startr__SSA0_1 { , NN } ; 
  int _emlr_55068_startr__SSA0_1 { , NN } ; 
  int _emlr_55067_numr { , NN } ; 
  int _emlr_55066_numr { , NN } ; 
  int[64] _emlr_55065_offsetsr { , NN } ; 
  int[64] _emlr_55064_offsetsr { , NN } ; 
  int _emal_53166_startr__SSA0_1 { , NN } ; 
  int _emal_53165__ivesplit_24597 { , NN } ; 
  double _emal_53164__pinl_6570__ls_6109 { , NN } ; 
  double _emal_53163__pinl_6571__ls_6110 { , NN } ; 
  double _emal_53162__pinl_6566__ls_6099 { , NN } ; 
  double _emal_53161__pinl_6567__ls_6100 { , NN } ; 
  int _emal_53160__dlirmov_51663__iveras_51415 { , NN } ; 
  int _emal_53159__dlirmov_51664__iveras_51416 { , NN } ; 
  int _dlirmov_51664__iveras_51416 { , NN } ; 
  int _dlirmov_51663__iveras_51415 { , NN } ; 
  int{1} _ivesplit_24597 { , NN } ; 
  double _pinl_6571__ls_6110 { , NN } ; 
  double _pinl_6570__ls_6109 { , NN } ; 
  double _pinl_6567__ls_6100 { , NN } ; 
  double _pinl_6566__ls_6099 { , NN } ; 
  int _pinl_6563_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_6562_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_6561_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6560_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_53166_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_53166_startr__SSA0_1); 
    _emal_53165__ivesplit_24597 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24597 = _fill_( 1, _emal_53165__ivesplit_24597); 
    _emal_53164__pinl_6570__ls_6109 = _alloc_( 1, 0, [:int]); 
    _pinl_6570__ls_6109 = _fill_( _idx_sel_( _ivesplit_24597, q), _emal_53164__pinl_6570__ls_6109); 
    _emal_53163__pinl_6571__ls_6110 = _alloc_( 1, 0, [:int]); 
    _pinl_6571__ls_6110 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_53163__pinl_6571__ls_6110); 
    _emal_53162__pinl_6566__ls_6099 = _alloc_( 1, 0, [:int]); 
    _pinl_6566__ls_6099 = _fill_( _idx_sel_( _ivesplit_24597, p), _emal_53162__pinl_6566__ls_6099); 
    _free_( _ivesplit_24597); 
    _emal_53161__pinl_6567__ls_6100 = _alloc_( 1, 0, [:int]); 
    _pinl_6567__ls_6100 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_53161__pinl_6567__ls_6100); 
    _emal_53160__dlirmov_51663__iveras_51415 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51663__iveras_51415 = _fill_( 0, _emal_53160__dlirmov_51663__iveras_51415); 
    _emal_53159__dlirmov_51664__iveras_51416 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51664__iveras_51416 = _fill_( 1, _emal_53159__dlirmov_51664__iveras_51416); 
    _emlr_55068_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55069_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55068_startr__SSA0_1); 
    _emlr_55066_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55067_numr = _fill_( _copy_( numr), _emlr_55066_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55064_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55510_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55511_val = _fill_( _isreused_( _emlr_55064_offsetsr, offsetsr), _emrb_55510_mem); 
    _emlr_55065_offsetsr = _MAIN::_dup_5304_BlockHoare__Cond_20__ReuseCond_24( _emrb_55511_val, _emlr_55064_offsetsr, offsetsr) ; 
    _pinl_6560_argmax__SSA0_1, _pinl_6561_max__SSA0_1, _pinl_6562_offsetsr__SSA0_1, _pinl_6563_numr__SSA0_1 = _MAIN::_dup_6573_BlockHoare__Loop_18( _dlirmov_51664__iveras_51416, _dlirmov_51663__iveras_51415, argmax, max, _emlr_55065_offsetsr, _emlr_55067_numr, _emlr_55069_startr__SSA0_1, _pinl_6571__ls_6110, _pinl_6570__ls_6109, _pinl_6567__ls_6100, _pinl_6566__ls_6099, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_6563_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_6562_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_6561_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_6560_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5304_BlockHoare__Cond_20__ReuseCond_24(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5304_BlockHoare__Cond_20__ReuseCond_24( bool _emrb_55506 { ,NN } , int[64] _emlr_55064_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5304_BlockHoare__Cond_20__ReuseCond_24 ::  ---
 */
{ 
  int[64] _emrb_55509 { , NN } ; 
  int[64] _dup_55508__emlr_55065_offsetsr { , NN } ; 
  int[64] _dup_55507__emlr_55065_offsetsr { , NN } ; 

  if (_emrb_55506) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55506, 1); 
    _dup_55507__emlr_55065_offsetsr = _fill_( _noop_( offsetsr), _emlr_55064_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55506, 1); 
    _dup_55508__emlr_55065_offsetsr = _fill_( _copy_( offsetsr), _emlr_55064_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55509 = ( _emrb_55506 ? _dup_55507__emlr_55065_offsetsr : _dup_55508__emlr_55065_offsetsr ); 
  return( _emrb_55509); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5300_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5300_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5300_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55504_val { , NN } ; 
  bool _emrb_55503_mem { , NN } ; 
  int{0} _emlr_55075_startl__SSA0_1 { , NN } ; 
  int _emlr_55074_startl__SSA0_1 { , NN } ; 
  int _emlr_55073_numl { , NN } ; 
  int _emlr_55072_numl { , NN } ; 
  int[64] _emlr_55071_offsetsl { , NN } ; 
  int[64] _emlr_55070_offsetsl { , NN } ; 
  int _emal_53174_startl__SSA0_1 { , NN } ; 
  int _emal_53173__ivesplit_24605 { , NN } ; 
  double _emal_53172__pinl_6556__ls_6129 { , NN } ; 
  double _emal_53171__pinl_6557__ls_6130 { , NN } ; 
  double _emal_53170__pinl_6552__ls_6119 { , NN } ; 
  double _emal_53169__pinl_6553__ls_6120 { , NN } ; 
  int _emal_53168__dlirmov_51661__iveras_51417 { , NN } ; 
  int _emal_53167__dlirmov_51662__iveras_51418 { , NN } ; 
  int _dlirmov_51662__iveras_51418 { , NN } ; 
  int _dlirmov_51661__iveras_51417 { , NN } ; 
  int{1} _ivesplit_24605 { , NN } ; 
  double _pinl_6557__ls_6130 { , NN } ; 
  double _pinl_6556__ls_6129 { , NN } ; 
  double _pinl_6553__ls_6120 { , NN } ; 
  double _pinl_6552__ls_6119 { , NN } ; 
  int _pinl_6549_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_6548_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_6547_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6546_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_53174_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_53174_startl__SSA0_1); 
    _emal_53173__ivesplit_24605 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24605 = _fill_( 1, _emal_53173__ivesplit_24605); 
    _emal_53172__pinl_6556__ls_6129 = _alloc_( 1, 0, [:int]); 
    _pinl_6556__ls_6129 = _fill_( _idx_sel_( _ivesplit_24605, q), _emal_53172__pinl_6556__ls_6129); 
    _emal_53171__pinl_6557__ls_6130 = _alloc_( 1, 0, [:int]); 
    _pinl_6557__ls_6130 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_53171__pinl_6557__ls_6130); 
    _emal_53170__pinl_6552__ls_6119 = _alloc_( 1, 0, [:int]); 
    _pinl_6552__ls_6119 = _fill_( _idx_sel_( _ivesplit_24605, p), _emal_53170__pinl_6552__ls_6119); 
    _free_( _ivesplit_24605); 
    _emal_53169__pinl_6553__ls_6120 = _alloc_( 1, 0, [:int]); 
    _pinl_6553__ls_6120 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_53169__pinl_6553__ls_6120); 
    _emal_53168__dlirmov_51661__iveras_51417 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51661__iveras_51417 = _fill_( 0, _emal_53168__dlirmov_51661__iveras_51417); 
    _emal_53167__dlirmov_51662__iveras_51418 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51662__iveras_51418 = _fill_( 1, _emal_53167__dlirmov_51662__iveras_51418); 
    _emlr_55074_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55075_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55074_startl__SSA0_1); 
    _emlr_55072_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55073_numl = _fill_( _copy_( numl), _emlr_55072_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55070_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55503_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55504_val = _fill_( _isreused_( _emlr_55070_offsetsl, offsetsl), _emrb_55503_mem); 
    _emlr_55071_offsetsl = _MAIN::_dup_5300_BlockHoare__Cond_23__ReuseCond_23( _emrb_55504_val, _emlr_55070_offsetsl, offsetsl) ; 
    _pinl_6546_argmax__SSA0_1, _pinl_6547_max__SSA0_1, _pinl_6548_offsetsl__SSA0_1, _pinl_6549_numl__SSA0_1 = _MAIN::_dup_6559_BlockHoare__Loop_21( _dlirmov_51662__iveras_51418, _dlirmov_51661__iveras_51417, argmax, max, _emlr_55071_offsetsl, _emlr_55073_numl, _emlr_55075_startl__SSA0_1, _pinl_6557__ls_6130, _pinl_6556__ls_6129, _pinl_6553__ls_6120, _pinl_6552__ls_6119, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_6549_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_6548_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_6547_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_6546_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5300_BlockHoare__Cond_23__ReuseCond_23(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5300_BlockHoare__Cond_23__ReuseCond_23( bool _emrb_55499 { ,NN } , int[64] _emlr_55070_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5300_BlockHoare__Cond_23__ReuseCond_23 ::  ---
 */
{ 
  int[64] _emrb_55502 { , NN } ; 
  int[64] _dup_55501__emlr_55071_offsetsl { , NN } ; 
  int[64] _dup_55500__emlr_55071_offsetsl { , NN } ; 

  if (_emrb_55499) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55499, 1); 
    _dup_55500__emlr_55071_offsetsl = _fill_( _noop_( offsetsl), _emlr_55070_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55499, 1); 
    _dup_55501__emlr_55071_offsetsl = _fill_( _copy_( offsetsl), _emlr_55070_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55502 = ( _emrb_55499 ? _dup_55500__emlr_55071_offsetsl : _dup_55501__emlr_55071_offsetsl ); 
  return( _emrb_55502); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5296_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5296_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5296_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5295_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
    _inc_rc_( l__SSA0_1, 1); 
  }
  else
  { 
    _inc_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5295_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5295_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5295_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_53181__ctz_7712 { , NN } ; 
  bool _emal_53180__pinl_3760__flat_197 { , NN } ; 
  int _emal_53179__ctz_7710 { , NN } ; 
  bool _emal_53178__pinl_4092__flat_197 { , NN } ; 
  int _emal_53177__ctz_7708 { , NN } ; 
  bool _emal_53176__pinl_4425__flat_196 { , NN } ; 
  bool _emal_53175__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7712 { , NN } ; 
  int _ctz_7710 { , NN } ; 
  int _ctz_7708 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_53181__ctz_7712 = _alloc_( 1, 0, [:int]); 
  _ctz_7712 = _fill_( _sub_SxS_( l, r), _emal_53181__ctz_7712); 
  _emal_53180__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7712, 0), _emal_53180__pinl_3760__flat_197); 
  _free_( _ctz_7712); 
  _hce_6 = _MAIN::_dup_5283_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5287_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_53179__ctz_7710 = _alloc_( 1, 0, [:int]); 
  _ctz_7710 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_53179__ctz_7710); 
  _emal_53178__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7710, 0), _emal_53178__pinl_4092__flat_197); 
  _free_( _ctz_7710); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5293_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_53177__ctz_7708 = _alloc_( 1, 0, [:int]); 
  _ctz_7708 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_53177__ctz_7708); 
  _emal_53176__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7708, 0), _emal_53176__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5294_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_53175__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7708, 0), _emal_53175__pinl_4645__flat_197); 
  _free_( _ctz_7708); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5295_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5294_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5294_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5294_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55775 { , NN } ; 
  double _emdr_55774 { , NN } ; 
  bool _emrb_55497_val { , NN } ; 
  bool _emrb_55496_mem { , NN } ; 
  int _emal_53229__iveras_51495 { , NN } ; 
  int _emal_53228__ivesli_48301 { , NN } ; 
  double _emal_53227__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_53226__iveras_51496 { , NN } ; 
  int _emal_53225__ivesli_48299 { , NN } ; 
  double _emal_53224__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_53223__pinl_4616__flat_1457 { , NN } ; 
  int _emal_53222__iveras_51497 { , NN } ; 
  int _emal_53221__ivesli_48297 { , NN } ; 
  double _emal_53220__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53219__iveras_51498 { , NN } ; 
  int _emal_53218__ivesli_48295 { , NN } ; 
  double _emal_53217__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53216__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_53215__uprf_7422 { , NN } ; 
  int _emal_53214__pinl_5868_z { , NN } ; 
  double[1000000,2] _emal_53208__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_53207__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_53206__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_53205__pinl_4548__flat_1465 { , NN } ; 
  double _emal_53204__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53203__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53202__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_53201__uprf_7419 { , NN } ; 
  int _emal_53200__pinl_5888_z { , NN } ; 
  double _emal_53196_val { , NN } ; 
  double _emal_53195_val { , NN } ; 
  double[1000000,2] _emal_53194__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_53193__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_53192__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_53191__pinl_4480__flat_1465 { , NN } ; 
  double _emal_53190__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53189__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53188__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_53184_val { , NN } ; 
  double _emal_53183_val { , NN } ; 
  double[1000000,2] _emal_53182__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51498 { , NN } ; 
  int _iveras_51497 { , NN } ; 
  int _iveras_51496 { , NN } ; 
  int _iveras_51495 { , NN } ; 
  int _ivesli_48301 { , NN } ; 
  int _ivesli_48299 { , NN } ; 
  int _ivesli_48297 { , NN } ; 
  int _ivesli_48295 { , NN } ; 
  int _wlidx_47889__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47888__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47887__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11247 { , NN } ; 
  int[2] _wlsb_11219 { , NN } ; 
  int _eat_10361 { , NN } ; 
  int _eat_10360 { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7422 { , NN } ; 
  int _uprf_7419 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5868_z { , NN } ; 
  int _pinl_5888_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_53229__iveras_51495 = _alloc_( 1, 0, [:int]); 
    _iveras_51495 = _fill_( 0, _emal_53229__iveras_51495); 
    _ivesli_48301 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51495), _iveras_51495); 
    _emal_53227__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48301, P), _emal_53227__pinl_4643__flat_149__SSA2_1); 
    _emal_53226__iveras_51496 = _alloc_( 1, 0, [:int]); 
    _iveras_51496 = _fill_( 0, _emal_53226__iveras_51496); 
    _ivesli_48299 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51496), _iveras_51496); 
    _emal_53224__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48299, P), _emal_53224__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_53222__iveras_51497 = _alloc_( 1, 0, [:int]); 
    _iveras_51497 = _fill_( 1, _emal_53222__iveras_51497); 
    _ivesli_48297 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51497), _iveras_51497); 
    _emal_53220__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48297, P), _emal_53220__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53219__iveras_51498 = _alloc_( 1, 0, [:int]); 
    _iveras_51498 = _fill_( 1, _emal_53219__iveras_51498); 
    _ivesli_48295 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51498), _iveras_51498); 
    _emal_53217__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48295, P), _emal_53217__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53215__uprf_7422 = _alloc_( 1, 0, [:int]); 
    _uprf_7422 = _fill_( _add_SxS_( 1, l), _emal_53215__uprf_7422); 
    _emal_53214__pinl_5868_z = _alloc_( 1, 0, [:int]); 
    _pinl_5868_z = _fill_( _max_SxS_( _uprf_7422, l), _emal_53214__pinl_5868_z); 
    _emal_53208__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47887__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55496_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55497_val = _fill_( _isreused_( _emal_53208__pinl_4435_P__SSA0_1, P), _emrb_55496_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5294_BlockHoare__Cond_1__ReuseCond_22( _emrb_55497_val, _pinl_4616__flat_1457, _pinl_5868_z, _uprf_7422, _pinl_4616__flat_1457__SSA3_2, _wlidx_47887__pinl_4435_P__SSA0_1, _emal_53208__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_53207__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48301, _pinl_4435_P__SSA0_1), _emal_53207__pinl_4575__flat_149__SSA2_1); 
    _emal_53206__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48299, _pinl_4435_P__SSA0_1), _emal_53206__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_53204__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48297, _pinl_4435_P__SSA0_1), _emal_53204__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53203__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48295, _pinl_4435_P__SSA0_1), _emal_53203__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53201__uprf_7419 = _alloc_( 1, 0, [:int]); 
    _uprf_7419 = _fill_( _add_SxS_( 1, r), _emal_53201__uprf_7419); 
    _emal_53200__pinl_5888_z = _alloc_( 1, 0, [:int]); 
    _pinl_5888_z = _fill_( _max_SxS_( _uprf_7419, r), _emal_53200__pinl_5888_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10360 = _alloc_( 1, 0, [:int]); 
    _wlidx_47888__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_11247=[_pinl_4513__eat_766, _eat_10360] (IDXS:_wlidx_47888__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53195_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_11247, _wlidx_47888__pinl_4437_P__SSA0_3); 
          } : _emal_53195_val ; ,
        op_1 =
          { 
            _emal_53196_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_11247, _wlidx_47888__pinl_4437_P__SSA0_3); 
          } : _emal_53196_val ; ,
        op_2 =
          { 
            _emdr_55774 = _noop_( _wlsb_11247); 
          } : _emdr_55774 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7419, 1 ]
         */
        (r => _uprf_7419), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7419, 2 ]
         */
        (r => _uprf_7419), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5888_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5888_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47888__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_5888_z); 
    _free_( _uprf_7419); 
    _free_( _eat_10360); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47888__pinl_4437_P__SSA0_3); 
    _emal_53193__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48301, _pinl_4437_P__SSA0_3), _emal_53193__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48301); 
    _emal_53192__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48299, _pinl_4437_P__SSA0_3), _emal_53192__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48299); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_53190__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48297, _pinl_4437_P__SSA0_3), _emal_53190__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48297); 
    _emal_53189__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48295, _pinl_4437_P__SSA0_3), _emal_53189__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48295); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10361 = _alloc_( 1, 0, [:int]); 
    _wlidx_47889__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_11219=[_pinl_4445__eat_766, _eat_10361] (IDXS:_wlidx_47889__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53183_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_11219, _wlidx_47889__pinl_4439_P__SSA0_5); 
          } : _emal_53183_val ; ,
        op_1 =
          { 
            _emal_53184_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_11219, _wlidx_47889__pinl_4439_P__SSA0_5); 
          } : _emal_53184_val ; ,
        op_2 =
          { 
            _emdr_55775 = _noop_( _wlsb_11219); 
          } : _emdr_55775 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7422, 1 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7422, 2 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5868_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5868_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47889__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_5868_z); 
    _free_( _uprf_7422); 
    _free_( _eat_10361); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47889__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5294_BlockHoare__Cond_1__ReuseCond_22(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5294_BlockHoare__Cond_1__ReuseCond_22( bool _emrb_55472 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_5868_z { ,NN } , int _uprf_7422 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _wlidx_47887__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_53208__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5294_BlockHoare__Cond_1__ReuseCond_22 ::  ---
 */
{ 
  double _emdr_55773 { , NN } ; 
  double[1000000,2] _emrb_55495 { , NN } ; 
  double _dup_55494__emal_53213_val { , NN } ; 
  double _dup_55493__pinl_5879__flat_28 { , NN } ; 
  double _dup_55492__emal_53211__dup_11281__pinl_5879__flat_28 { , NN } ; 
  int _dup_55491__ivesli_48293 { , NN } ; 
  int _dup_55490__emal_53212__ivesli_48293 { , NN } ; 
  double _dup_55489__emal_53210_val { , NN } ; 
  double _dup_55488__emal_53209_val { , NN } ; 
  double[1000000,2] _dup_55487__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55486__eat_10359 { , NN } ; 
  int _dup_55485__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55484__wlsb_11275 { , NN } ; 
  double _dup_55478__emal_53210_val { , NN } ; 
  double _dup_55477__emal_53209_val { , NN } ; 
  double[1000000,2] _dup_55476__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55475__eat_10359 { , NN } ; 
  int _dup_55474__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55473__wlsb_11275 { , NN } ; 

  if (_emrb_55472) 
  { 
    _dec_rc_( _emrb_55472, 1); 
    _dup_55474__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55475__eat_10359 = _alloc_( 1, 0, [:int]); 
    _dup_55476__pinl_4435_P__SSA0_1 = with2 (_dup_55473__wlsb_11275=[_dup_55474__pinl_4581__eat_766, _dup_55475__eat_10359] (IDXS:_wlidx_47887__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55477__emal_53209_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53208__pinl_4435_P__SSA0_1, _dup_55473__wlsb_11275, _wlidx_47887__pinl_4435_P__SSA0_1); 
          } : _dup_55477__emal_53209_val ; ,
        op_1 =
          { 
            _dup_55478__emal_53210_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53208__pinl_4435_P__SSA0_1, _dup_55473__wlsb_11275, _wlidx_47887__pinl_4435_P__SSA0_1); 
          } : _dup_55478__emal_53210_val ; ,
        op_2 =
          { 
            _emdr_55773 = _noop_( _dup_55473__wlsb_11275); 
          } : _emdr_55773 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7422, 1 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7422, 2 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5868_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5868_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53208__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47887__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55475__eat_10359); 
    _free_( _dup_55474__pinl_4581__eat_766); 
    _free_( _wlidx_47887__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55472, 1); 
    _dup_55485__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55486__eat_10359 = _alloc_( 1, 0, [:int]); 
    _dup_55487__pinl_4435_P__SSA0_1 = with2 (_dup_55484__wlsb_11275=[_dup_55485__pinl_4581__eat_766, _dup_55486__eat_10359] (IDXS:_wlidx_47887__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55488__emal_53209_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53208__pinl_4435_P__SSA0_1, _dup_55484__wlsb_11275, _wlidx_47887__pinl_4435_P__SSA0_1); 
          } : _dup_55488__emal_53209_val ; ,
        op_1 =
          { 
            _dup_55489__emal_53210_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53208__pinl_4435_P__SSA0_1, _dup_55484__wlsb_11275, _wlidx_47887__pinl_4435_P__SSA0_1); 
          } : _dup_55489__emal_53210_val ; ,
        op_2 =
          { 
            _dup_55490__emal_53212__ivesli_48293 = _alloc_( 1, 0, [:int]); 
            _dup_55491__ivesli_48293 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55485__pinl_4581__eat_766, _dup_55486__eat_10359), _dup_55490__emal_53212__ivesli_48293); 
            _dup_55492__emal_53211__dup_11281__pinl_5879__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55493__pinl_5879__flat_28 = _fill_( _idx_sel_( _dup_55491__ivesli_48293, P), _dup_55492__emal_53211__dup_11281__pinl_5879__flat_28); 
            _free_( _dup_55491__ivesli_48293); 
            _dup_55494__emal_53213_val = _wl_assign_( _dup_55493__pinl_5879__flat_28, _emal_53208__pinl_4435_P__SSA0_1, _dup_55484__wlsb_11275, _wlidx_47887__pinl_4435_P__SSA0_1); 
            _free_( _dup_55493__pinl_5879__flat_28); 
          } : _dup_55494__emal_53213_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7422, 1 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7422, 2 ]
         */
        (l => _uprf_7422), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5868_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5868_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53208__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47887__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55485__pinl_4581__eat_766); 
    _free_( _dup_55486__eat_10359); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47887__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55495 = ( _emrb_55472 ? _dup_55476__pinl_4435_P__SSA0_1 : _dup_55487__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55495); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5293_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5293_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5293_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_53231__ctz_7714 { , NN } ; 
  bool _emal_53230__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7714 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_53231__ctz_7714 = _alloc_( 1, 0, [:int]); 
    _ctz_7714 = _fill_( _sub_SxS_( l, r), _emal_53231__ctz_7714); 
    _emal_53230__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7714, 0), _emal_53230__pinl_4093__flat_197); 
    _free_( _ctz_7714); 
    _hce_4 = _MAIN::_dup_5288_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5292_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5292_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5292_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5292_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55077_r { , NN } ; 
  int _emlr_55076_r { , NN } ; 
  int _emal_53239__dlirmov_51097__wlsimp_7027 { , NN } ; 
  int _emal_53238__dlirmov_51099__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_53237__dlirmov_51102__pinl_4296__flat_149 { , NN } ; 
  double _emal_53236__dlirmov_51105__pinl_4271__flat_149 { , NN } ; 
  double _emal_53235__dlirmov_51108__pinl_4257__flat_149 { , NN } ; 
  double _emal_53234__dlirmov_51111__pinl_4244__flat_149 { , NN } ; 
  int _emal_53233__dlirmov_51659__iveras_51499 { , NN } ; 
  int _emal_53232__dlirmov_51660__iveras_51500 { , NN } ; 
  int _dlirmov_51660__iveras_51500 { , NN } ; 
  int _dlirmov_51659__iveras_51499 { , NN } ; 
  double _dlirmov_51111__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_51108__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_51105__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_51102__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_51099__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_51097__wlsimp_7027 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_53239__dlirmov_51097__wlsimp_7027 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51097__wlsimp_7027 = _fill_( 0, _emal_53239__dlirmov_51097__wlsimp_7027); 
    _emal_53238__dlirmov_51099__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51099__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_53238__dlirmov_51099__pinl_4214__eat_768__SSA3_1); 
    _emal_53237__dlirmov_51102__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51102__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_51097__wlsimp_7027, q), _emal_53237__dlirmov_51102__pinl_4296__flat_149); 
    _emal_53236__dlirmov_51105__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51105__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_51099__pinl_4214__eat_768__SSA3_1, p), _emal_53236__dlirmov_51105__pinl_4271__flat_149); 
    _emal_53235__dlirmov_51108__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51108__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_51099__pinl_4214__eat_768__SSA3_1, q), _emal_53235__dlirmov_51108__pinl_4257__flat_149); 
    _free_( _dlirmov_51099__pinl_4214__eat_768__SSA3_1); 
    _emal_53234__dlirmov_51111__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51111__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_51097__wlsimp_7027, p), _emal_53234__dlirmov_51111__pinl_4244__flat_149); 
    _free_( _dlirmov_51097__wlsimp_7027); 
    _emal_53233__dlirmov_51659__iveras_51499 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51659__iveras_51499 = _fill_( 0, _emal_53233__dlirmov_51659__iveras_51499); 
    _emal_53232__dlirmov_51660__iveras_51500 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51660__iveras_51500 = _fill_( 1, _emal_53232__dlirmov_51660__iveras_51500); 
    _emlr_55076_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55077_r = _fill_( _copy_( r), _emlr_55076_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5291_BlockHoare__Loop_3( _dlirmov_51660__iveras_51500, _dlirmov_51659__iveras_51499, _dlirmov_51111__pinl_4244__flat_149, _dlirmov_51108__pinl_4257__flat_149, _dlirmov_51105__pinl_4271__flat_149, _dlirmov_51102__pinl_4296__flat_149, argmax, max, q, p, _emlr_55077_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5291_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5291_BlockHoare__Loop_3( int _iveras_51500 { ,NN } , int _iveras_51499 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5291_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_53257__ivesli_48305 { , NN } ; 
  double _emal_53256__pinl_4213__flat_149 { , NN } ; 
  int _emal_53255__ivesli_48303 { , NN } ; 
  double _emal_53254__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53253__flat_129__SSA3_2 { , NN } ; 
  double _emal_53252__pinl_4284__flat_95 { , NN } ; 
  double _emal_53251__pinl_4259__flat_95 { , NN } ; 
  double _emal_53245__ctz_7718 { , NN } ; 
  bool _emal_53244__pinl_4312__flat_252 { , NN } ; 
  int _emal_53243__pinl_4315__flat_124 { , NN } ; 
  int _emal_53242__esd_8237 { , NN } ; 
  bool _emal_53240__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48305 { , NN } ; 
  int _ivesli_48303 { , NN } ; 
  int _esd_8237 { , NN } ; 
  double _ctz_7718 { , NN } ; 
  int _ctz_7716 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_53257__ivesli_48305 = _alloc_( 1, 0, [:int]); 
  _ivesli_48305 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51499), _emal_53257__ivesli_48305); 
  _emal_53256__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48305, P), _emal_53256__pinl_4213__flat_149); 
  _free_( _ivesli_48305); 
  _emal_53255__ivesli_48303 = _alloc_( 1, 0, [:int]); 
  _ivesli_48303 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51500), _emal_53255__ivesli_48303); 
  _emal_53254__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48303, P), _emal_53254__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48303); 
  _emal_53253__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_53253__flat_129__SSA3_2); 
  _emal_53252__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_53252__pinl_4284__flat_95); 
  _emal_53251__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_53251__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_53245__ctz_7718 = _alloc_( 1, 0, [:int]); 
  _ctz_7718 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_53245__ctz_7718); 
  _emal_53244__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7718, 0.0), _emal_53244__pinl_4312__flat_252); 
  _free_( _ctz_7718); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5289_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_53243__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_53243__pinl_4315__flat_124); 
  _emal_53242__esd_8237 = r; 
  _esd_8237 = _fill_( _sub_SxS_( 1, r), _emal_53242__esd_8237); 
  _ctz_7716 = _fill_( _add_SxS_( _esd_8237, l), _esd_8237); 
  _emal_53240__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7716, 0), _emal_53240__pinl_4316__flat_197); 
  _free_( _ctz_7716); 
  _hce_3 = _MAIN::_dup_5290_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5291_BlockHoare__Loop_3( _iveras_51500, _iveras_51499, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51499, 1); 
    _dec_rc_( _iveras_51500, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5290_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5290_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5290_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_53278__hce_3__SSA0_1 { , NN } ; 
  int _emal_53277__wlsimp_7030 { , NN } ; 
  int _emal_53276__iveras_51501 { , NN } ; 
  int _emal_53275__ivesli_48309 { , NN } ; 
  double _emal_53274__pinl_4328__flat_149 { , NN } ; 
  int _emal_53273__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_53272__iveras_51502 { , NN } ; 
  int _emal_53271__ivesli_48307 { , NN } ; 
  double _emal_53270__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_53269__pinl_4411__flat_149 { , NN } ; 
  double _emal_53268__pinl_4399__flat_95 { , NN } ; 
  double _emal_53267__pinl_4386__flat_149 { , NN } ; 
  double _emal_53266__pinl_4374__flat_95 { , NN } ; 
  double _emal_53265__pinl_4373__flat_96 { , NN } ; 
  double _emal_53264__pinl_4372__flat_149 { , NN } ; 
  double _emal_53263__pinl_4360__flat_95 { , NN } ; 
  double _emal_53262__pinl_4359__flat_149 { , NN } ; 
  double _emal_53261__pinl_4347__flat_95 { , NN } ; 
  double _emal_53260__pinl_4346__flat_96 { , NN } ; 
  double _emal_53259__pinl_4345__flat_95 { , NN } ; 
  bool _emal_53258__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51502 { , NN } ; 
  int _iveras_51501 { , NN } ; 
  int _ivesli_48309 { , NN } ; 
  int _ivesli_48307 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7030 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_53277__wlsimp_7030 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7030 = _fill_( 0, _emal_53277__wlsimp_7030); 
    _emal_53276__iveras_51501 = _alloc_( 1, 0, [:int]); 
    _iveras_51501 = _fill_( 0, _emal_53276__iveras_51501); 
    _ivesli_48309 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51501), _iveras_51501); 
    _emal_53274__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48309, P), _emal_53274__pinl_4328__flat_149); 
    _free_( _ivesli_48309); 
    _emal_53273__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_53273__pinl_4329__eat_768__SSA3_1); 
    _emal_53272__iveras_51502 = _alloc_( 1, 0, [:int]); 
    _iveras_51502 = _fill_( 1, _emal_53272__iveras_51502); 
    _ivesli_48307 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51502), _iveras_51502); 
    _emal_53270__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48307, P), _emal_53270__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48307); 
    _emal_53269__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_7030, q), _emal_53269__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_53267__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_53267__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_53264__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_53264__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_53262__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_7030, p), _emal_53262__pinl_4359__flat_149); 
    _free_( _wlsimp_7030); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_53258__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_53258__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_53278__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_53278__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5289_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5289_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5289_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5288_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5288_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5288_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_53299__hce_4__SSA0_1 { , NN } ; 
  int _emal_53298__wlsimp_7033 { , NN } ; 
  int _emal_53297__iveras_51503 { , NN } ; 
  int _emal_53296__ivesli_48313 { , NN } ; 
  double _emal_53295__pinl_4105__flat_149 { , NN } ; 
  int _emal_53294__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_53293__iveras_51504 { , NN } ; 
  int _emal_53292__ivesli_48311 { , NN } ; 
  double _emal_53291__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_53290__pinl_4188__flat_149 { , NN } ; 
  double _emal_53289__pinl_4176__flat_95 { , NN } ; 
  double _emal_53288__pinl_4163__flat_149 { , NN } ; 
  double _emal_53287__pinl_4151__flat_95 { , NN } ; 
  double _emal_53286__pinl_4150__flat_96 { , NN } ; 
  double _emal_53285__pinl_4149__flat_149 { , NN } ; 
  double _emal_53284__pinl_4137__flat_95 { , NN } ; 
  double _emal_53283__pinl_4136__flat_149 { , NN } ; 
  double _emal_53282__pinl_4124__flat_95 { , NN } ; 
  double _emal_53281__pinl_4123__flat_96 { , NN } ; 
  double _emal_53280__pinl_4122__flat_95 { , NN } ; 
  bool _emal_53279__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51504 { , NN } ; 
  int _iveras_51503 { , NN } ; 
  int _ivesli_48313 { , NN } ; 
  int _ivesli_48311 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7033 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_53298__wlsimp_7033 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7033 = _fill_( 0, _emal_53298__wlsimp_7033); 
    _emal_53297__iveras_51503 = _alloc_( 1, 0, [:int]); 
    _iveras_51503 = _fill_( 0, _emal_53297__iveras_51503); 
    _ivesli_48313 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51503), _iveras_51503); 
    _emal_53295__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48313, P), _emal_53295__pinl_4105__flat_149); 
    _free_( _ivesli_48313); 
    _emal_53294__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_53294__pinl_4106__eat_768__SSA3_1); 
    _emal_53293__iveras_51504 = _alloc_( 1, 0, [:int]); 
    _iveras_51504 = _fill_( 1, _emal_53293__iveras_51504); 
    _ivesli_48311 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51504), _iveras_51504); 
    _emal_53291__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48311, P), _emal_53291__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48311); 
    _emal_53290__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_7033, q), _emal_53290__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_53288__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_53288__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_53285__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_53285__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_53283__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_7033, p), _emal_53283__pinl_4136__flat_149); 
    _free_( _wlsimp_7033); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_53279__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_53279__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_53299__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_53299__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5287_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5287_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5287_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55079_l { , NN } ; 
  int _emlr_55078_l { , NN } ; 
  int _emal_53307__dlirmov_51081__wlsimp_7036 { , NN } ; 
  int _emal_53306__dlirmov_51083__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_53305__dlirmov_51086__pinl_3963__flat_149 { , NN } ; 
  double _emal_53304__dlirmov_51089__pinl_3938__flat_149 { , NN } ; 
  double _emal_53303__dlirmov_51092__pinl_3924__flat_149 { , NN } ; 
  double _emal_53302__dlirmov_51095__pinl_3911__flat_149 { , NN } ; 
  int _emal_53301__dlirmov_51657__iveras_51505 { , NN } ; 
  int _emal_53300__dlirmov_51658__iveras_51506 { , NN } ; 
  int _dlirmov_51658__iveras_51506 { , NN } ; 
  int _dlirmov_51657__iveras_51505 { , NN } ; 
  double _dlirmov_51095__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_51092__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_51089__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_51086__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_51083__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_51081__wlsimp_7036 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_53307__dlirmov_51081__wlsimp_7036 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51081__wlsimp_7036 = _fill_( 0, _emal_53307__dlirmov_51081__wlsimp_7036); 
    _emal_53306__dlirmov_51083__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51083__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_53306__dlirmov_51083__pinl_3881__eat_768__SSA3_1); 
    _emal_53305__dlirmov_51086__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51086__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_51081__wlsimp_7036, q), _emal_53305__dlirmov_51086__pinl_3963__flat_149); 
    _emal_53304__dlirmov_51089__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51089__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_51083__pinl_3881__eat_768__SSA3_1, p), _emal_53304__dlirmov_51089__pinl_3938__flat_149); 
    _emal_53303__dlirmov_51092__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51092__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_51083__pinl_3881__eat_768__SSA3_1, q), _emal_53303__dlirmov_51092__pinl_3924__flat_149); 
    _free_( _dlirmov_51083__pinl_3881__eat_768__SSA3_1); 
    _emal_53302__dlirmov_51095__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51095__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_51081__wlsimp_7036, p), _emal_53302__dlirmov_51095__pinl_3911__flat_149); 
    _free_( _dlirmov_51081__wlsimp_7036); 
    _emal_53301__dlirmov_51657__iveras_51505 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51657__iveras_51505 = _fill_( 0, _emal_53301__dlirmov_51657__iveras_51505); 
    _emal_53300__dlirmov_51658__iveras_51506 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51658__iveras_51506 = _fill_( 1, _emal_53300__dlirmov_51658__iveras_51506); 
    _emlr_55078_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55079_l = _fill_( _copy_( l), _emlr_55078_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5286_BlockHoare__Loop_8( _dlirmov_51658__iveras_51506, _dlirmov_51657__iveras_51505, _dlirmov_51095__pinl_3911__flat_149, _dlirmov_51092__pinl_3924__flat_149, _dlirmov_51089__pinl_3938__flat_149, _dlirmov_51086__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55079_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5286_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5286_BlockHoare__Loop_8( int _iveras_51506 { ,NN } , int _iveras_51505 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5286_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_53324__ivesli_48317 { , NN } ; 
  double _emal_53323__pinl_3880__flat_149 { , NN } ; 
  int _emal_53322__ivesli_48315 { , NN } ; 
  double _emal_53321__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53320__flat_117__SSA3_2 { , NN } ; 
  double _emal_53319__pinl_3951__flat_95 { , NN } ; 
  double _emal_53318__pinl_3926__flat_95 { , NN } ; 
  double _emal_53312__ctz_7722 { , NN } ; 
  bool _emal_53311__pinl_3979__flat_252 { , NN } ; 
  int _emal_53310__pinl_3982__flat_122 { , NN } ; 
  int _emal_53309__ctz_7720 { , NN } ; 
  bool _emal_53308__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48317 { , NN } ; 
  int _ivesli_48315 { , NN } ; 
  double _ctz_7722 { , NN } ; 
  int _ctz_7720 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_53324__ivesli_48317 = _alloc_( 1, 0, [:int]); 
  _ivesli_48317 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51505), _emal_53324__ivesli_48317); 
  _emal_53323__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48317, P), _emal_53323__pinl_3880__flat_149); 
  _free_( _ivesli_48317); 
  _emal_53322__ivesli_48315 = _alloc_( 1, 0, [:int]); 
  _ivesli_48315 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51506), _emal_53322__ivesli_48315); 
  _emal_53321__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48315, P), _emal_53321__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48315); 
  _emal_53320__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_53320__flat_117__SSA3_2); 
  _emal_53319__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_53319__pinl_3951__flat_95); 
  _emal_53318__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_53318__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_53312__ctz_7722 = _alloc_( 1, 0, [:int]); 
  _ctz_7722 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_53312__ctz_7722); 
  _emal_53311__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7722, 0.0), _emal_53311__pinl_3979__flat_252); 
  _free_( _ctz_7722); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5284_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_53310__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_53310__pinl_3982__flat_122); 
  _emal_53309__ctz_7720 = _alloc_( 1, 0, [:int]); 
  _ctz_7720 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_53309__ctz_7720); 
  _emal_53308__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7720, 0), _emal_53308__pinl_3983__flat_197); 
  _free_( _ctz_7720); 
  _hce_5 = _MAIN::_dup_5285_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5286_BlockHoare__Loop_8( _iveras_51506, _iveras_51505, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51505, 1); 
    _dec_rc_( _iveras_51506, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5285_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5285_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5285_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_53345__hce_5__SSA0_1 { , NN } ; 
  int _emal_53344__wlsimp_7039 { , NN } ; 
  int _emal_53343__iveras_51507 { , NN } ; 
  int _emal_53342__ivesli_48321 { , NN } ; 
  double _emal_53341__pinl_3995__flat_149 { , NN } ; 
  int _emal_53340__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_53339__iveras_51508 { , NN } ; 
  int _emal_53338__ivesli_48319 { , NN } ; 
  double _emal_53337__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_53336__pinl_4078__flat_149 { , NN } ; 
  double _emal_53335__pinl_4066__flat_95 { , NN } ; 
  double _emal_53334__pinl_4053__flat_149 { , NN } ; 
  double _emal_53333__pinl_4041__flat_95 { , NN } ; 
  double _emal_53332__pinl_4040__flat_96 { , NN } ; 
  double _emal_53331__pinl_4039__flat_149 { , NN } ; 
  double _emal_53330__pinl_4027__flat_95 { , NN } ; 
  double _emal_53329__pinl_4026__flat_149 { , NN } ; 
  double _emal_53328__pinl_4014__flat_95 { , NN } ; 
  double _emal_53327__pinl_4013__flat_96 { , NN } ; 
  double _emal_53326__pinl_4012__flat_95 { , NN } ; 
  bool _emal_53325__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51508 { , NN } ; 
  int _iveras_51507 { , NN } ; 
  int _ivesli_48321 { , NN } ; 
  int _ivesli_48319 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7039 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_53344__wlsimp_7039 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7039 = _fill_( 0, _emal_53344__wlsimp_7039); 
    _emal_53343__iveras_51507 = _alloc_( 1, 0, [:int]); 
    _iveras_51507 = _fill_( 0, _emal_53343__iveras_51507); 
    _ivesli_48321 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51507), _iveras_51507); 
    _emal_53341__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48321, P), _emal_53341__pinl_3995__flat_149); 
    _free_( _ivesli_48321); 
    _emal_53340__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_53340__pinl_3996__eat_768__SSA3_1); 
    _emal_53339__iveras_51508 = _alloc_( 1, 0, [:int]); 
    _iveras_51508 = _fill_( 1, _emal_53339__iveras_51508); 
    _ivesli_48319 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51508), _iveras_51508); 
    _emal_53337__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48319, P), _emal_53337__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48319); 
    _emal_53336__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_7039, q), _emal_53336__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_53334__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_53334__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_53331__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_53331__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_53329__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_7039, p), _emal_53329__pinl_4026__flat_149); 
    _free_( _wlsimp_7039); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_53325__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_53325__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_53345__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_53345__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5284_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5284_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5284_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5283_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5283_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5283_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_53366__hce_6__SSA0_1 { , NN } ; 
  int _emal_53365__wlsimp_7042 { , NN } ; 
  int _emal_53364__iveras_51509 { , NN } ; 
  int _emal_53363__ivesli_48325 { , NN } ; 
  double _emal_53362__pinl_3772__flat_149 { , NN } ; 
  int _emal_53361__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_53360__iveras_51510 { , NN } ; 
  int _emal_53359__ivesli_48323 { , NN } ; 
  double _emal_53358__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_53357__pinl_3855__flat_149 { , NN } ; 
  double _emal_53356__pinl_3843__flat_95 { , NN } ; 
  double _emal_53355__pinl_3830__flat_149 { , NN } ; 
  double _emal_53354__pinl_3818__flat_95 { , NN } ; 
  double _emal_53353__pinl_3817__flat_96 { , NN } ; 
  double _emal_53352__pinl_3816__flat_149 { , NN } ; 
  double _emal_53351__pinl_3804__flat_95 { , NN } ; 
  double _emal_53350__pinl_3803__flat_149 { , NN } ; 
  double _emal_53349__pinl_3791__flat_95 { , NN } ; 
  double _emal_53348__pinl_3790__flat_96 { , NN } ; 
  double _emal_53347__pinl_3789__flat_95 { , NN } ; 
  bool _emal_53346__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51510 { , NN } ; 
  int _iveras_51509 { , NN } ; 
  int _ivesli_48325 { , NN } ; 
  int _ivesli_48323 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7042 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_53365__wlsimp_7042 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7042 = _fill_( 0, _emal_53365__wlsimp_7042); 
    _emal_53364__iveras_51509 = _alloc_( 1, 0, [:int]); 
    _iveras_51509 = _fill_( 0, _emal_53364__iveras_51509); 
    _ivesli_48325 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51509), _iveras_51509); 
    _emal_53362__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48325, P), _emal_53362__pinl_3772__flat_149); 
    _free_( _ivesli_48325); 
    _emal_53361__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_53361__pinl_3773__eat_768__SSA3_1); 
    _emal_53360__iveras_51510 = _alloc_( 1, 0, [:int]); 
    _iveras_51510 = _fill_( 1, _emal_53360__iveras_51510); 
    _ivesli_48323 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51510), _iveras_51510); 
    _emal_53358__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48323, P), _emal_53358__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48323); 
    _emal_53357__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_7042, q), _emal_53357__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_53355__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_53355__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_53352__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_53352__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_53350__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_7042, p), _emal_53350__pinl_3803__flat_149); 
    _free_( _wlsimp_7042); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_53346__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_53346__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_53366__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_53366__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5282_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5282_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5282_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_53367__dlirmov_51078__flat_65 { , NN } ; 
  int{0} _dlirmov_51078__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _inc_rc_( numr, 1); 
    _inc_rc_( numl, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_59); 
    _emal_53367__dlirmov_51078__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51078__flat_65 = _fill_( 0, _emal_53367__dlirmov_51078__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5281_BlockHoare__Loop_24( _dlirmov_51078__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5281_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5281_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5281_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_53386__esd_29664 { , NN } ; 
  bool _emal_53385__pinl_3238__flat_194 { , NN } ; 
  int _emal_53384__esd_29663 { , NN } ; 
  bool _emal_53383__pinl_3360__flat_194 { , NN } ; 
  int _emal_53382__ctz_7728 { , NN } ; 
  bool _emal_53381__pinl_3482__flat_196 { , NN } ; 
  int _emal_53380__esd_8282 { , NN } ; 
  bool _emal_53379__pinl_3483__flat_196 { , NN } ; 
  int _emal_53378__pinl_3748__flat_41 { , NN } ; 
  int _emal_53377__pinl_3749__flat_41 { , NN } ; 
  int _emal_53376__pinl_3750__flat_40 { , NN } ; 
  int _emal_53375__pinl_3751__flat_40 { , NN } ; 
  int _emal_53374__esd_29659 { , NN } ; 
  bool _emal_53373__pinl_3752__flat_194 { , NN } ; 
  int _emal_53372__esd_29658 { , NN } ; 
  bool _emal_53371__pinl_3754__flat_194 { , NN } ; 
  int _emal_53370__pinl_3757__flat_41 { , NN } ; 
  bool _emal_53368__pinl_3758__flat_198 { , NN } ; 
  int _esd_29664 { , NN } ; 
  int _esd_29663 { , NN } ; 
  int _esd_29659 { , NN } ; 
  int _esd_29658 { , NN } ; 
  int _esd_8282 { , NN } ; 
  int _ctz_7728 { , NN } ; 
  int _ctz_7724 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_53386__esd_29664 = _alloc_( 1, 0, [:int]); 
  _esd_29664 = _fill_( _neg_S_( numl), _emal_53386__esd_29664); 
  _emal_53385__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29664, 0), _emal_53385__pinl_3238__flat_194); 
  _free_( _esd_29664); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5271_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_53384__esd_29663 = _alloc_( 1, 0, [:int]); 
  _esd_29663 = _fill_( _neg_S_( numr), _emal_53384__esd_29663); 
  _emal_53383__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29663, 0), _emal_53383__pinl_3360__flat_194); 
  _free_( _esd_29663); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5275_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_53382__ctz_7728 = _alloc_( 1, 0, [:int]); 
  _ctz_7728 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_53382__ctz_7728); 
  _emal_53381__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7728, 0), _emal_53381__pinl_3482__flat_196); 
  _free_( _ctz_7728); 
  _hce_7 = _MAIN::_dup_5276_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_53380__esd_8282 = _alloc_( 1, 0, [:int]); 
  _esd_8282 = _fill_( _neg_S_( _hce_7), _emal_53380__esd_8282); 
  _emal_53379__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_8282, 0), _emal_53379__pinl_3483__flat_196); 
  _free_( _esd_8282); 
  P__SSA0_1 = _MAIN::_dup_5278_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_53378__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_53378__pinl_3748__flat_41); 
  _emal_53377__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_53377__pinl_3749__flat_41); 
  _emal_53376__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_53376__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_53375__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_53375__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_53374__esd_29659 = _alloc_( 1, 0, [:int]); 
  _esd_29659 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_53374__esd_29659); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_53373__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29659, 0), _emal_53373__pinl_3752__flat_194); 
  _free_( _esd_29659); 
  l__SSA0_1 = _MAIN::_dup_5279_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_53372__esd_29658 = _alloc_( 1, 0, [:int]); 
  _esd_29658 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_53372__esd_29658); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_53371__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29658, 0), _emal_53371__pinl_3754__flat_194); 
  _free_( _esd_29658); 
  r__SSA0_1 = _MAIN::_dup_5280_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_53370__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_53370__pinl_3757__flat_41); 
  _ctz_7724 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_53368__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7724, 0), _emal_53368__pinl_3758__flat_198); 
  _free_( _ctz_7724); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5281_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5280_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5280_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5280_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_53387__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_53387__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_53387__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5279_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5279_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5279_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_53388__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_53388__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_53388__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5278_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5278_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5278_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55470_val { , NN } ; 
  bool _emrb_55469_mem { , NN } ; 
  double[1000000,2] _emlr_55083_P { , NN } ; 
  double[1000000,2] _emlr_55082_P { , NN } ; 
  int{0} _emlr_55081_j { , NN } ; 
  int _emlr_55080_j { , NN } ; 
  int _emal_53392__dlirmov_51653__iveras_51511 { , NN } ; 
  int _emal_53391__dlirmov_51654__iveras_51512 { , NN } ; 
  int _emal_53390__dlirmov_51655__iveras_51513 { , NN } ; 
  int _emal_53389__dlirmov_51656__iveras_51514 { , NN } ; 
  int _dlirmov_51656__iveras_51514 { , NN } ; 
  int _dlirmov_51655__iveras_51513 { , NN } ; 
  int _dlirmov_51654__iveras_51512 { , NN } ; 
  int _dlirmov_51653__iveras_51511 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_53392__dlirmov_51653__iveras_51511 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51653__iveras_51511 = _fill_( 0, _emal_53392__dlirmov_51653__iveras_51511); 
    _emal_53391__dlirmov_51654__iveras_51512 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51654__iveras_51512 = _fill_( 0, _emal_53391__dlirmov_51654__iveras_51512); 
    _emal_53390__dlirmov_51655__iveras_51513 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51655__iveras_51513 = _fill_( 1, _emal_53390__dlirmov_51655__iveras_51513); 
    _emal_53389__dlirmov_51656__iveras_51514 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51656__iveras_51514 = _fill_( 1, _emal_53389__dlirmov_51656__iveras_51514); 
    _emlr_55082_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55469_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55470_val = _fill_( _isreused_( _emlr_55082_P, P), _emrb_55469_mem); 
    _emlr_55083_P = _MAIN::_dup_5278_BlockHoare__Cond_16__ReuseCond_21( _emrb_55470_val, _emlr_55082_P, P) ; 
    _emlr_55080_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55081_j = _fill_( _copy_( j), _emlr_55080_j); 
    P__SSA0_1 = _MAIN::_dup_5277_BlockHoare__Loop_15( _dlirmov_51656__iveras_51514, _dlirmov_51655__iveras_51513, _dlirmov_51654__iveras_51512, _dlirmov_51653__iveras_51511, offsetsl, offsetsr, startl, startr, num, _emlr_55081_j, r, l, _emlr_55083_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5278_BlockHoare__Cond_16__ReuseCond_21(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5278_BlockHoare__Cond_16__ReuseCond_21( bool _emrb_55465 { ,NN } , double[1000000,2] _emlr_55082_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5278_BlockHoare__Cond_16__ReuseCond_21 ::  ---
 */
{ 
  double[1000000,2] _emrb_55468 { , NN } ; 
  double[1000000,2] _dup_55467__emlr_55083_P { , NN } ; 
  double[1000000,2] _dup_55466__emlr_55083_P { , NN } ; 

  if (_emrb_55465) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55465, 1); 
    _dup_55466__emlr_55083_P = _fill_( _noop_( P), _emlr_55082_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55465, 1); 
    _dup_55467__emlr_55083_P = _fill_( _copy_( P), _emlr_55082_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55468 = ( _emrb_55465 ? _dup_55466__emlr_55083_P : _dup_55467__emlr_55083_P ); 
  return( _emrb_55468); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5277_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5277_BlockHoare__Loop_15( int _iveras_51514 { ,NN } , int _iveras_51513 { ,NN } , int _iveras_51512 { ,NN } , int _iveras_51511 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5277_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55778 { , NN } ; 
  double _emdr_55777 { , NN } ; 
  double _emdr_55776 { , NN } ; 
  int _emal_53448__ivesli_48346 { , NN } ; 
  int _emal_53447__pinl_3507__flat_68 { , NN } ; 
  int _emal_53446__pinl_3510__flat_41 { , NN } ; 
  int _emal_53445__ivesli_48343 { , NN } ; 
  int _emal_53444__pinl_3522__flat_68 { , NN } ; 
  int _emal_53443__pinl_3525__flat_40 { , NN } ; 
  int _emal_53440__ivesli_48342 { , NN } ; 
  double _emal_53439__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_53437__ivesli_48338 { , NN } ; 
  double _emal_53436__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_53433__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53431__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53429__uprf_7428 { , NN } ; 
  int _emal_53428__pinl_5808_z { , NN } ; 
  double _emal_53424_val { , NN } ; 
  double _emal_53423_val { , NN } ; 
  double[1000000,2] _emal_53422__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_53421__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_53420__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_53418__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53417__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53415__uprf_7425 { , NN } ; 
  int _emal_53414__pinl_5828_z { , NN } ; 
  double _emal_53410_val { , NN } ; 
  double _emal_53409_val { , NN } ; 
  double _emal_53407__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_53406__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_53404__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53403__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53398_val { , NN } ; 
  double _emal_53397_val { , NN } ; 
  int _emal_53395__pinl_3746__flat_122 { , NN } ; 
  int _emal_53394__ctz_7730 { , NN } ; 
  bool _emal_53393__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48346 { , NN } ; 
  int _ivesli_48343 { , NN } ; 
  int _ivesli_48342 { , NN } ; 
  int _ivesli_48340 { , NN } ; 
  int _ivesli_48339 { , NN } ; 
  int _ivesli_48338 { , NN } ; 
  int _ivesli_48336 { , NN } ; 
  int _ivesli_48335 { , NN } ; 
  int _ivesli_48331 { , NN } ; 
  int _wlidx_47892__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47891__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47890__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11359 { , NN } ; 
  int[2] _wlsb_11331 { , NN } ; 
  int[2] _wlsb_11303 { , NN } ; 
  int _eat_10358 { , NN } ; 
  int _eat_10357 { , NN } ; 
  int _eat_10356 { , NN } ; 
  int _ctz_7730 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7428 { , NN } ; 
  int _uprf_7425 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5808_z { , NN } ; 
  int _pinl_5828_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_53448__ivesli_48346 = _alloc_( 1, 0, [:int]); 
  _ivesli_48346 = _fill_( _add_SxS_( startr, j), _emal_53448__ivesli_48346); 
  _emal_53447__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48346, offsetsr), _emal_53447__pinl_3507__flat_68); 
  _free_( _ivesli_48346); 
  _emal_53446__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_53446__pinl_3510__flat_41); 
  _emal_53445__ivesli_48343 = _alloc_( 1, 0, [:int]); 
  _ivesli_48343 = _fill_( _add_SxS_( startl, j), _emal_53445__ivesli_48343); 
  _emal_53444__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48343, offsetsl), _emal_53444__pinl_3522__flat_68); 
  _free_( _ivesli_48343); 
  _emal_53443__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_53443__pinl_3525__flat_40); 
  _ivesli_48339 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48340 = _fill_( _neg_S_( _ivesli_48339), _ivesli_48339); 
  _emal_53440__ivesli_48342 = _alloc_( 1, 0, [:int]); 
  _ivesli_48342 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48340, _iveras_51511), _emal_53440__ivesli_48342); 
  _emal_53439__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48342, P), _emal_53439__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48336 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_53437__ivesli_48338 = _alloc_( 1, 0, [:int]); 
  _ivesli_48338 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48336, _iveras_51512), _emal_53437__ivesli_48338); 
  _emal_53436__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48338, P), _emal_53436__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48335 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48340, _iveras_51513), _ivesli_48340); 
  _emal_53433__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48335, P), _emal_53433__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48331 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48336, _iveras_51514), _ivesli_48336); 
  _emal_53431__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48331, P), _emal_53431__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_53429__uprf_7428 = _alloc_( 1, 0, [:int]); 
  _uprf_7428 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_53429__uprf_7428); 
  _emal_53428__pinl_5808_z = _alloc_( 1, 0, [:int]); 
  _pinl_5808_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7428), _emal_53428__pinl_5808_z); 
  _emal_53422__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10356 = _alloc_( 1, 0, [:int]); 
  _wlidx_47890__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_11359=[_pinl_3681__eat_766, _eat_10356] (IDXS:_wlidx_47890__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53423_val = _wl_assign_( _pinl_3716__flat_1457, _emal_53422__pinl_3535_P__SSA0_1, _wlsb_11359, _wlidx_47890__pinl_3535_P__SSA0_1); 
        } : _emal_53423_val ; ,
      op_1 =
        { 
          _emal_53424_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_53422__pinl_3535_P__SSA0_1, _wlsb_11359, _wlidx_47890__pinl_3535_P__SSA0_1); 
        } : _emal_53424_val ; ,
      op_2 =
        { 
          _emdr_55776 = _noop_( _wlsb_11359); 
        } : _emdr_55776 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7428, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7428), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7428, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7428), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5808_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5808_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_53422__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47890__pinl_3535_P__SSA0_1)); 
  _free_( _eat_10356); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47890__pinl_3535_P__SSA0_1); 
  _emal_53421__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48342, _pinl_3535_P__SSA0_1), _emal_53421__pinl_3675__flat_149__SSA2_1); 
  _emal_53420__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48338, _pinl_3535_P__SSA0_1), _emal_53420__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_53418__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48335, _pinl_3535_P__SSA0_1), _emal_53418__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53417__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48331, _pinl_3535_P__SSA0_1), _emal_53417__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53415__uprf_7425 = _alloc_( 1, 0, [:int]); 
  _uprf_7425 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_53415__uprf_7425); 
  _emal_53414__pinl_5828_z = _alloc_( 1, 0, [:int]); 
  _pinl_5828_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7425), _emal_53414__pinl_5828_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10357 = _alloc_( 1, 0, [:int]); 
  _wlidx_47891__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_11331=[_pinl_3613__eat_766, _eat_10357] (IDXS:_wlidx_47891__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53409_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_11331, _wlidx_47891__pinl_3537_P__SSA0_3); 
        } : _emal_53409_val ; ,
      op_1 =
        { 
          _emal_53410_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_11331, _wlidx_47891__pinl_3537_P__SSA0_3); 
        } : _emal_53410_val ; ,
      op_2 =
        { 
          _emdr_55777 = _noop_( _wlsb_11331); 
        } : _emdr_55777 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7425, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7425), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7425, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7425), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5828_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5828_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47891__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_5828_z); 
  _free_( _uprf_7425); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_10357); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47891__pinl_3537_P__SSA0_3); 
  _emal_53407__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48342, _pinl_3537_P__SSA0_3), _emal_53407__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48342); 
  _emal_53406__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48338, _pinl_3537_P__SSA0_3), _emal_53406__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48338); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_53404__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48335, _pinl_3537_P__SSA0_3), _emal_53404__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48335); 
  _emal_53403__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48331, _pinl_3537_P__SSA0_3), _emal_53403__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48331); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10358 = _alloc_( 1, 0, [:int]); 
  _wlidx_47892__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_11303=[_pinl_3545__eat_766, _eat_10358] (IDXS:_wlidx_47892__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53397_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_11303, _wlidx_47892__pinl_3539_P__SSA0_5); 
        } : _emal_53397_val ; ,
      op_1 =
        { 
          _emal_53398_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_11303, _wlidx_47892__pinl_3539_P__SSA0_5); 
        } : _emal_53398_val ; ,
      op_2 =
        { 
          _emdr_55778 = _noop_( _wlsb_11303); 
        } : _emdr_55778 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7428, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7428), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7428, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7428), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5808_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5808_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47892__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_5808_z); 
  _free_( _uprf_7428); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_10358); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47892__pinl_3539_P__SSA0_5); 
  _emal_53395__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_53395__pinl_3746__flat_122); 
  _emal_53394__ctz_7730 = _alloc_( 1, 0, [:int]); 
  _ctz_7730 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_53394__ctz_7730); 
  _emal_53393__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7730, 0), _emal_53393__pinl_3747__flat_196); 
  _free_( _ctz_7730); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5277_BlockHoare__Loop_15( _iveras_51514, _iveras_51513, _iveras_51512, _iveras_51511, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51511, 1); 
    _dec_rc_( _iveras_51512, 1); 
    _dec_rc_( _iveras_51513, 1); 
    _dec_rc_( _iveras_51514, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5276_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5276_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5276_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5275_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5275_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5275_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55463_val { , NN } ; 
  bool _emrb_55462_mem { , NN } ; 
  int{0} _emlr_55089_startr__SSA0_1 { , NN } ; 
  int _emlr_55088_startr__SSA0_1 { , NN } ; 
  int _emlr_55087_numr { , NN } ; 
  int _emlr_55086_numr { , NN } ; 
  int[64] _emlr_55085_offsetsr { , NN } ; 
  int[64] _emlr_55084_offsetsr { , NN } ; 
  int _emal_53456_startr__SSA0_1 { , NN } ; 
  int _emal_53455__ivesplit_24773 { , NN } ; 
  double _emal_53454__pinl_6542__ls_6149 { , NN } ; 
  double _emal_53453__pinl_6543__ls_6150 { , NN } ; 
  double _emal_53452__pinl_6538__ls_6139 { , NN } ; 
  double _emal_53451__pinl_6539__ls_6140 { , NN } ; 
  int _emal_53450__dlirmov_51651__iveras_51419 { , NN } ; 
  int _emal_53449__dlirmov_51652__iveras_51420 { , NN } ; 
  int _dlirmov_51652__iveras_51420 { , NN } ; 
  int _dlirmov_51651__iveras_51419 { , NN } ; 
  int{1} _ivesplit_24773 { , NN } ; 
  double _pinl_6543__ls_6150 { , NN } ; 
  double _pinl_6542__ls_6149 { , NN } ; 
  double _pinl_6539__ls_6140 { , NN } ; 
  double _pinl_6538__ls_6139 { , NN } ; 
  int _pinl_6535_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_6534_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_6533_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6532_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_53456_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_53456_startr__SSA0_1); 
    _emal_53455__ivesplit_24773 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24773 = _fill_( 1, _emal_53455__ivesplit_24773); 
    _emal_53454__pinl_6542__ls_6149 = _alloc_( 1, 0, [:int]); 
    _pinl_6542__ls_6149 = _fill_( _idx_sel_( _ivesplit_24773, q), _emal_53454__pinl_6542__ls_6149); 
    _emal_53453__pinl_6543__ls_6150 = _alloc_( 1, 0, [:int]); 
    _pinl_6543__ls_6150 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_53453__pinl_6543__ls_6150); 
    _emal_53452__pinl_6538__ls_6139 = _alloc_( 1, 0, [:int]); 
    _pinl_6538__ls_6139 = _fill_( _idx_sel_( _ivesplit_24773, p), _emal_53452__pinl_6538__ls_6139); 
    _free_( _ivesplit_24773); 
    _emal_53451__pinl_6539__ls_6140 = _alloc_( 1, 0, [:int]); 
    _pinl_6539__ls_6140 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_53451__pinl_6539__ls_6140); 
    _emal_53450__dlirmov_51651__iveras_51419 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51651__iveras_51419 = _fill_( 0, _emal_53450__dlirmov_51651__iveras_51419); 
    _emal_53449__dlirmov_51652__iveras_51420 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51652__iveras_51420 = _fill_( 1, _emal_53449__dlirmov_51652__iveras_51420); 
    _emlr_55088_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55089_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55088_startr__SSA0_1); 
    _emlr_55086_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55087_numr = _fill_( _copy_( numr), _emlr_55086_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55084_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55462_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55463_val = _fill_( _isreused_( _emlr_55084_offsetsr, offsetsr), _emrb_55462_mem); 
    _emlr_55085_offsetsr = _MAIN::_dup_5275_BlockHoare__Cond_20__ReuseCond_20( _emrb_55463_val, _emlr_55084_offsetsr, offsetsr) ; 
    _pinl_6532_argmax__SSA0_1, _pinl_6533_max__SSA0_1, _pinl_6534_offsetsr__SSA0_1, _pinl_6535_numr__SSA0_1 = _MAIN::_dup_6545_BlockHoare__Loop_18( _dlirmov_51652__iveras_51420, _dlirmov_51651__iveras_51419, argmax, max, _emlr_55085_offsetsr, _emlr_55087_numr, _emlr_55089_startr__SSA0_1, _pinl_6543__ls_6150, _pinl_6542__ls_6149, _pinl_6539__ls_6140, _pinl_6538__ls_6139, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_6535_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_6534_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_6533_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_6532_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5275_BlockHoare__Cond_20__ReuseCond_20(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5275_BlockHoare__Cond_20__ReuseCond_20( bool _emrb_55458 { ,NN } , int[64] _emlr_55084_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5275_BlockHoare__Cond_20__ReuseCond_20 ::  ---
 */
{ 
  int[64] _emrb_55461 { , NN } ; 
  int[64] _dup_55460__emlr_55085_offsetsr { , NN } ; 
  int[64] _dup_55459__emlr_55085_offsetsr { , NN } ; 

  if (_emrb_55458) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55458, 1); 
    _dup_55459__emlr_55085_offsetsr = _fill_( _noop_( offsetsr), _emlr_55084_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55458, 1); 
    _dup_55460__emlr_55085_offsetsr = _fill_( _copy_( offsetsr), _emlr_55084_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55461 = ( _emrb_55458 ? _dup_55459__emlr_55085_offsetsr : _dup_55460__emlr_55085_offsetsr ); 
  return( _emrb_55461); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5271_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5271_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5271_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55456_val { , NN } ; 
  bool _emrb_55455_mem { , NN } ; 
  int{0} _emlr_55095_startl__SSA0_1 { , NN } ; 
  int _emlr_55094_startl__SSA0_1 { , NN } ; 
  int _emlr_55093_numl { , NN } ; 
  int _emlr_55092_numl { , NN } ; 
  int[64] _emlr_55091_offsetsl { , NN } ; 
  int[64] _emlr_55090_offsetsl { , NN } ; 
  int _emal_53464_startl__SSA0_1 { , NN } ; 
  int _emal_53463__ivesplit_24781 { , NN } ; 
  double _emal_53462__pinl_6528__ls_6169 { , NN } ; 
  double _emal_53461__pinl_6529__ls_6170 { , NN } ; 
  double _emal_53460__pinl_6524__ls_6159 { , NN } ; 
  double _emal_53459__pinl_6525__ls_6160 { , NN } ; 
  int _emal_53458__dlirmov_51649__iveras_51421 { , NN } ; 
  int _emal_53457__dlirmov_51650__iveras_51422 { , NN } ; 
  int _dlirmov_51650__iveras_51422 { , NN } ; 
  int _dlirmov_51649__iveras_51421 { , NN } ; 
  int{1} _ivesplit_24781 { , NN } ; 
  double _pinl_6529__ls_6170 { , NN } ; 
  double _pinl_6528__ls_6169 { , NN } ; 
  double _pinl_6525__ls_6160 { , NN } ; 
  double _pinl_6524__ls_6159 { , NN } ; 
  int _pinl_6521_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_6520_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_6519_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6518_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_53464_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_53464_startl__SSA0_1); 
    _emal_53463__ivesplit_24781 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24781 = _fill_( 1, _emal_53463__ivesplit_24781); 
    _emal_53462__pinl_6528__ls_6169 = _alloc_( 1, 0, [:int]); 
    _pinl_6528__ls_6169 = _fill_( _idx_sel_( _ivesplit_24781, q), _emal_53462__pinl_6528__ls_6169); 
    _emal_53461__pinl_6529__ls_6170 = _alloc_( 1, 0, [:int]); 
    _pinl_6529__ls_6170 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_53461__pinl_6529__ls_6170); 
    _emal_53460__pinl_6524__ls_6159 = _alloc_( 1, 0, [:int]); 
    _pinl_6524__ls_6159 = _fill_( _idx_sel_( _ivesplit_24781, p), _emal_53460__pinl_6524__ls_6159); 
    _free_( _ivesplit_24781); 
    _emal_53459__pinl_6525__ls_6160 = _alloc_( 1, 0, [:int]); 
    _pinl_6525__ls_6160 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_53459__pinl_6525__ls_6160); 
    _emal_53458__dlirmov_51649__iveras_51421 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51649__iveras_51421 = _fill_( 0, _emal_53458__dlirmov_51649__iveras_51421); 
    _emal_53457__dlirmov_51650__iveras_51422 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51650__iveras_51422 = _fill_( 1, _emal_53457__dlirmov_51650__iveras_51422); 
    _emlr_55094_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55095_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55094_startl__SSA0_1); 
    _emlr_55092_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55093_numl = _fill_( _copy_( numl), _emlr_55092_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55090_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55455_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55456_val = _fill_( _isreused_( _emlr_55090_offsetsl, offsetsl), _emrb_55455_mem); 
    _emlr_55091_offsetsl = _MAIN::_dup_5271_BlockHoare__Cond_23__ReuseCond_19( _emrb_55456_val, _emlr_55090_offsetsl, offsetsl) ; 
    _pinl_6518_argmax__SSA0_1, _pinl_6519_max__SSA0_1, _pinl_6520_offsetsl__SSA0_1, _pinl_6521_numl__SSA0_1 = _MAIN::_dup_6531_BlockHoare__Loop_21( _dlirmov_51650__iveras_51422, _dlirmov_51649__iveras_51421, argmax, max, _emlr_55091_offsetsl, _emlr_55093_numl, _emlr_55095_startl__SSA0_1, _pinl_6529__ls_6170, _pinl_6528__ls_6169, _pinl_6525__ls_6160, _pinl_6524__ls_6159, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_6521_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_6520_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_6519_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_6518_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5271_BlockHoare__Cond_23__ReuseCond_19(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5271_BlockHoare__Cond_23__ReuseCond_19( bool _emrb_55451 { ,NN } , int[64] _emlr_55090_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5271_BlockHoare__Cond_23__ReuseCond_19 ::  ---
 */
{ 
  int[64] _emrb_55454 { , NN } ; 
  int[64] _dup_55453__emlr_55091_offsetsl { , NN } ; 
  int[64] _dup_55452__emlr_55091_offsetsl { , NN } ; 

  if (_emrb_55451) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55451, 1); 
    _dup_55452__emlr_55091_offsetsl = _fill_( _noop_( offsetsl), _emlr_55090_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55451, 1); 
    _dup_55453__emlr_55091_offsetsl = _fill_( _copy_( offsetsl), _emlr_55090_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55454 = ( _emrb_55451 ? _dup_55452__emlr_55091_offsetsl : _dup_55453__emlr_55091_offsetsl ); 
  return( _emrb_55454); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5088_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5088_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5088_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5087_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5087_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5087_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5087_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_53471__ctz_7738 { , NN } ; 
  bool _emal_53470__pinl_3760__flat_197 { , NN } ; 
  int _emal_53469__ctz_7736 { , NN } ; 
  bool _emal_53468__pinl_4092__flat_197 { , NN } ; 
  int _emal_53467__ctz_7734 { , NN } ; 
  bool _emal_53466__pinl_4425__flat_196 { , NN } ; 
  bool _emal_53465__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7738 { , NN } ; 
  int _ctz_7736 { , NN } ; 
  int _ctz_7734 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_53471__ctz_7738 = _alloc_( 1, 0, [:int]); 
  _ctz_7738 = _fill_( _sub_SxS_( l, r), _emal_53471__ctz_7738); 
  _emal_53470__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7738, 0), _emal_53470__pinl_3760__flat_197); 
  _free_( _ctz_7738); 
  _hce_6 = _MAIN::_dup_5075_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5079_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_53469__ctz_7736 = _alloc_( 1, 0, [:int]); 
  _ctz_7736 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_53469__ctz_7736); 
  _emal_53468__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7736, 0), _emal_53468__pinl_4092__flat_197); 
  _free_( _ctz_7736); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5085_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_53467__ctz_7734 = _alloc_( 1, 0, [:int]); 
  _ctz_7734 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_53467__ctz_7734); 
  _emal_53466__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7734, 0), _emal_53466__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5086_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_53465__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7734, 0), _emal_53465__pinl_4645__flat_197); 
  _free_( _ctz_7734); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5087_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5086_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5086_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5086_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55781 { , NN } ; 
  double _emdr_55780 { , NN } ; 
  bool _emrb_55449_val { , NN } ; 
  bool _emrb_55448_mem { , NN } ; 
  int _emal_53519__iveras_51515 { , NN } ; 
  int _emal_53518__ivesli_48359 { , NN } ; 
  double _emal_53517__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_53516__iveras_51516 { , NN } ; 
  int _emal_53515__ivesli_48357 { , NN } ; 
  double _emal_53514__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_53513__pinl_4616__flat_1457 { , NN } ; 
  int _emal_53512__iveras_51517 { , NN } ; 
  int _emal_53511__ivesli_48355 { , NN } ; 
  double _emal_53510__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53509__iveras_51518 { , NN } ; 
  int _emal_53508__ivesli_48353 { , NN } ; 
  double _emal_53507__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53506__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_53505__uprf_7434 { , NN } ; 
  int _emal_53504__pinl_5748_z { , NN } ; 
  double[1000000,2] _emal_53498__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_53497__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_53496__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_53495__pinl_4548__flat_1465 { , NN } ; 
  double _emal_53494__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53493__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53492__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_53491__uprf_7431 { , NN } ; 
  int _emal_53490__pinl_5768_z { , NN } ; 
  double _emal_53486_val { , NN } ; 
  double _emal_53485_val { , NN } ; 
  double[1000000,2] _emal_53484__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_53483__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_53482__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_53481__pinl_4480__flat_1465 { , NN } ; 
  double _emal_53480__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53479__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53478__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_53474_val { , NN } ; 
  double _emal_53473_val { , NN } ; 
  double[1000000,2] _emal_53472__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51518 { , NN } ; 
  int _iveras_51517 { , NN } ; 
  int _iveras_51516 { , NN } ; 
  int _iveras_51515 { , NN } ; 
  int _ivesli_48359 { , NN } ; 
  int _ivesli_48357 { , NN } ; 
  int _ivesli_48355 { , NN } ; 
  int _ivesli_48353 { , NN } ; 
  int _wlidx_47895__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47894__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47893__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11415 { , NN } ; 
  int[2] _wlsb_11387 { , NN } ; 
  int _eat_10355 { , NN } ; 
  int _eat_10354 { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7434 { , NN } ; 
  int _uprf_7431 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5748_z { , NN } ; 
  int _pinl_5768_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_53519__iveras_51515 = _alloc_( 1, 0, [:int]); 
    _iveras_51515 = _fill_( 0, _emal_53519__iveras_51515); 
    _ivesli_48359 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51515), _iveras_51515); 
    _emal_53517__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48359, P), _emal_53517__pinl_4643__flat_149__SSA2_1); 
    _emal_53516__iveras_51516 = _alloc_( 1, 0, [:int]); 
    _iveras_51516 = _fill_( 0, _emal_53516__iveras_51516); 
    _ivesli_48357 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51516), _iveras_51516); 
    _emal_53514__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48357, P), _emal_53514__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_53512__iveras_51517 = _alloc_( 1, 0, [:int]); 
    _iveras_51517 = _fill_( 1, _emal_53512__iveras_51517); 
    _ivesli_48355 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51517), _iveras_51517); 
    _emal_53510__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48355, P), _emal_53510__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53509__iveras_51518 = _alloc_( 1, 0, [:int]); 
    _iveras_51518 = _fill_( 1, _emal_53509__iveras_51518); 
    _ivesli_48353 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51518), _iveras_51518); 
    _emal_53507__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48353, P), _emal_53507__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53505__uprf_7434 = _alloc_( 1, 0, [:int]); 
    _uprf_7434 = _fill_( _add_SxS_( 1, l), _emal_53505__uprf_7434); 
    _emal_53504__pinl_5748_z = _alloc_( 1, 0, [:int]); 
    _pinl_5748_z = _fill_( _max_SxS_( _uprf_7434, l), _emal_53504__pinl_5748_z); 
    _emal_53498__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47893__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55448_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55449_val = _fill_( _isreused_( _emal_53498__pinl_4435_P__SSA0_1, P), _emrb_55448_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5086_BlockHoare__Cond_1__ReuseCond_18( _emrb_55449_val, _pinl_4616__flat_1457, _pinl_5748_z, _uprf_7434, _pinl_4616__flat_1457__SSA3_2, _wlidx_47893__pinl_4435_P__SSA0_1, _emal_53498__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_53497__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48359, _pinl_4435_P__SSA0_1), _emal_53497__pinl_4575__flat_149__SSA2_1); 
    _emal_53496__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48357, _pinl_4435_P__SSA0_1), _emal_53496__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_53494__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48355, _pinl_4435_P__SSA0_1), _emal_53494__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53493__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48353, _pinl_4435_P__SSA0_1), _emal_53493__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53491__uprf_7431 = _alloc_( 1, 0, [:int]); 
    _uprf_7431 = _fill_( _add_SxS_( 1, r), _emal_53491__uprf_7431); 
    _emal_53490__pinl_5768_z = _alloc_( 1, 0, [:int]); 
    _pinl_5768_z = _fill_( _max_SxS_( _uprf_7431, r), _emal_53490__pinl_5768_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10354 = _alloc_( 1, 0, [:int]); 
    _wlidx_47894__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_11415=[_pinl_4513__eat_766, _eat_10354] (IDXS:_wlidx_47894__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53485_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_11415, _wlidx_47894__pinl_4437_P__SSA0_3); 
          } : _emal_53485_val ; ,
        op_1 =
          { 
            _emal_53486_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_11415, _wlidx_47894__pinl_4437_P__SSA0_3); 
          } : _emal_53486_val ; ,
        op_2 =
          { 
            _emdr_55780 = _noop_( _wlsb_11415); 
          } : _emdr_55780 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7431, 1 ]
         */
        (r => _uprf_7431), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7431, 2 ]
         */
        (r => _uprf_7431), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5768_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5768_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47894__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_5768_z); 
    _free_( _uprf_7431); 
    _free_( _eat_10354); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47894__pinl_4437_P__SSA0_3); 
    _emal_53483__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48359, _pinl_4437_P__SSA0_3), _emal_53483__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48359); 
    _emal_53482__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48357, _pinl_4437_P__SSA0_3), _emal_53482__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48357); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_53480__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48355, _pinl_4437_P__SSA0_3), _emal_53480__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48355); 
    _emal_53479__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48353, _pinl_4437_P__SSA0_3), _emal_53479__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48353); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10355 = _alloc_( 1, 0, [:int]); 
    _wlidx_47895__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_11387=[_pinl_4445__eat_766, _eat_10355] (IDXS:_wlidx_47895__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53473_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_11387, _wlidx_47895__pinl_4439_P__SSA0_5); 
          } : _emal_53473_val ; ,
        op_1 =
          { 
            _emal_53474_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_11387, _wlidx_47895__pinl_4439_P__SSA0_5); 
          } : _emal_53474_val ; ,
        op_2 =
          { 
            _emdr_55781 = _noop_( _wlsb_11387); 
          } : _emdr_55781 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7434, 1 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7434, 2 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5748_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5748_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47895__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_5748_z); 
    _free_( _uprf_7434); 
    _free_( _eat_10355); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47895__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5086_BlockHoare__Cond_1__ReuseCond_18(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5086_BlockHoare__Cond_1__ReuseCond_18( bool _emrb_55424 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_5748_z { ,NN } , int _uprf_7434 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _wlidx_47893__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_53498__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5086_BlockHoare__Cond_1__ReuseCond_18 ::  ---
 */
{ 
  double _emdr_55779 { , NN } ; 
  double[1000000,2] _emrb_55447 { , NN } ; 
  double _dup_55446__emal_53503_val { , NN } ; 
  double _dup_55445__pinl_5759__flat_28 { , NN } ; 
  double _dup_55444__emal_53501__dup_11449__pinl_5759__flat_28 { , NN } ; 
  int _dup_55443__ivesli_48351 { , NN } ; 
  int _dup_55442__emal_53502__ivesli_48351 { , NN } ; 
  double _dup_55441__emal_53500_val { , NN } ; 
  double _dup_55440__emal_53499_val { , NN } ; 
  double[1000000,2] _dup_55439__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55438__eat_10353 { , NN } ; 
  int _dup_55437__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55436__wlsb_11443 { , NN } ; 
  double _dup_55430__emal_53500_val { , NN } ; 
  double _dup_55429__emal_53499_val { , NN } ; 
  double[1000000,2] _dup_55428__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55427__eat_10353 { , NN } ; 
  int _dup_55426__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55425__wlsb_11443 { , NN } ; 

  if (_emrb_55424) 
  { 
    _dec_rc_( _emrb_55424, 1); 
    _dup_55426__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55427__eat_10353 = _alloc_( 1, 0, [:int]); 
    _dup_55428__pinl_4435_P__SSA0_1 = with2 (_dup_55425__wlsb_11443=[_dup_55426__pinl_4581__eat_766, _dup_55427__eat_10353] (IDXS:_wlidx_47893__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55429__emal_53499_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53498__pinl_4435_P__SSA0_1, _dup_55425__wlsb_11443, _wlidx_47893__pinl_4435_P__SSA0_1); 
          } : _dup_55429__emal_53499_val ; ,
        op_1 =
          { 
            _dup_55430__emal_53500_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53498__pinl_4435_P__SSA0_1, _dup_55425__wlsb_11443, _wlidx_47893__pinl_4435_P__SSA0_1); 
          } : _dup_55430__emal_53500_val ; ,
        op_2 =
          { 
            _emdr_55779 = _noop_( _dup_55425__wlsb_11443); 
          } : _emdr_55779 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7434, 1 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7434, 2 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5748_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5748_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53498__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47893__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55427__eat_10353); 
    _free_( _dup_55426__pinl_4581__eat_766); 
    _free_( _wlidx_47893__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55424, 1); 
    _dup_55437__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55438__eat_10353 = _alloc_( 1, 0, [:int]); 
    _dup_55439__pinl_4435_P__SSA0_1 = with2 (_dup_55436__wlsb_11443=[_dup_55437__pinl_4581__eat_766, _dup_55438__eat_10353] (IDXS:_wlidx_47893__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55440__emal_53499_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53498__pinl_4435_P__SSA0_1, _dup_55436__wlsb_11443, _wlidx_47893__pinl_4435_P__SSA0_1); 
          } : _dup_55440__emal_53499_val ; ,
        op_1 =
          { 
            _dup_55441__emal_53500_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53498__pinl_4435_P__SSA0_1, _dup_55436__wlsb_11443, _wlidx_47893__pinl_4435_P__SSA0_1); 
          } : _dup_55441__emal_53500_val ; ,
        op_2 =
          { 
            _dup_55442__emal_53502__ivesli_48351 = _alloc_( 1, 0, [:int]); 
            _dup_55443__ivesli_48351 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55437__pinl_4581__eat_766, _dup_55438__eat_10353), _dup_55442__emal_53502__ivesli_48351); 
            _dup_55444__emal_53501__dup_11449__pinl_5759__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55445__pinl_5759__flat_28 = _fill_( _idx_sel_( _dup_55443__ivesli_48351, P), _dup_55444__emal_53501__dup_11449__pinl_5759__flat_28); 
            _free_( _dup_55443__ivesli_48351); 
            _dup_55446__emal_53503_val = _wl_assign_( _dup_55445__pinl_5759__flat_28, _emal_53498__pinl_4435_P__SSA0_1, _dup_55436__wlsb_11443, _wlidx_47893__pinl_4435_P__SSA0_1); 
            _free_( _dup_55445__pinl_5759__flat_28); 
          } : _dup_55446__emal_53503_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7434, 1 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7434, 2 ]
         */
        (l => _uprf_7434), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5748_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5748_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53498__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47893__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55437__pinl_4581__eat_766); 
    _free_( _dup_55438__eat_10353); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47893__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55447 = ( _emrb_55424 ? _dup_55428__pinl_4435_P__SSA0_1 : _dup_55439__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55447); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5085_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5085_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5085_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_53521__ctz_7740 { , NN } ; 
  bool _emal_53520__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7740 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_53521__ctz_7740 = _alloc_( 1, 0, [:int]); 
    _ctz_7740 = _fill_( _sub_SxS_( l, r), _emal_53521__ctz_7740); 
    _emal_53520__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7740, 0), _emal_53520__pinl_4093__flat_197); 
    _free_( _ctz_7740); 
    _hce_4 = _MAIN::_dup_5080_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5084_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5084_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5084_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5084_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55097_r { , NN } ; 
  int _emlr_55096_r { , NN } ; 
  int _emal_53529__dlirmov_51005__wlsimp_7123 { , NN } ; 
  int _emal_53528__dlirmov_51007__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_53527__dlirmov_51010__pinl_4296__flat_149 { , NN } ; 
  double _emal_53526__dlirmov_51013__pinl_4271__flat_149 { , NN } ; 
  double _emal_53525__dlirmov_51016__pinl_4257__flat_149 { , NN } ; 
  double _emal_53524__dlirmov_51019__pinl_4244__flat_149 { , NN } ; 
  int _emal_53523__dlirmov_51647__iveras_51519 { , NN } ; 
  int _emal_53522__dlirmov_51648__iveras_51520 { , NN } ; 
  int _dlirmov_51648__iveras_51520 { , NN } ; 
  int _dlirmov_51647__iveras_51519 { , NN } ; 
  double _dlirmov_51019__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_51016__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_51013__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_51010__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_51007__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_51005__wlsimp_7123 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_53529__dlirmov_51005__wlsimp_7123 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51005__wlsimp_7123 = _fill_( 0, _emal_53529__dlirmov_51005__wlsimp_7123); 
    _emal_53528__dlirmov_51007__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51007__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_53528__dlirmov_51007__pinl_4214__eat_768__SSA3_1); 
    _emal_53527__dlirmov_51010__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51010__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_51005__wlsimp_7123, q), _emal_53527__dlirmov_51010__pinl_4296__flat_149); 
    _emal_53526__dlirmov_51013__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51013__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_51007__pinl_4214__eat_768__SSA3_1, p), _emal_53526__dlirmov_51013__pinl_4271__flat_149); 
    _emal_53525__dlirmov_51016__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51016__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_51007__pinl_4214__eat_768__SSA3_1, q), _emal_53525__dlirmov_51016__pinl_4257__flat_149); 
    _free_( _dlirmov_51007__pinl_4214__eat_768__SSA3_1); 
    _emal_53524__dlirmov_51019__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51019__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_51005__wlsimp_7123, p), _emal_53524__dlirmov_51019__pinl_4244__flat_149); 
    _free_( _dlirmov_51005__wlsimp_7123); 
    _emal_53523__dlirmov_51647__iveras_51519 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51647__iveras_51519 = _fill_( 0, _emal_53523__dlirmov_51647__iveras_51519); 
    _emal_53522__dlirmov_51648__iveras_51520 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51648__iveras_51520 = _fill_( 1, _emal_53522__dlirmov_51648__iveras_51520); 
    _emlr_55096_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55097_r = _fill_( _copy_( r), _emlr_55096_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5083_BlockHoare__Loop_3( _dlirmov_51648__iveras_51520, _dlirmov_51647__iveras_51519, _dlirmov_51019__pinl_4244__flat_149, _dlirmov_51016__pinl_4257__flat_149, _dlirmov_51013__pinl_4271__flat_149, _dlirmov_51010__pinl_4296__flat_149, argmax, max, q, p, _emlr_55097_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5083_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5083_BlockHoare__Loop_3( int _iveras_51520 { ,NN } , int _iveras_51519 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5083_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_53547__ivesli_48363 { , NN } ; 
  double _emal_53546__pinl_4213__flat_149 { , NN } ; 
  int _emal_53545__ivesli_48361 { , NN } ; 
  double _emal_53544__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53543__flat_129__SSA3_2 { , NN } ; 
  double _emal_53542__pinl_4284__flat_95 { , NN } ; 
  double _emal_53541__pinl_4259__flat_95 { , NN } ; 
  double _emal_53535__ctz_7744 { , NN } ; 
  bool _emal_53534__pinl_4312__flat_252 { , NN } ; 
  int _emal_53533__pinl_4315__flat_124 { , NN } ; 
  int _emal_53532__esd_8318 { , NN } ; 
  bool _emal_53530__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48363 { , NN } ; 
  int _ivesli_48361 { , NN } ; 
  int _esd_8318 { , NN } ; 
  double _ctz_7744 { , NN } ; 
  int _ctz_7742 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_53547__ivesli_48363 = _alloc_( 1, 0, [:int]); 
  _ivesli_48363 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51519), _emal_53547__ivesli_48363); 
  _emal_53546__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48363, P), _emal_53546__pinl_4213__flat_149); 
  _free_( _ivesli_48363); 
  _emal_53545__ivesli_48361 = _alloc_( 1, 0, [:int]); 
  _ivesli_48361 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51520), _emal_53545__ivesli_48361); 
  _emal_53544__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48361, P), _emal_53544__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48361); 
  _emal_53543__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_53543__flat_129__SSA3_2); 
  _emal_53542__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_53542__pinl_4284__flat_95); 
  _emal_53541__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_53541__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_53535__ctz_7744 = _alloc_( 1, 0, [:int]); 
  _ctz_7744 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_53535__ctz_7744); 
  _emal_53534__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7744, 0.0), _emal_53534__pinl_4312__flat_252); 
  _free_( _ctz_7744); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5081_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_53533__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_53533__pinl_4315__flat_124); 
  _emal_53532__esd_8318 = r; 
  _esd_8318 = _fill_( _sub_SxS_( 1, r), _emal_53532__esd_8318); 
  _ctz_7742 = _fill_( _add_SxS_( _esd_8318, l), _esd_8318); 
  _emal_53530__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7742, 0), _emal_53530__pinl_4316__flat_197); 
  _free_( _ctz_7742); 
  _hce_3 = _MAIN::_dup_5082_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5083_BlockHoare__Loop_3( _iveras_51520, _iveras_51519, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51519, 1); 
    _dec_rc_( _iveras_51520, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5082_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5082_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5082_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_53568__hce_3__SSA0_1 { , NN } ; 
  int _emal_53567__wlsimp_7126 { , NN } ; 
  int _emal_53566__iveras_51521 { , NN } ; 
  int _emal_53565__ivesli_48367 { , NN } ; 
  double _emal_53564__pinl_4328__flat_149 { , NN } ; 
  int _emal_53563__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_53562__iveras_51522 { , NN } ; 
  int _emal_53561__ivesli_48365 { , NN } ; 
  double _emal_53560__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_53559__pinl_4411__flat_149 { , NN } ; 
  double _emal_53558__pinl_4399__flat_95 { , NN } ; 
  double _emal_53557__pinl_4386__flat_149 { , NN } ; 
  double _emal_53556__pinl_4374__flat_95 { , NN } ; 
  double _emal_53555__pinl_4373__flat_96 { , NN } ; 
  double _emal_53554__pinl_4372__flat_149 { , NN } ; 
  double _emal_53553__pinl_4360__flat_95 { , NN } ; 
  double _emal_53552__pinl_4359__flat_149 { , NN } ; 
  double _emal_53551__pinl_4347__flat_95 { , NN } ; 
  double _emal_53550__pinl_4346__flat_96 { , NN } ; 
  double _emal_53549__pinl_4345__flat_95 { , NN } ; 
  bool _emal_53548__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51522 { , NN } ; 
  int _iveras_51521 { , NN } ; 
  int _ivesli_48367 { , NN } ; 
  int _ivesli_48365 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7126 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_53567__wlsimp_7126 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7126 = _fill_( 0, _emal_53567__wlsimp_7126); 
    _emal_53566__iveras_51521 = _alloc_( 1, 0, [:int]); 
    _iveras_51521 = _fill_( 0, _emal_53566__iveras_51521); 
    _ivesli_48367 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51521), _iveras_51521); 
    _emal_53564__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48367, P), _emal_53564__pinl_4328__flat_149); 
    _free_( _ivesli_48367); 
    _emal_53563__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_53563__pinl_4329__eat_768__SSA3_1); 
    _emal_53562__iveras_51522 = _alloc_( 1, 0, [:int]); 
    _iveras_51522 = _fill_( 1, _emal_53562__iveras_51522); 
    _ivesli_48365 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51522), _iveras_51522); 
    _emal_53560__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48365, P), _emal_53560__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48365); 
    _emal_53559__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_7126, q), _emal_53559__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_53557__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_53557__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_53554__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_53554__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_53552__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_7126, p), _emal_53552__pinl_4359__flat_149); 
    _free_( _wlsimp_7126); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_53548__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_53548__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_53568__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_53568__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5081_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5081_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5081_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5080_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5080_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5080_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_53589__hce_4__SSA0_1 { , NN } ; 
  int _emal_53588__wlsimp_7129 { , NN } ; 
  int _emal_53587__iveras_51523 { , NN } ; 
  int _emal_53586__ivesli_48371 { , NN } ; 
  double _emal_53585__pinl_4105__flat_149 { , NN } ; 
  int _emal_53584__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_53583__iveras_51524 { , NN } ; 
  int _emal_53582__ivesli_48369 { , NN } ; 
  double _emal_53581__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_53580__pinl_4188__flat_149 { , NN } ; 
  double _emal_53579__pinl_4176__flat_95 { , NN } ; 
  double _emal_53578__pinl_4163__flat_149 { , NN } ; 
  double _emal_53577__pinl_4151__flat_95 { , NN } ; 
  double _emal_53576__pinl_4150__flat_96 { , NN } ; 
  double _emal_53575__pinl_4149__flat_149 { , NN } ; 
  double _emal_53574__pinl_4137__flat_95 { , NN } ; 
  double _emal_53573__pinl_4136__flat_149 { , NN } ; 
  double _emal_53572__pinl_4124__flat_95 { , NN } ; 
  double _emal_53571__pinl_4123__flat_96 { , NN } ; 
  double _emal_53570__pinl_4122__flat_95 { , NN } ; 
  bool _emal_53569__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51524 { , NN } ; 
  int _iveras_51523 { , NN } ; 
  int _ivesli_48371 { , NN } ; 
  int _ivesli_48369 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7129 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_53588__wlsimp_7129 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7129 = _fill_( 0, _emal_53588__wlsimp_7129); 
    _emal_53587__iveras_51523 = _alloc_( 1, 0, [:int]); 
    _iveras_51523 = _fill_( 0, _emal_53587__iveras_51523); 
    _ivesli_48371 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51523), _iveras_51523); 
    _emal_53585__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48371, P), _emal_53585__pinl_4105__flat_149); 
    _free_( _ivesli_48371); 
    _emal_53584__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_53584__pinl_4106__eat_768__SSA3_1); 
    _emal_53583__iveras_51524 = _alloc_( 1, 0, [:int]); 
    _iveras_51524 = _fill_( 1, _emal_53583__iveras_51524); 
    _ivesli_48369 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51524), _iveras_51524); 
    _emal_53581__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48369, P), _emal_53581__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48369); 
    _emal_53580__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_7129, q), _emal_53580__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_53578__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_53578__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_53575__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_53575__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_53573__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_7129, p), _emal_53573__pinl_4136__flat_149); 
    _free_( _wlsimp_7129); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_53569__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_53569__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_53589__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_53589__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5079_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5079_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5079_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55099_l { , NN } ; 
  int _emlr_55098_l { , NN } ; 
  int _emal_53597__dlirmov_50989__wlsimp_7132 { , NN } ; 
  int _emal_53596__dlirmov_50991__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_53595__dlirmov_50994__pinl_3963__flat_149 { , NN } ; 
  double _emal_53594__dlirmov_50997__pinl_3938__flat_149 { , NN } ; 
  double _emal_53593__dlirmov_51000__pinl_3924__flat_149 { , NN } ; 
  double _emal_53592__dlirmov_51003__pinl_3911__flat_149 { , NN } ; 
  int _emal_53591__dlirmov_51645__iveras_51525 { , NN } ; 
  int _emal_53590__dlirmov_51646__iveras_51526 { , NN } ; 
  int _dlirmov_51646__iveras_51526 { , NN } ; 
  int _dlirmov_51645__iveras_51525 { , NN } ; 
  double _dlirmov_51003__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_51000__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_50997__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_50994__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_50991__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50989__wlsimp_7132 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_53597__dlirmov_50989__wlsimp_7132 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50989__wlsimp_7132 = _fill_( 0, _emal_53597__dlirmov_50989__wlsimp_7132); 
    _emal_53596__dlirmov_50991__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50991__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_53596__dlirmov_50991__pinl_3881__eat_768__SSA3_1); 
    _emal_53595__dlirmov_50994__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50994__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_50989__wlsimp_7132, q), _emal_53595__dlirmov_50994__pinl_3963__flat_149); 
    _emal_53594__dlirmov_50997__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50997__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_50991__pinl_3881__eat_768__SSA3_1, p), _emal_53594__dlirmov_50997__pinl_3938__flat_149); 
    _emal_53593__dlirmov_51000__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51000__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_50991__pinl_3881__eat_768__SSA3_1, q), _emal_53593__dlirmov_51000__pinl_3924__flat_149); 
    _free_( _dlirmov_50991__pinl_3881__eat_768__SSA3_1); 
    _emal_53592__dlirmov_51003__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51003__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_50989__wlsimp_7132, p), _emal_53592__dlirmov_51003__pinl_3911__flat_149); 
    _free_( _dlirmov_50989__wlsimp_7132); 
    _emal_53591__dlirmov_51645__iveras_51525 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51645__iveras_51525 = _fill_( 0, _emal_53591__dlirmov_51645__iveras_51525); 
    _emal_53590__dlirmov_51646__iveras_51526 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51646__iveras_51526 = _fill_( 1, _emal_53590__dlirmov_51646__iveras_51526); 
    _emlr_55098_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55099_l = _fill_( _copy_( l), _emlr_55098_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5078_BlockHoare__Loop_8( _dlirmov_51646__iveras_51526, _dlirmov_51645__iveras_51525, _dlirmov_51003__pinl_3911__flat_149, _dlirmov_51000__pinl_3924__flat_149, _dlirmov_50997__pinl_3938__flat_149, _dlirmov_50994__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55099_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5078_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5078_BlockHoare__Loop_8( int _iveras_51526 { ,NN } , int _iveras_51525 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5078_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_53614__ivesli_48375 { , NN } ; 
  double _emal_53613__pinl_3880__flat_149 { , NN } ; 
  int _emal_53612__ivesli_48373 { , NN } ; 
  double _emal_53611__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53610__flat_117__SSA3_2 { , NN } ; 
  double _emal_53609__pinl_3951__flat_95 { , NN } ; 
  double _emal_53608__pinl_3926__flat_95 { , NN } ; 
  double _emal_53602__ctz_7748 { , NN } ; 
  bool _emal_53601__pinl_3979__flat_252 { , NN } ; 
  int _emal_53600__pinl_3982__flat_122 { , NN } ; 
  int _emal_53599__ctz_7746 { , NN } ; 
  bool _emal_53598__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48375 { , NN } ; 
  int _ivesli_48373 { , NN } ; 
  double _ctz_7748 { , NN } ; 
  int _ctz_7746 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_53614__ivesli_48375 = _alloc_( 1, 0, [:int]); 
  _ivesli_48375 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51525), _emal_53614__ivesli_48375); 
  _emal_53613__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48375, P), _emal_53613__pinl_3880__flat_149); 
  _free_( _ivesli_48375); 
  _emal_53612__ivesli_48373 = _alloc_( 1, 0, [:int]); 
  _ivesli_48373 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51526), _emal_53612__ivesli_48373); 
  _emal_53611__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48373, P), _emal_53611__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48373); 
  _emal_53610__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_53610__flat_117__SSA3_2); 
  _emal_53609__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_53609__pinl_3951__flat_95); 
  _emal_53608__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_53608__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_53602__ctz_7748 = _alloc_( 1, 0, [:int]); 
  _ctz_7748 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_53602__ctz_7748); 
  _emal_53601__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7748, 0.0), _emal_53601__pinl_3979__flat_252); 
  _free_( _ctz_7748); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5076_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_53600__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_53600__pinl_3982__flat_122); 
  _emal_53599__ctz_7746 = _alloc_( 1, 0, [:int]); 
  _ctz_7746 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_53599__ctz_7746); 
  _emal_53598__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7746, 0), _emal_53598__pinl_3983__flat_197); 
  _free_( _ctz_7746); 
  _hce_5 = _MAIN::_dup_5077_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5078_BlockHoare__Loop_8( _iveras_51526, _iveras_51525, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51525, 1); 
    _dec_rc_( _iveras_51526, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5077_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5077_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5077_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_53635__hce_5__SSA0_1 { , NN } ; 
  int _emal_53634__wlsimp_7135 { , NN } ; 
  int _emal_53633__iveras_51527 { , NN } ; 
  int _emal_53632__ivesli_48379 { , NN } ; 
  double _emal_53631__pinl_3995__flat_149 { , NN } ; 
  int _emal_53630__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_53629__iveras_51528 { , NN } ; 
  int _emal_53628__ivesli_48377 { , NN } ; 
  double _emal_53627__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_53626__pinl_4078__flat_149 { , NN } ; 
  double _emal_53625__pinl_4066__flat_95 { , NN } ; 
  double _emal_53624__pinl_4053__flat_149 { , NN } ; 
  double _emal_53623__pinl_4041__flat_95 { , NN } ; 
  double _emal_53622__pinl_4040__flat_96 { , NN } ; 
  double _emal_53621__pinl_4039__flat_149 { , NN } ; 
  double _emal_53620__pinl_4027__flat_95 { , NN } ; 
  double _emal_53619__pinl_4026__flat_149 { , NN } ; 
  double _emal_53618__pinl_4014__flat_95 { , NN } ; 
  double _emal_53617__pinl_4013__flat_96 { , NN } ; 
  double _emal_53616__pinl_4012__flat_95 { , NN } ; 
  bool _emal_53615__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51528 { , NN } ; 
  int _iveras_51527 { , NN } ; 
  int _ivesli_48379 { , NN } ; 
  int _ivesli_48377 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7135 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_53634__wlsimp_7135 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7135 = _fill_( 0, _emal_53634__wlsimp_7135); 
    _emal_53633__iveras_51527 = _alloc_( 1, 0, [:int]); 
    _iveras_51527 = _fill_( 0, _emal_53633__iveras_51527); 
    _ivesli_48379 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51527), _iveras_51527); 
    _emal_53631__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48379, P), _emal_53631__pinl_3995__flat_149); 
    _free_( _ivesli_48379); 
    _emal_53630__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_53630__pinl_3996__eat_768__SSA3_1); 
    _emal_53629__iveras_51528 = _alloc_( 1, 0, [:int]); 
    _iveras_51528 = _fill_( 1, _emal_53629__iveras_51528); 
    _ivesli_48377 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51528), _iveras_51528); 
    _emal_53627__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48377, P), _emal_53627__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48377); 
    _emal_53626__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_7135, q), _emal_53626__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_53624__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_53624__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_53621__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_53621__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_53619__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_7135, p), _emal_53619__pinl_4026__flat_149); 
    _free_( _wlsimp_7135); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_53615__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_53615__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_53635__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_53635__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5076_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5076_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5076_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5075_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5075_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5075_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_53656__hce_6__SSA0_1 { , NN } ; 
  int _emal_53655__wlsimp_7138 { , NN } ; 
  int _emal_53654__iveras_51529 { , NN } ; 
  int _emal_53653__ivesli_48383 { , NN } ; 
  double _emal_53652__pinl_3772__flat_149 { , NN } ; 
  int _emal_53651__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_53650__iveras_51530 { , NN } ; 
  int _emal_53649__ivesli_48381 { , NN } ; 
  double _emal_53648__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_53647__pinl_3855__flat_149 { , NN } ; 
  double _emal_53646__pinl_3843__flat_95 { , NN } ; 
  double _emal_53645__pinl_3830__flat_149 { , NN } ; 
  double _emal_53644__pinl_3818__flat_95 { , NN } ; 
  double _emal_53643__pinl_3817__flat_96 { , NN } ; 
  double _emal_53642__pinl_3816__flat_149 { , NN } ; 
  double _emal_53641__pinl_3804__flat_95 { , NN } ; 
  double _emal_53640__pinl_3803__flat_149 { , NN } ; 
  double _emal_53639__pinl_3791__flat_95 { , NN } ; 
  double _emal_53638__pinl_3790__flat_96 { , NN } ; 
  double _emal_53637__pinl_3789__flat_95 { , NN } ; 
  bool _emal_53636__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51530 { , NN } ; 
  int _iveras_51529 { , NN } ; 
  int _ivesli_48383 { , NN } ; 
  int _ivesli_48381 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7138 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_53655__wlsimp_7138 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7138 = _fill_( 0, _emal_53655__wlsimp_7138); 
    _emal_53654__iveras_51529 = _alloc_( 1, 0, [:int]); 
    _iveras_51529 = _fill_( 0, _emal_53654__iveras_51529); 
    _ivesli_48383 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51529), _iveras_51529); 
    _emal_53652__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48383, P), _emal_53652__pinl_3772__flat_149); 
    _free_( _ivesli_48383); 
    _emal_53651__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_53651__pinl_3773__eat_768__SSA3_1); 
    _emal_53650__iveras_51530 = _alloc_( 1, 0, [:int]); 
    _iveras_51530 = _fill_( 1, _emal_53650__iveras_51530); 
    _ivesli_48381 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51530), _iveras_51530); 
    _emal_53648__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48381, P), _emal_53648__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48381); 
    _emal_53647__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_7138, q), _emal_53647__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_53645__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_53645__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_53642__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_53642__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_53640__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_7138, p), _emal_53640__pinl_3803__flat_149); 
    _free_( _wlsimp_7138); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_53636__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_53636__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_53656__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_53656__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5074_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5074_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int{0} l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5074_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_53657__dlirmov_50986__flat_65 { , NN } ; 
  int{0} _dlirmov_50986__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _inc_rc_( numr, 1); 
    _inc_rc_( numl, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _free_( _flat_59); 
    _emal_53657__dlirmov_50986__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50986__flat_65 = _fill_( 0, _emal_53657__dlirmov_50986__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5073_BlockHoare__Loop_24( _dlirmov_50986__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5073_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5073_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5073_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_53676__esd_29724 { , NN } ; 
  bool _emal_53675__pinl_3238__flat_194 { , NN } ; 
  int _emal_53674__esd_29723 { , NN } ; 
  bool _emal_53673__pinl_3360__flat_194 { , NN } ; 
  int _emal_53672__ctz_7754 { , NN } ; 
  bool _emal_53671__pinl_3482__flat_196 { , NN } ; 
  int _emal_53670__esd_8363 { , NN } ; 
  bool _emal_53669__pinl_3483__flat_196 { , NN } ; 
  int _emal_53668__pinl_3748__flat_41 { , NN } ; 
  int _emal_53667__pinl_3749__flat_41 { , NN } ; 
  int _emal_53666__pinl_3750__flat_40 { , NN } ; 
  int _emal_53665__pinl_3751__flat_40 { , NN } ; 
  int _emal_53664__esd_29719 { , NN } ; 
  bool _emal_53663__pinl_3752__flat_194 { , NN } ; 
  int _emal_53662__esd_29718 { , NN } ; 
  bool _emal_53661__pinl_3754__flat_194 { , NN } ; 
  int _emal_53660__pinl_3757__flat_41 { , NN } ; 
  bool _emal_53658__pinl_3758__flat_198 { , NN } ; 
  int _esd_29724 { , NN } ; 
  int _esd_29723 { , NN } ; 
  int _esd_29719 { , NN } ; 
  int _esd_29718 { , NN } ; 
  int _esd_8363 { , NN } ; 
  int _ctz_7754 { , NN } ; 
  int _ctz_7750 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_53676__esd_29724 = _alloc_( 1, 0, [:int]); 
  _esd_29724 = _fill_( _neg_S_( numl), _emal_53676__esd_29724); 
  _emal_53675__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_29724, 0), _emal_53675__pinl_3238__flat_194); 
  _free_( _esd_29724); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5063_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_53674__esd_29723 = _alloc_( 1, 0, [:int]); 
  _esd_29723 = _fill_( _neg_S_( numr), _emal_53674__esd_29723); 
  _emal_53673__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_29723, 0), _emal_53673__pinl_3360__flat_194); 
  _free_( _esd_29723); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5067_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_53672__ctz_7754 = _alloc_( 1, 0, [:int]); 
  _ctz_7754 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_53672__ctz_7754); 
  _emal_53671__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_7754, 0), _emal_53671__pinl_3482__flat_196); 
  _free_( _ctz_7754); 
  _hce_7 = _MAIN::_dup_5068_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_53670__esd_8363 = _alloc_( 1, 0, [:int]); 
  _esd_8363 = _fill_( _neg_S_( _hce_7), _emal_53670__esd_8363); 
  _emal_53669__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_8363, 0), _emal_53669__pinl_3483__flat_196); 
  _free_( _esd_8363); 
  P__SSA0_1 = _MAIN::_dup_5070_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_53668__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_53668__pinl_3748__flat_41); 
  _emal_53667__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_53667__pinl_3749__flat_41); 
  _emal_53666__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_53666__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_53665__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_53665__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_53664__esd_29719 = _alloc_( 1, 0, [:int]); 
  _esd_29719 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_53664__esd_29719); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_53663__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_29719, 0), _emal_53663__pinl_3752__flat_194); 
  _free_( _esd_29719); 
  l__SSA0_1 = _MAIN::_dup_5071_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_53662__esd_29718 = _alloc_( 1, 0, [:int]); 
  _esd_29718 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_53662__esd_29718); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_53661__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_29718, 0), _emal_53661__pinl_3754__flat_194); 
  _free_( _esd_29718); 
  r__SSA0_1 = _MAIN::_dup_5072_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_53660__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_53660__pinl_3757__flat_41); 
  _ctz_7750 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_53658__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_7750, 0), _emal_53658__pinl_3758__flat_198); 
  _free_( _ctz_7750); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5073_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5072_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5072_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5072_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_53677__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_53677__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_53677__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5071_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5071_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5071_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_53678__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_53678__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_53678__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5070_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5070_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5070_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55422_val { , NN } ; 
  bool _emrb_55421_mem { , NN } ; 
  double[1000000,2] _emlr_55103_P { , NN } ; 
  double[1000000,2] _emlr_55102_P { , NN } ; 
  int{0} _emlr_55101_j { , NN } ; 
  int _emlr_55100_j { , NN } ; 
  int _emal_53682__dlirmov_51641__iveras_51531 { , NN } ; 
  int _emal_53681__dlirmov_51642__iveras_51532 { , NN } ; 
  int _emal_53680__dlirmov_51643__iveras_51533 { , NN } ; 
  int _emal_53679__dlirmov_51644__iveras_51534 { , NN } ; 
  int _dlirmov_51644__iveras_51534 { , NN } ; 
  int _dlirmov_51643__iveras_51533 { , NN } ; 
  int _dlirmov_51642__iveras_51532 { , NN } ; 
  int _dlirmov_51641__iveras_51531 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_53682__dlirmov_51641__iveras_51531 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51641__iveras_51531 = _fill_( 0, _emal_53682__dlirmov_51641__iveras_51531); 
    _emal_53681__dlirmov_51642__iveras_51532 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51642__iveras_51532 = _fill_( 0, _emal_53681__dlirmov_51642__iveras_51532); 
    _emal_53680__dlirmov_51643__iveras_51533 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51643__iveras_51533 = _fill_( 1, _emal_53680__dlirmov_51643__iveras_51533); 
    _emal_53679__dlirmov_51644__iveras_51534 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51644__iveras_51534 = _fill_( 1, _emal_53679__dlirmov_51644__iveras_51534); 
    _emlr_55102_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55421_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55422_val = _fill_( _isreused_( _emlr_55102_P, P), _emrb_55421_mem); 
    _emlr_55103_P = _MAIN::_dup_5070_BlockHoare__Cond_16__ReuseCond_17( _emrb_55422_val, _emlr_55102_P, P) ; 
    _emlr_55100_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55101_j = _fill_( _copy_( j), _emlr_55100_j); 
    P__SSA0_1 = _MAIN::_dup_5069_BlockHoare__Loop_15( _dlirmov_51644__iveras_51534, _dlirmov_51643__iveras_51533, _dlirmov_51642__iveras_51532, _dlirmov_51641__iveras_51531, offsetsl, offsetsr, startl, startr, num, _emlr_55101_j, r, l, _emlr_55103_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5070_BlockHoare__Cond_16__ReuseCond_17(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5070_BlockHoare__Cond_16__ReuseCond_17( bool _emrb_55417 { ,NN } , double[1000000,2] _emlr_55102_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5070_BlockHoare__Cond_16__ReuseCond_17 ::  ---
 */
{ 
  double[1000000,2] _emrb_55420 { , NN } ; 
  double[1000000,2] _dup_55419__emlr_55103_P { , NN } ; 
  double[1000000,2] _dup_55418__emlr_55103_P { , NN } ; 

  if (_emrb_55417) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55417, 1); 
    _dup_55418__emlr_55103_P = _fill_( _noop_( P), _emlr_55102_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55417, 1); 
    _dup_55419__emlr_55103_P = _fill_( _copy_( P), _emlr_55102_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55420 = ( _emrb_55417 ? _dup_55418__emlr_55103_P : _dup_55419__emlr_55103_P ); 
  return( _emrb_55420); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5069_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5069_BlockHoare__Loop_15( int _iveras_51534 { ,NN } , int _iveras_51533 { ,NN } , int _iveras_51532 { ,NN } , int _iveras_51531 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5069_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55784 { , NN } ; 
  double _emdr_55783 { , NN } ; 
  double _emdr_55782 { , NN } ; 
  int _emal_53738__ivesli_48404 { , NN } ; 
  int _emal_53737__pinl_3507__flat_68 { , NN } ; 
  int _emal_53736__pinl_3510__flat_41 { , NN } ; 
  int _emal_53735__ivesli_48401 { , NN } ; 
  int _emal_53734__pinl_3522__flat_68 { , NN } ; 
  int _emal_53733__pinl_3525__flat_40 { , NN } ; 
  int _emal_53730__ivesli_48400 { , NN } ; 
  double _emal_53729__pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _emal_53727__ivesli_48396 { , NN } ; 
  double _emal_53726__pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _emal_53723__pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53721__pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53719__uprf_7440 { , NN } ; 
  int _emal_53718__pinl_5688_z { , NN } ; 
  double _emal_53714_val { , NN } ; 
  double _emal_53713_val { , NN } ; 
  double[1000000,2] _emal_53712__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_53711__pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _emal_53710__pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _emal_53708__pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53707__pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53705__uprf_7437 { , NN } ; 
  int _emal_53704__pinl_5708_z { , NN } ; 
  double _emal_53700_val { , NN } ; 
  double _emal_53699_val { , NN } ; 
  double _emal_53697__pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _emal_53696__pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _emal_53694__pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53693__pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53688_val { , NN } ; 
  double _emal_53687_val { , NN } ; 
  int _emal_53685__pinl_3746__flat_122 { , NN } ; 
  int _emal_53684__ctz_7756 { , NN } ; 
  bool _emal_53683__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48404 { , NN } ; 
  int _ivesli_48401 { , NN } ; 
  int _ivesli_48400 { , NN } ; 
  int _ivesli_48398 { , NN } ; 
  int _ivesli_48397 { , NN } ; 
  int _ivesli_48396 { , NN } ; 
  int _ivesli_48394 { , NN } ; 
  int _ivesli_48393 { , NN } ; 
  int _ivesli_48389 { , NN } ; 
  int _wlidx_47898__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47897__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47896__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11527 { , NN } ; 
  int[2] _wlsb_11499 { , NN } ; 
  int[2] _wlsb_11471 { , NN } ; 
  int _eat_10352 { , NN } ; 
  int _eat_10351 { , NN } ; 
  int _eat_10350 { , NN } ; 
  int _ctz_7756 { , NN } ; 
  double _pinl_3580__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7440 { , NN } ; 
  int _uprf_7437 { , NN } ; 
  double _pinl_3594__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA2_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5688_z { , NN } ; 
  int _pinl_5708_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_53738__ivesli_48404 = _alloc_( 1, 0, [:int]); 
  _ivesli_48404 = _fill_( _add_SxS_( startr, j), _emal_53738__ivesli_48404); 
  _emal_53737__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48404, offsetsr), _emal_53737__pinl_3507__flat_68); 
  _free_( _ivesli_48404); 
  _emal_53736__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_53736__pinl_3510__flat_41); 
  _emal_53735__ivesli_48401 = _alloc_( 1, 0, [:int]); 
  _ivesli_48401 = _fill_( _add_SxS_( startl, j), _emal_53735__ivesli_48401); 
  _emal_53734__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48401, offsetsl), _emal_53734__pinl_3522__flat_68); 
  _free_( _ivesli_48401); 
  _emal_53733__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_53733__pinl_3525__flat_40); 
  _ivesli_48397 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48398 = _fill_( _neg_S_( _ivesli_48397), _ivesli_48397); 
  _emal_53730__ivesli_48400 = _alloc_( 1, 0, [:int]); 
  _ivesli_48400 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48398, _iveras_51531), _emal_53730__ivesli_48400); 
  _emal_53729__pinl_3743__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48400, P), _emal_53729__pinl_3743__flat_149__SSA2_1); 
  _ivesli_48394 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_53727__ivesli_48396 = _alloc_( 1, 0, [:int]); 
  _ivesli_48396 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48394, _iveras_51532), _emal_53727__ivesli_48396); 
  _emal_53726__pinl_3730__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48396, P), _emal_53726__pinl_3730__flat_149__SSA2_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1, _pinl_3743__flat_149__SSA2_1), _pinl_3730__flat_149__SSA2_1); 
  _free_( _pinl_3743__flat_149__SSA2_1); 
  _ivesli_48393 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48398, _iveras_51533), _ivesli_48398); 
  _emal_53723__pinl_3743__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48393, P), _emal_53723__pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _ivesli_48389 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48394, _iveras_51534), _ivesli_48394); 
  _emal_53721__pinl_3730__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48389, P), _emal_53721__pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _pinl_3716__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA2_1__SSA3_1, _pinl_3743__flat_149__SSA2_1__SSA3_1), _pinl_3730__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3743__flat_149__SSA2_1__SSA3_1); 
  _emal_53719__uprf_7440 = _alloc_( 1, 0, [:int]); 
  _uprf_7440 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_53719__uprf_7440); 
  _emal_53718__pinl_5688_z = _alloc_( 1, 0, [:int]); 
  _pinl_5688_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_7440), _emal_53718__pinl_5688_z); 
  _emal_53712__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10350 = _alloc_( 1, 0, [:int]); 
  _wlidx_47896__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_11527=[_pinl_3681__eat_766, _eat_10350] (IDXS:_wlidx_47896__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53713_val = _wl_assign_( _pinl_3716__flat_1457, _emal_53712__pinl_3535_P__SSA0_1, _wlsb_11527, _wlidx_47896__pinl_3535_P__SSA0_1); 
        } : _emal_53713_val ; ,
      op_1 =
        { 
          _emal_53714_val = _wl_assign_( _pinl_3716__flat_1457__SSA3_2, _emal_53712__pinl_3535_P__SSA0_1, _wlsb_11527, _wlidx_47896__pinl_3535_P__SSA0_1); 
        } : _emal_53714_val ; ,
      op_2 =
        { 
          _emdr_55782 = _noop_( _wlsb_11527); 
        } : _emdr_55782 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7440, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7440), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7440, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7440), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5688_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5688_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_53712__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47896__pinl_3535_P__SSA0_1)); 
  _free_( _eat_10350); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA3_2); 
  _free_( _wlidx_47896__pinl_3535_P__SSA0_1); 
  _emal_53711__pinl_3675__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48400, _pinl_3535_P__SSA0_1), _emal_53711__pinl_3675__flat_149__SSA2_1); 
  _emal_53710__pinl_3662__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48396, _pinl_3535_P__SSA0_1), _emal_53710__pinl_3662__flat_149__SSA2_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1, _pinl_3675__flat_149__SSA2_1), _pinl_3662__flat_149__SSA2_1); 
  _free_( _pinl_3675__flat_149__SSA2_1); 
  _emal_53708__pinl_3675__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48393, _pinl_3535_P__SSA0_1), _emal_53708__pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53707__pinl_3662__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48389, _pinl_3535_P__SSA0_1), _emal_53707__pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _pinl_3648__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA2_1__SSA3_1, _pinl_3675__flat_149__SSA2_1__SSA3_1), _pinl_3662__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3675__flat_149__SSA2_1__SSA3_1); 
  _emal_53705__uprf_7437 = _alloc_( 1, 0, [:int]); 
  _uprf_7437 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_53705__uprf_7437); 
  _emal_53704__pinl_5708_z = _alloc_( 1, 0, [:int]); 
  _pinl_5708_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_7437), _emal_53704__pinl_5708_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10351 = _alloc_( 1, 0, [:int]); 
  _wlidx_47897__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_11499=[_pinl_3613__eat_766, _eat_10351] (IDXS:_wlidx_47897__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53699_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_11499, _wlidx_47897__pinl_3537_P__SSA0_3); 
        } : _emal_53699_val ; ,
      op_1 =
        { 
          _emal_53700_val = _wl_assign_( _pinl_3648__flat_1465__SSA3_2, _pinl_3535_P__SSA0_1, _wlsb_11499, _wlidx_47897__pinl_3537_P__SSA0_3); 
        } : _emal_53700_val ; ,
      op_2 =
        { 
          _emdr_55783 = _noop_( _wlsb_11499); 
        } : _emdr_55783 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_7437, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_7437), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_7437, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_7437), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5708_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5708_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47897__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_5708_z); 
  _free_( _uprf_7437); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_10351); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA3_2); 
  _free_( _wlidx_47897__pinl_3537_P__SSA0_3); 
  _emal_53697__pinl_3607__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48400, _pinl_3537_P__SSA0_3), _emal_53697__pinl_3607__flat_149__SSA2_1); 
  _free_( _ivesli_48400); 
  _emal_53696__pinl_3594__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48396, _pinl_3537_P__SSA0_3), _emal_53696__pinl_3594__flat_149__SSA2_1); 
  _free_( _ivesli_48396); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1, _pinl_3607__flat_149__SSA2_1), _pinl_3594__flat_149__SSA2_1); 
  _free_( _pinl_3607__flat_149__SSA2_1); 
  _emal_53694__pinl_3607__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48393, _pinl_3537_P__SSA0_3), _emal_53694__pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48393); 
  _emal_53693__pinl_3594__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48389, _pinl_3537_P__SSA0_3), _emal_53693__pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _ivesli_48389); 
  _pinl_3580__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA2_1__SSA3_1, _pinl_3607__flat_149__SSA2_1__SSA3_1), _pinl_3594__flat_149__SSA2_1__SSA3_1); 
  _free_( _pinl_3607__flat_149__SSA2_1__SSA3_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_10352 = _alloc_( 1, 0, [:int]); 
  _wlidx_47898__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_11471=[_pinl_3545__eat_766, _eat_10352] (IDXS:_wlidx_47898__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_53687_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_11471, _wlidx_47898__pinl_3539_P__SSA0_5); 
        } : _emal_53687_val ; ,
      op_1 =
        { 
          _emal_53688_val = _wl_assign_( _pinl_3580__flat_1465__SSA3_2, _pinl_3537_P__SSA0_3, _wlsb_11471, _wlidx_47898__pinl_3539_P__SSA0_5); 
        } : _emal_53688_val ; ,
      op_2 =
        { 
          _emdr_55784 = _noop_( _wlsb_11471); 
        } : _emdr_55784 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_7440, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_7440), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_7440, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_7440), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_5688_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_5688_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47898__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_5688_z); 
  _free_( _uprf_7440); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_10352); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA3_2); 
  _free_( _wlidx_47898__pinl_3539_P__SSA0_5); 
  _emal_53685__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_53685__pinl_3746__flat_122); 
  _emal_53684__ctz_7756 = _alloc_( 1, 0, [:int]); 
  _ctz_7756 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_53684__ctz_7756); 
  _emal_53683__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_7756, 0), _emal_53683__pinl_3747__flat_196); 
  _free_( _ctz_7756); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5069_BlockHoare__Loop_15( _iveras_51534, _iveras_51533, _iveras_51532, _iveras_51531, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51531, 1); 
    _dec_rc_( _iveras_51532, 1); 
    _dec_rc_( _iveras_51533, 1); 
    _dec_rc_( _iveras_51534, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5068_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5068_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5068_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5067_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5067_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5067_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55415_val { , NN } ; 
  bool _emrb_55414_mem { , NN } ; 
  int{0} _emlr_55109_startr__SSA0_1 { , NN } ; 
  int _emlr_55108_startr__SSA0_1 { , NN } ; 
  int _emlr_55107_numr { , NN } ; 
  int _emlr_55106_numr { , NN } ; 
  int[64] _emlr_55105_offsetsr { , NN } ; 
  int[64] _emlr_55104_offsetsr { , NN } ; 
  int _emal_53746_startr__SSA0_1 { , NN } ; 
  int _emal_53745__ivesplit_24949 { , NN } ; 
  double _emal_53744__pinl_6514__ls_6189 { , NN } ; 
  double _emal_53743__pinl_6515__ls_6190 { , NN } ; 
  double _emal_53742__pinl_6510__ls_6179 { , NN } ; 
  double _emal_53741__pinl_6511__ls_6180 { , NN } ; 
  int _emal_53740__dlirmov_51639__iveras_51423 { , NN } ; 
  int _emal_53739__dlirmov_51640__iveras_51424 { , NN } ; 
  int _dlirmov_51640__iveras_51424 { , NN } ; 
  int _dlirmov_51639__iveras_51423 { , NN } ; 
  int{1} _ivesplit_24949 { , NN } ; 
  double _pinl_6515__ls_6190 { , NN } ; 
  double _pinl_6514__ls_6189 { , NN } ; 
  double _pinl_6511__ls_6180 { , NN } ; 
  double _pinl_6510__ls_6179 { , NN } ; 
  int _pinl_6507_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_6506_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_6505_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6504_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_53746_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_53746_startr__SSA0_1); 
    _emal_53745__ivesplit_24949 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24949 = _fill_( 1, _emal_53745__ivesplit_24949); 
    _emal_53744__pinl_6514__ls_6189 = _alloc_( 1, 0, [:int]); 
    _pinl_6514__ls_6189 = _fill_( _idx_sel_( _ivesplit_24949, q), _emal_53744__pinl_6514__ls_6189); 
    _emal_53743__pinl_6515__ls_6190 = _alloc_( 1, 0, [:int]); 
    _pinl_6515__ls_6190 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_53743__pinl_6515__ls_6190); 
    _emal_53742__pinl_6510__ls_6179 = _alloc_( 1, 0, [:int]); 
    _pinl_6510__ls_6179 = _fill_( _idx_sel_( _ivesplit_24949, p), _emal_53742__pinl_6510__ls_6179); 
    _free_( _ivesplit_24949); 
    _emal_53741__pinl_6511__ls_6180 = _alloc_( 1, 0, [:int]); 
    _pinl_6511__ls_6180 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_53741__pinl_6511__ls_6180); 
    _emal_53740__dlirmov_51639__iveras_51423 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51639__iveras_51423 = _fill_( 0, _emal_53740__dlirmov_51639__iveras_51423); 
    _emal_53739__dlirmov_51640__iveras_51424 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51640__iveras_51424 = _fill_( 1, _emal_53739__dlirmov_51640__iveras_51424); 
    _emlr_55108_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55109_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55108_startr__SSA0_1); 
    _emlr_55106_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55107_numr = _fill_( _copy_( numr), _emlr_55106_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55104_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55414_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55415_val = _fill_( _isreused_( _emlr_55104_offsetsr, offsetsr), _emrb_55414_mem); 
    _emlr_55105_offsetsr = _MAIN::_dup_5067_BlockHoare__Cond_20__ReuseCond_16( _emrb_55415_val, _emlr_55104_offsetsr, offsetsr) ; 
    _pinl_6504_argmax__SSA0_1, _pinl_6505_max__SSA0_1, _pinl_6506_offsetsr__SSA0_1, _pinl_6507_numr__SSA0_1 = _MAIN::_dup_6517_BlockHoare__Loop_18( _dlirmov_51640__iveras_51424, _dlirmov_51639__iveras_51423, argmax, max, _emlr_55105_offsetsr, _emlr_55107_numr, _emlr_55109_startr__SSA0_1, _pinl_6515__ls_6190, _pinl_6514__ls_6189, _pinl_6511__ls_6180, _pinl_6510__ls_6179, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_6507_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_6506_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_6505_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_6504_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5067_BlockHoare__Cond_20__ReuseCond_16(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5067_BlockHoare__Cond_20__ReuseCond_16( bool _emrb_55410 { ,NN } , int[64] _emlr_55104_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5067_BlockHoare__Cond_20__ReuseCond_16 ::  ---
 */
{ 
  int[64] _emrb_55413 { , NN } ; 
  int[64] _dup_55412__emlr_55105_offsetsr { , NN } ; 
  int[64] _dup_55411__emlr_55105_offsetsr { , NN } ; 

  if (_emrb_55410) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55410, 1); 
    _dup_55411__emlr_55105_offsetsr = _fill_( _noop_( offsetsr), _emlr_55104_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55410, 1); 
    _dup_55412__emlr_55105_offsetsr = _fill_( _copy_( offsetsr), _emlr_55104_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55413 = ( _emrb_55410 ? _dup_55411__emlr_55105_offsetsr : _dup_55412__emlr_55105_offsetsr ); 
  return( _emrb_55413); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5063_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5063_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5063_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55408_val { , NN } ; 
  bool _emrb_55407_mem { , NN } ; 
  int{0} _emlr_55115_startl__SSA0_1 { , NN } ; 
  int _emlr_55114_startl__SSA0_1 { , NN } ; 
  int _emlr_55113_numl { , NN } ; 
  int _emlr_55112_numl { , NN } ; 
  int[64] _emlr_55111_offsetsl { , NN } ; 
  int[64] _emlr_55110_offsetsl { , NN } ; 
  int _emal_53754_startl__SSA0_1 { , NN } ; 
  int _emal_53753__ivesplit_24957 { , NN } ; 
  double _emal_53752__pinl_6500__ls_6209 { , NN } ; 
  double _emal_53751__pinl_6501__ls_6210 { , NN } ; 
  double _emal_53750__pinl_6496__ls_6199 { , NN } ; 
  double _emal_53749__pinl_6497__ls_6200 { , NN } ; 
  int _emal_53748__dlirmov_51637__iveras_51425 { , NN } ; 
  int _emal_53747__dlirmov_51638__iveras_51426 { , NN } ; 
  int _dlirmov_51638__iveras_51426 { , NN } ; 
  int _dlirmov_51637__iveras_51425 { , NN } ; 
  int{1} _ivesplit_24957 { , NN } ; 
  double _pinl_6501__ls_6210 { , NN } ; 
  double _pinl_6500__ls_6209 { , NN } ; 
  double _pinl_6497__ls_6200 { , NN } ; 
  double _pinl_6496__ls_6199 { , NN } ; 
  int _pinl_6493_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_6492_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_6491_max__SSA0_1 { , NN } ; 
  double[2] _pinl_6490_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_53754_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_53754_startl__SSA0_1); 
    _emal_53753__ivesplit_24957 = _alloc_( 1, 0, [:int]); 
    _ivesplit_24957 = _fill_( 1, _emal_53753__ivesplit_24957); 
    _emal_53752__pinl_6500__ls_6209 = _alloc_( 1, 0, [:int]); 
    _pinl_6500__ls_6209 = _fill_( _idx_sel_( _ivesplit_24957, q), _emal_53752__pinl_6500__ls_6209); 
    _emal_53751__pinl_6501__ls_6210 = _alloc_( 1, 0, [:int]); 
    _pinl_6501__ls_6210 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_53751__pinl_6501__ls_6210); 
    _emal_53750__pinl_6496__ls_6199 = _alloc_( 1, 0, [:int]); 
    _pinl_6496__ls_6199 = _fill_( _idx_sel_( _ivesplit_24957, p), _emal_53750__pinl_6496__ls_6199); 
    _free_( _ivesplit_24957); 
    _emal_53749__pinl_6497__ls_6200 = _alloc_( 1, 0, [:int]); 
    _pinl_6497__ls_6200 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_53749__pinl_6497__ls_6200); 
    _emal_53748__dlirmov_51637__iveras_51425 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51637__iveras_51425 = _fill_( 0, _emal_53748__dlirmov_51637__iveras_51425); 
    _emal_53747__dlirmov_51638__iveras_51426 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51638__iveras_51426 = _fill_( 1, _emal_53747__dlirmov_51638__iveras_51426); 
    _emlr_55114_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55115_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55114_startl__SSA0_1); 
    _emlr_55112_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55113_numl = _fill_( _copy_( numl), _emlr_55112_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55110_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55407_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55408_val = _fill_( _isreused_( _emlr_55110_offsetsl, offsetsl), _emrb_55407_mem); 
    _emlr_55111_offsetsl = _MAIN::_dup_5063_BlockHoare__Cond_23__ReuseCond_15( _emrb_55408_val, _emlr_55110_offsetsl, offsetsl) ; 
    _pinl_6490_argmax__SSA0_1, _pinl_6491_max__SSA0_1, _pinl_6492_offsetsl__SSA0_1, _pinl_6493_numl__SSA0_1 = _MAIN::_dup_6503_BlockHoare__Loop_21( _dlirmov_51638__iveras_51426, _dlirmov_51637__iveras_51425, argmax, max, _emlr_55111_offsetsl, _emlr_55113_numl, _emlr_55115_startl__SSA0_1, _pinl_6501__ls_6210, _pinl_6500__ls_6209, _pinl_6497__ls_6200, _pinl_6496__ls_6199, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_6493_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_6492_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_6491_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_6490_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5063_BlockHoare__Cond_23__ReuseCond_15(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5063_BlockHoare__Cond_23__ReuseCond_15( bool _emrb_55403 { ,NN } , int[64] _emlr_55110_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5063_BlockHoare__Cond_23__ReuseCond_15 ::  ---
 */
{ 
  int[64] _emrb_55406 { , NN } ; 
  int[64] _dup_55405__emlr_55111_offsetsl { , NN } ; 
  int[64] _dup_55404__emlr_55111_offsetsl { , NN } ; 

  if (_emrb_55403) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55403, 1); 
    _dup_55404__emlr_55111_offsetsl = _fill_( _noop_( offsetsl), _emlr_55110_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55403, 1); 
    _dup_55405__emlr_55111_offsetsl = _fill_( _copy_( offsetsl), _emlr_55110_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55406 = ( _emrb_55403 ? _dup_55404__emlr_55111_offsetsl : _dup_55405__emlr_55111_offsetsl ); 
  return( _emrb_55406); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4988_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_4988_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4988_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_4987_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_4987_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_4987_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4987_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_53761__ctz_7764 { , NN } ; 
  bool _emal_53760__pinl_3760__flat_197 { , NN } ; 
  int _emal_53759__ctz_7762 { , NN } ; 
  bool _emal_53758__pinl_4092__flat_197 { , NN } ; 
  int _emal_53757__ctz_7760 { , NN } ; 
  bool _emal_53756__pinl_4425__flat_196 { , NN } ; 
  bool _emal_53755__pinl_4645__flat_197 { , NN } ; 
  int _ctz_7764 { , NN } ; 
  int _ctz_7762 { , NN } ; 
  int _ctz_7760 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_53761__ctz_7764 = _alloc_( 1, 0, [:int]); 
  _ctz_7764 = _fill_( _sub_SxS_( l, r), _emal_53761__ctz_7764); 
  _emal_53760__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_7764, 0), _emal_53760__pinl_3760__flat_197); 
  _free_( _ctz_7764); 
  _hce_6 = _MAIN::_dup_4975_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_4979_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_53759__ctz_7762 = _alloc_( 1, 0, [:int]); 
  _ctz_7762 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_53759__ctz_7762); 
  _emal_53758__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_7762, 0), _emal_53758__pinl_4092__flat_197); 
  _free_( _ctz_7762); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_4985_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_53757__ctz_7760 = _alloc_( 1, 0, [:int]); 
  _ctz_7760 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_53757__ctz_7760); 
  _emal_53756__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_7760, 0), _emal_53756__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_4986_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_53755__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_7760, 0), _emal_53755__pinl_4645__flat_197); 
  _free_( _ctz_7760); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_4987_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4986_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_4986_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4986_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55787 { , NN } ; 
  double _emdr_55786 { , NN } ; 
  bool _emrb_55401_val { , NN } ; 
  bool _emrb_55400_mem { , NN } ; 
  int _emal_53809__iveras_51535 { , NN } ; 
  int _emal_53808__ivesli_48417 { , NN } ; 
  double _emal_53807__pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _emal_53806__iveras_51536 { , NN } ; 
  int _emal_53805__ivesli_48415 { , NN } ; 
  double _emal_53804__pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _emal_53803__pinl_4616__flat_1457 { , NN } ; 
  int _emal_53802__iveras_51537 { , NN } ; 
  int _emal_53801__ivesli_48413 { , NN } ; 
  double _emal_53800__pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _emal_53799__iveras_51538 { , NN } ; 
  int _emal_53798__ivesli_48411 { , NN } ; 
  double _emal_53797__pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53796__pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  int _emal_53795__uprf_7446 { , NN } ; 
  int _emal_53794__pinl_5544_z { , NN } ; 
  double[1000000,2] _emal_53788__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_53787__pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _emal_53786__pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _emal_53785__pinl_4548__flat_1465 { , NN } ; 
  double _emal_53784__pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53783__pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53782__pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  int _emal_53781__uprf_7443 { , NN } ; 
  int _emal_53780__pinl_5564_z { , NN } ; 
  double _emal_53776_val { , NN } ; 
  double _emal_53775_val { , NN } ; 
  double[1000000,2] _emal_53774__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_53773__pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _emal_53772__pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _emal_53771__pinl_4480__flat_1465 { , NN } ; 
  double _emal_53770__pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53769__pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _emal_53768__pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _emal_53764_val { , NN } ; 
  double _emal_53763_val { , NN } ; 
  double[1000000,2] _emal_53762__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51538 { , NN } ; 
  int _iveras_51537 { , NN } ; 
  int _iveras_51536 { , NN } ; 
  int _iveras_51535 { , NN } ; 
  int _ivesli_48417 { , NN } ; 
  int _ivesli_48415 { , NN } ; 
  int _ivesli_48413 { , NN } ; 
  int _ivesli_48411 { , NN } ; 
  int _wlidx_47901__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47900__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47899__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_11583 { , NN } ; 
  int[2] _wlsb_11555 { , NN } ; 
  int _eat_10348 { , NN } ; 
  int _eat_10347 { , NN } ; 
  double _pinl_4480__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA3_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA3_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1__SSA3_1 { , NN } ; 
  int _uprf_7446 { , NN } ; 
  int _uprf_7443 { , NN } ; 
  double _pinl_4494__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA2_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA2_1 { , NN } ; 
  int _pinl_5544_z { , NN } ; 
  int _pinl_5564_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_53809__iveras_51535 = _alloc_( 1, 0, [:int]); 
    _iveras_51535 = _fill_( 0, _emal_53809__iveras_51535); 
    _ivesli_48417 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51535), _iveras_51535); 
    _emal_53807__pinl_4643__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48417, P), _emal_53807__pinl_4643__flat_149__SSA2_1); 
    _emal_53806__iveras_51536 = _alloc_( 1, 0, [:int]); 
    _iveras_51536 = _fill_( 0, _emal_53806__iveras_51536); 
    _ivesli_48415 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51536), _iveras_51536); 
    _emal_53804__pinl_4630__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48415, P), _emal_53804__pinl_4630__flat_149__SSA2_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1, _pinl_4643__flat_149__SSA2_1), _pinl_4630__flat_149__SSA2_1); 
    _free_( _pinl_4643__flat_149__SSA2_1); 
    _emal_53802__iveras_51537 = _alloc_( 1, 0, [:int]); 
    _iveras_51537 = _fill_( 1, _emal_53802__iveras_51537); 
    _ivesli_48413 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51537), _iveras_51537); 
    _emal_53800__pinl_4643__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48413, P), _emal_53800__pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53799__iveras_51538 = _alloc_( 1, 0, [:int]); 
    _iveras_51538 = _fill_( 1, _emal_53799__iveras_51538); 
    _ivesli_48411 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51538), _iveras_51538); 
    _emal_53797__pinl_4630__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48411, P), _emal_53797__pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _pinl_4616__flat_1457__SSA3_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA2_1__SSA3_1, _pinl_4643__flat_149__SSA2_1__SSA3_1), _pinl_4630__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4643__flat_149__SSA2_1__SSA3_1); 
    _emal_53795__uprf_7446 = _alloc_( 1, 0, [:int]); 
    _uprf_7446 = _fill_( _add_SxS_( 1, l), _emal_53795__uprf_7446); 
    _emal_53794__pinl_5544_z = _alloc_( 1, 0, [:int]); 
    _pinl_5544_z = _fill_( _max_SxS_( _uprf_7446, l), _emal_53794__pinl_5544_z); 
    _emal_53788__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47899__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55400_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55401_val = _fill_( _isreused_( _emal_53788__pinl_4435_P__SSA0_1, P), _emrb_55400_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_4986_BlockHoare__Cond_1__ReuseCond_14( _emrb_55401_val, _pinl_4616__flat_1457, _pinl_5544_z, _uprf_7446, _pinl_4616__flat_1457__SSA3_2, _wlidx_47899__pinl_4435_P__SSA0_1, _emal_53788__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_53787__pinl_4575__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48417, _pinl_4435_P__SSA0_1), _emal_53787__pinl_4575__flat_149__SSA2_1); 
    _emal_53786__pinl_4562__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48415, _pinl_4435_P__SSA0_1), _emal_53786__pinl_4562__flat_149__SSA2_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1, _pinl_4575__flat_149__SSA2_1), _pinl_4562__flat_149__SSA2_1); 
    _free_( _pinl_4575__flat_149__SSA2_1); 
    _emal_53784__pinl_4575__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48413, _pinl_4435_P__SSA0_1), _emal_53784__pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53783__pinl_4562__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48411, _pinl_4435_P__SSA0_1), _emal_53783__pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _pinl_4548__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA2_1__SSA3_1, _pinl_4575__flat_149__SSA2_1__SSA3_1), _pinl_4562__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4575__flat_149__SSA2_1__SSA3_1); 
    _emal_53781__uprf_7443 = _alloc_( 1, 0, [:int]); 
    _uprf_7443 = _fill_( _add_SxS_( 1, r), _emal_53781__uprf_7443); 
    _emal_53780__pinl_5564_z = _alloc_( 1, 0, [:int]); 
    _pinl_5564_z = _fill_( _max_SxS_( _uprf_7443, r), _emal_53780__pinl_5564_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10347 = _alloc_( 1, 0, [:int]); 
    _wlidx_47900__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_11583=[_pinl_4513__eat_766, _eat_10347] (IDXS:_wlidx_47900__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53775_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_11583, _wlidx_47900__pinl_4437_P__SSA0_3); 
          } : _emal_53775_val ; ,
        op_1 =
          { 
            _emal_53776_val = _wl_assign_( _pinl_4548__flat_1465__SSA3_2, _pinl_4435_P__SSA0_1, _wlsb_11583, _wlidx_47900__pinl_4437_P__SSA0_3); 
          } : _emal_53776_val ; ,
        op_2 =
          { 
            _emdr_55786 = _noop_( _wlsb_11583); 
          } : _emdr_55786 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_7443, 1 ]
         */
        (r => _uprf_7443), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_7443, 2 ]
         */
        (r => _uprf_7443), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5564_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5564_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47900__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_5564_z); 
    _free_( _uprf_7443); 
    _free_( _eat_10347); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA3_2); 
    _free_( _wlidx_47900__pinl_4437_P__SSA0_3); 
    _emal_53773__pinl_4507__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48417, _pinl_4437_P__SSA0_3), _emal_53773__pinl_4507__flat_149__SSA2_1); 
    _free_( _ivesli_48417); 
    _emal_53772__pinl_4494__flat_149__SSA2_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1 = _fill_( _idx_sel_( _ivesli_48415, _pinl_4437_P__SSA0_3), _emal_53772__pinl_4494__flat_149__SSA2_1); 
    _free_( _ivesli_48415); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1, _pinl_4507__flat_149__SSA2_1), _pinl_4494__flat_149__SSA2_1); 
    _free_( _pinl_4507__flat_149__SSA2_1); 
    _emal_53770__pinl_4507__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48413, _pinl_4437_P__SSA0_3), _emal_53770__pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48413); 
    _emal_53769__pinl_4494__flat_149__SSA2_1__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA2_1__SSA3_1 = _fill_( _idx_sel_( _ivesli_48411, _pinl_4437_P__SSA0_3), _emal_53769__pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _ivesli_48411); 
    _pinl_4480__flat_1465__SSA3_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA2_1__SSA3_1, _pinl_4507__flat_149__SSA2_1__SSA3_1), _pinl_4494__flat_149__SSA2_1__SSA3_1); 
    _free_( _pinl_4507__flat_149__SSA2_1__SSA3_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_10348 = _alloc_( 1, 0, [:int]); 
    _wlidx_47901__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_11555=[_pinl_4445__eat_766, _eat_10348] (IDXS:_wlidx_47901__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_53763_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_11555, _wlidx_47901__pinl_4439_P__SSA0_5); 
          } : _emal_53763_val ; ,
        op_1 =
          { 
            _emal_53764_val = _wl_assign_( _pinl_4480__flat_1465__SSA3_2, _pinl_4437_P__SSA0_3, _wlsb_11555, _wlidx_47901__pinl_4439_P__SSA0_5); 
          } : _emal_53764_val ; ,
        op_2 =
          { 
            _emdr_55787 = _noop_( _wlsb_11555); 
          } : _emdr_55787 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7446, 1 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7446, 2 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5544_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5544_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47901__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_5544_z); 
    _free_( _uprf_7446); 
    _free_( _eat_10348); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA3_2); 
    _free_( _wlidx_47901__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4986_BlockHoare__Cond_1__ReuseCond_14(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_4986_BlockHoare__Cond_1__ReuseCond_14( bool _emrb_55376 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_5544_z { ,NN } , int _uprf_7446 { ,NN } , double _pinl_4616__flat_1457__SSA3_2 { ,NN } , int _wlidx_47899__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_53788__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_4986_BlockHoare__Cond_1__ReuseCond_14 ::  ---
 */
{ 
  double _emdr_55785 { , NN } ; 
  double[1000000,2] _emrb_55399 { , NN } ; 
  double _dup_55398__emal_53793_val { , NN } ; 
  double _dup_55397__pinl_5555__flat_28 { , NN } ; 
  double _dup_55396__emal_53791__dup_11617__pinl_5555__flat_28 { , NN } ; 
  int _dup_55395__ivesli_48409 { , NN } ; 
  int _dup_55394__emal_53792__ivesli_48409 { , NN } ; 
  double _dup_55393__emal_53790_val { , NN } ; 
  double _dup_55392__emal_53789_val { , NN } ; 
  double[1000000,2] _dup_55391__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55390__eat_10346 { , NN } ; 
  int _dup_55389__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55388__wlsb_11611 { , NN } ; 
  double _dup_55382__emal_53790_val { , NN } ; 
  double _dup_55381__emal_53789_val { , NN } ; 
  double[1000000,2] _dup_55380__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55379__eat_10346 { , NN } ; 
  int _dup_55378__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55377__wlsb_11611 { , NN } ; 

  if (_emrb_55376) 
  { 
    _dec_rc_( _emrb_55376, 1); 
    _dup_55378__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55379__eat_10346 = _alloc_( 1, 0, [:int]); 
    _dup_55380__pinl_4435_P__SSA0_1 = with2 (_dup_55377__wlsb_11611=[_dup_55378__pinl_4581__eat_766, _dup_55379__eat_10346] (IDXS:_wlidx_47899__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55381__emal_53789_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53788__pinl_4435_P__SSA0_1, _dup_55377__wlsb_11611, _wlidx_47899__pinl_4435_P__SSA0_1); 
          } : _dup_55381__emal_53789_val ; ,
        op_1 =
          { 
            _dup_55382__emal_53790_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53788__pinl_4435_P__SSA0_1, _dup_55377__wlsb_11611, _wlidx_47899__pinl_4435_P__SSA0_1); 
          } : _dup_55382__emal_53790_val ; ,
        op_2 =
          { 
            _emdr_55785 = _noop_( _dup_55377__wlsb_11611); 
          } : _emdr_55785 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7446, 1 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7446, 2 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5544_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5544_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53788__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47899__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55379__eat_10346); 
    _free_( _dup_55378__pinl_4581__eat_766); 
    _free_( _wlidx_47899__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55376, 1); 
    _dup_55389__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55390__eat_10346 = _alloc_( 1, 0, [:int]); 
    _dup_55391__pinl_4435_P__SSA0_1 = with2 (_dup_55388__wlsb_11611=[_dup_55389__pinl_4581__eat_766, _dup_55390__eat_10346] (IDXS:_wlidx_47899__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55392__emal_53789_val = _wl_assign_( _pinl_4616__flat_1457, _emal_53788__pinl_4435_P__SSA0_1, _dup_55388__wlsb_11611, _wlidx_47899__pinl_4435_P__SSA0_1); 
          } : _dup_55392__emal_53789_val ; ,
        op_1 =
          { 
            _dup_55393__emal_53790_val = _wl_assign_( _pinl_4616__flat_1457__SSA3_2, _emal_53788__pinl_4435_P__SSA0_1, _dup_55388__wlsb_11611, _wlidx_47899__pinl_4435_P__SSA0_1); 
          } : _dup_55393__emal_53790_val ; ,
        op_2 =
          { 
            _dup_55394__emal_53792__ivesli_48409 = _alloc_( 1, 0, [:int]); 
            _dup_55395__ivesli_48409 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55389__pinl_4581__eat_766, _dup_55390__eat_10346), _dup_55394__emal_53792__ivesli_48409); 
            _dup_55396__emal_53791__dup_11617__pinl_5555__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55397__pinl_5555__flat_28 = _fill_( _idx_sel_( _dup_55395__ivesli_48409, P), _dup_55396__emal_53791__dup_11617__pinl_5555__flat_28); 
            _free_( _dup_55395__ivesli_48409); 
            _dup_55398__emal_53793_val = _wl_assign_( _dup_55397__pinl_5555__flat_28, _emal_53788__pinl_4435_P__SSA0_1, _dup_55388__wlsb_11611, _wlidx_47899__pinl_4435_P__SSA0_1); 
            _free_( _dup_55397__pinl_5555__flat_28); 
          } : _dup_55398__emal_53793_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_7446, 1 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_7446, 2 ]
         */
        (l => _uprf_7446), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_5544_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_5544_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_53788__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47899__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55389__pinl_4581__eat_766); 
    _free_( _dup_55390__eat_10346); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47899__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA3_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55399 = ( _emrb_55376 ? _dup_55380__pinl_4435_P__SSA0_1 : _dup_55391__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55399); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4985_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_4985_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4985_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_53811__ctz_7766 { , NN } ; 
  bool _emal_53810__pinl_4093__flat_197 { , NN } ; 
  int _ctz_7766 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_53811__ctz_7766 = _alloc_( 1, 0, [:int]); 
    _ctz_7766 = _fill_( _sub_SxS_( l, r), _emal_53811__ctz_7766); 
    _emal_53810__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_7766, 0), _emal_53810__pinl_4093__flat_197); 
    _free_( _ctz_7766); 
    _hce_4 = _MAIN::_dup_4980_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_4984_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4984_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_4984_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4984_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55157_r { , NN } ; 
  int _emlr_55156_r { , NN } ; 
  int _emal_53819__dlirmov_50729__wlsimp_7219 { , NN } ; 
  int _emal_53818__dlirmov_50731__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  double _emal_53817__dlirmov_50734__pinl_4296__flat_149 { , NN } ; 
  double _emal_53816__dlirmov_50737__pinl_4271__flat_149 { , NN } ; 
  double _emal_53815__dlirmov_50740__pinl_4257__flat_149 { , NN } ; 
  double _emal_53814__dlirmov_50743__pinl_4244__flat_149 { , NN } ; 
  int _emal_53813__dlirmov_51611__iveras_51539 { , NN } ; 
  int _emal_53812__dlirmov_51612__iveras_51540 { , NN } ; 
  int _dlirmov_51612__iveras_51540 { , NN } ; 
  int _dlirmov_51611__iveras_51539 { , NN } ; 
  double _dlirmov_50743__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_50740__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_50737__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_50734__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_50731__pinl_4214__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50729__wlsimp_7219 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_53819__dlirmov_50729__wlsimp_7219 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50729__wlsimp_7219 = _fill_( 0, _emal_53819__dlirmov_50729__wlsimp_7219); 
    _emal_53818__dlirmov_50731__pinl_4214__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50731__pinl_4214__eat_768__SSA3_1 = _fill_( 1, _emal_53818__dlirmov_50731__pinl_4214__eat_768__SSA3_1); 
    _emal_53817__dlirmov_50734__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50734__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_50729__wlsimp_7219, q), _emal_53817__dlirmov_50734__pinl_4296__flat_149); 
    _emal_53816__dlirmov_50737__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50737__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_50731__pinl_4214__eat_768__SSA3_1, p), _emal_53816__dlirmov_50737__pinl_4271__flat_149); 
    _emal_53815__dlirmov_50740__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50740__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_50731__pinl_4214__eat_768__SSA3_1, q), _emal_53815__dlirmov_50740__pinl_4257__flat_149); 
    _free_( _dlirmov_50731__pinl_4214__eat_768__SSA3_1); 
    _emal_53814__dlirmov_50743__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50743__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_50729__wlsimp_7219, p), _emal_53814__dlirmov_50743__pinl_4244__flat_149); 
    _free_( _dlirmov_50729__wlsimp_7219); 
    _emal_53813__dlirmov_51611__iveras_51539 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51611__iveras_51539 = _fill_( 0, _emal_53813__dlirmov_51611__iveras_51539); 
    _emal_53812__dlirmov_51612__iveras_51540 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51612__iveras_51540 = _fill_( 1, _emal_53812__dlirmov_51612__iveras_51540); 
    _emlr_55156_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55157_r = _fill_( _copy_( r), _emlr_55156_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_4983_BlockHoare__Loop_3( _dlirmov_51612__iveras_51540, _dlirmov_51611__iveras_51539, _dlirmov_50743__pinl_4244__flat_149, _dlirmov_50740__pinl_4257__flat_149, _dlirmov_50737__pinl_4271__flat_149, _dlirmov_50734__pinl_4296__flat_149, argmax, max, q, p, _emlr_55157_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_4983_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_4983_BlockHoare__Loop_3( int _iveras_51540 { ,NN } , int _iveras_51539 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4983_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_53837__ivesli_48421 { , NN } ; 
  double _emal_53836__pinl_4213__flat_149 { , NN } ; 
  int _emal_53835__ivesli_48419 { , NN } ; 
  double _emal_53834__pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53833__flat_129__SSA3_2 { , NN } ; 
  double _emal_53832__pinl_4284__flat_95 { , NN } ; 
  double _emal_53831__pinl_4259__flat_95 { , NN } ; 
  double _emal_53825__ctz_7770 { , NN } ; 
  bool _emal_53824__pinl_4312__flat_252 { , NN } ; 
  int _emal_53823__pinl_4315__flat_124 { , NN } ; 
  int _emal_53822__esd_8399 { , NN } ; 
  bool _emal_53820__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48421 { , NN } ; 
  int _ivesli_48419 { , NN } ; 
  int _esd_8399 { , NN } ; 
  double _ctz_7770 { , NN } ; 
  int _ctz_7768 { , NN } ; 
  double[2] _flat_129__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA3_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_53837__ivesli_48421 = _alloc_( 1, 0, [:int]); 
  _ivesli_48421 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51539), _emal_53837__ivesli_48421); 
  _emal_53836__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48421, P), _emal_53836__pinl_4213__flat_149); 
  _free_( _ivesli_48421); 
  _emal_53835__ivesli_48419 = _alloc_( 1, 0, [:int]); 
  _ivesli_48419 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51540), _emal_53835__ivesli_48419); 
  _emal_53834__pinl_4213__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48419, P), _emal_53834__pinl_4213__flat_149__SSA3_2); 
  _free_( _ivesli_48419); 
  _emal_53833__flat_129__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA3_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA3_2 ], _emal_53833__flat_129__SSA3_2); 
  _emal_53832__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_53832__pinl_4284__flat_95); 
  _emal_53831__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA3_2), _emal_53831__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA3_2), _pinl_4213__flat_149__SSA3_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_53825__ctz_7770 = _alloc_( 1, 0, [:int]); 
  _ctz_7770 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_53825__ctz_7770); 
  _emal_53824__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_7770, 0.0), _emal_53824__pinl_4312__flat_252); 
  _free_( _ctz_7770); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_4981_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA3_2, max, _pinl_4230__flat_95) ; 
  _emal_53823__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_53823__pinl_4315__flat_124); 
  _emal_53822__esd_8399 = r; 
  _esd_8399 = _fill_( _sub_SxS_( 1, r), _emal_53822__esd_8399); 
  _ctz_7768 = _fill_( _add_SxS_( _esd_8399, l), _esd_8399); 
  _emal_53820__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_7768, 0), _emal_53820__pinl_4316__flat_197); 
  _free_( _ctz_7768); 
  _hce_3 = _MAIN::_dup_4982_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_4983_BlockHoare__Loop_3( _iveras_51540, _iveras_51539, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51539, 1); 
    _dec_rc_( _iveras_51540, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4982_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_4982_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4982_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_53858__hce_3__SSA0_1 { , NN } ; 
  int _emal_53857__wlsimp_7222 { , NN } ; 
  int _emal_53856__iveras_51541 { , NN } ; 
  int _emal_53855__ivesli_48425 { , NN } ; 
  double _emal_53854__pinl_4328__flat_149 { , NN } ; 
  int _emal_53853__pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int _emal_53852__iveras_51542 { , NN } ; 
  int _emal_53851__ivesli_48423 { , NN } ; 
  double _emal_53850__pinl_4328__flat_149__SSA3_2 { , NN } ; 
  double _emal_53849__pinl_4411__flat_149 { , NN } ; 
  double _emal_53848__pinl_4399__flat_95 { , NN } ; 
  double _emal_53847__pinl_4386__flat_149 { , NN } ; 
  double _emal_53846__pinl_4374__flat_95 { , NN } ; 
  double _emal_53845__pinl_4373__flat_96 { , NN } ; 
  double _emal_53844__pinl_4372__flat_149 { , NN } ; 
  double _emal_53843__pinl_4360__flat_95 { , NN } ; 
  double _emal_53842__pinl_4359__flat_149 { , NN } ; 
  double _emal_53841__pinl_4347__flat_95 { , NN } ; 
  double _emal_53840__pinl_4346__flat_96 { , NN } ; 
  double _emal_53839__pinl_4345__flat_95 { , NN } ; 
  bool _emal_53838__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51542 { , NN } ; 
  int _iveras_51541 { , NN } ; 
  int _ivesli_48425 { , NN } ; 
  int _ivesli_48423 { , NN } ; 
  double _pinl_4328__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7222 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_53857__wlsimp_7222 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7222 = _fill_( 0, _emal_53857__wlsimp_7222); 
    _emal_53856__iveras_51541 = _alloc_( 1, 0, [:int]); 
    _iveras_51541 = _fill_( 0, _emal_53856__iveras_51541); 
    _ivesli_48425 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51541), _iveras_51541); 
    _emal_53854__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48425, P), _emal_53854__pinl_4328__flat_149); 
    _free_( _ivesli_48425); 
    _emal_53853__pinl_4329__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA3_1 = _fill_( 1, _emal_53853__pinl_4329__eat_768__SSA3_1); 
    _emal_53852__iveras_51542 = _alloc_( 1, 0, [:int]); 
    _iveras_51542 = _fill_( 1, _emal_53852__iveras_51542); 
    _ivesli_48423 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51542), _iveras_51542); 
    _emal_53850__pinl_4328__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48423, P), _emal_53850__pinl_4328__flat_149__SSA3_2); 
    _free_( _ivesli_48423); 
    _emal_53849__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_7222, q), _emal_53849__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_53847__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, p), _emal_53847__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_53844__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA3_1, q), _emal_53844__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA3_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA3_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA3_2); 
    _emal_53842__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_7222, p), _emal_53842__pinl_4359__flat_149); 
    _free_( _wlsimp_7222); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_53838__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_53838__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_53858__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_53858__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4981_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_4981_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_4981_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4980_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_4980_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4980_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_53879__hce_4__SSA0_1 { , NN } ; 
  int _emal_53878__wlsimp_7225 { , NN } ; 
  int _emal_53877__iveras_51543 { , NN } ; 
  int _emal_53876__ivesli_48429 { , NN } ; 
  double _emal_53875__pinl_4105__flat_149 { , NN } ; 
  int _emal_53874__pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int _emal_53873__iveras_51544 { , NN } ; 
  int _emal_53872__ivesli_48427 { , NN } ; 
  double _emal_53871__pinl_4105__flat_149__SSA3_2 { , NN } ; 
  double _emal_53870__pinl_4188__flat_149 { , NN } ; 
  double _emal_53869__pinl_4176__flat_95 { , NN } ; 
  double _emal_53868__pinl_4163__flat_149 { , NN } ; 
  double _emal_53867__pinl_4151__flat_95 { , NN } ; 
  double _emal_53866__pinl_4150__flat_96 { , NN } ; 
  double _emal_53865__pinl_4149__flat_149 { , NN } ; 
  double _emal_53864__pinl_4137__flat_95 { , NN } ; 
  double _emal_53863__pinl_4136__flat_149 { , NN } ; 
  double _emal_53862__pinl_4124__flat_95 { , NN } ; 
  double _emal_53861__pinl_4123__flat_96 { , NN } ; 
  double _emal_53860__pinl_4122__flat_95 { , NN } ; 
  bool _emal_53859__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51544 { , NN } ; 
  int _iveras_51543 { , NN } ; 
  int _ivesli_48429 { , NN } ; 
  int _ivesli_48427 { , NN } ; 
  double _pinl_4105__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7225 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_53878__wlsimp_7225 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7225 = _fill_( 0, _emal_53878__wlsimp_7225); 
    _emal_53877__iveras_51543 = _alloc_( 1, 0, [:int]); 
    _iveras_51543 = _fill_( 0, _emal_53877__iveras_51543); 
    _ivesli_48429 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51543), _iveras_51543); 
    _emal_53875__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48429, P), _emal_53875__pinl_4105__flat_149); 
    _free_( _ivesli_48429); 
    _emal_53874__pinl_4106__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA3_1 = _fill_( 1, _emal_53874__pinl_4106__eat_768__SSA3_1); 
    _emal_53873__iveras_51544 = _alloc_( 1, 0, [:int]); 
    _iveras_51544 = _fill_( 1, _emal_53873__iveras_51544); 
    _ivesli_48427 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51544), _iveras_51544); 
    _emal_53871__pinl_4105__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48427, P), _emal_53871__pinl_4105__flat_149__SSA3_2); 
    _free_( _ivesli_48427); 
    _emal_53870__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_7225, q), _emal_53870__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_53868__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, p), _emal_53868__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_53865__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA3_1, q), _emal_53865__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA3_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA3_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA3_2); 
    _emal_53863__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_7225, p), _emal_53863__pinl_4136__flat_149); 
    _free_( _wlsimp_7225); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_53859__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_53859__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_53879__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_53879__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4979_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_4979_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4979_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55159_l { , NN } ; 
  int _emlr_55158_l { , NN } ; 
  int _emal_53887__dlirmov_50713__wlsimp_7228 { , NN } ; 
  int _emal_53886__dlirmov_50715__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  double _emal_53885__dlirmov_50718__pinl_3963__flat_149 { , NN } ; 
  double _emal_53884__dlirmov_50721__pinl_3938__flat_149 { , NN } ; 
  double _emal_53883__dlirmov_50724__pinl_3924__flat_149 { , NN } ; 
  double _emal_53882__dlirmov_50727__pinl_3911__flat_149 { , NN } ; 
  int _emal_53881__dlirmov_51609__iveras_51545 { , NN } ; 
  int _emal_53880__dlirmov_51610__iveras_51546 { , NN } ; 
  int _dlirmov_51610__iveras_51546 { , NN } ; 
  int _dlirmov_51609__iveras_51545 { , NN } ; 
  double _dlirmov_50727__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_50724__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_50721__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_50718__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_50715__pinl_3881__eat_768__SSA3_1 { , NN } ; 
  int{0} _dlirmov_50713__wlsimp_7228 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_53887__dlirmov_50713__wlsimp_7228 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50713__wlsimp_7228 = _fill_( 0, _emal_53887__dlirmov_50713__wlsimp_7228); 
    _emal_53886__dlirmov_50715__pinl_3881__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50715__pinl_3881__eat_768__SSA3_1 = _fill_( 1, _emal_53886__dlirmov_50715__pinl_3881__eat_768__SSA3_1); 
    _emal_53885__dlirmov_50718__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50718__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_50713__wlsimp_7228, q), _emal_53885__dlirmov_50718__pinl_3963__flat_149); 
    _emal_53884__dlirmov_50721__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50721__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_50715__pinl_3881__eat_768__SSA3_1, p), _emal_53884__dlirmov_50721__pinl_3938__flat_149); 
    _emal_53883__dlirmov_50724__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50724__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_50715__pinl_3881__eat_768__SSA3_1, q), _emal_53883__dlirmov_50724__pinl_3924__flat_149); 
    _free_( _dlirmov_50715__pinl_3881__eat_768__SSA3_1); 
    _emal_53882__dlirmov_50727__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_50727__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_50713__wlsimp_7228, p), _emal_53882__dlirmov_50727__pinl_3911__flat_149); 
    _free_( _dlirmov_50713__wlsimp_7228); 
    _emal_53881__dlirmov_51609__iveras_51545 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51609__iveras_51545 = _fill_( 0, _emal_53881__dlirmov_51609__iveras_51545); 
    _emal_53880__dlirmov_51610__iveras_51546 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51610__iveras_51546 = _fill_( 1, _emal_53880__dlirmov_51610__iveras_51546); 
    _emlr_55158_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55159_l = _fill_( _copy_( l), _emlr_55158_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_4978_BlockHoare__Loop_8( _dlirmov_51610__iveras_51546, _dlirmov_51609__iveras_51545, _dlirmov_50727__pinl_3911__flat_149, _dlirmov_50724__pinl_3924__flat_149, _dlirmov_50721__pinl_3938__flat_149, _dlirmov_50718__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55159_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_4978_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_4978_BlockHoare__Loop_8( int _iveras_51546 { ,NN } , int _iveras_51545 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4978_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_53904__ivesli_48433 { , NN } ; 
  double _emal_53903__pinl_3880__flat_149 { , NN } ; 
  int _emal_53902__ivesli_48431 { , NN } ; 
  double _emal_53901__pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double[2] _emal_53900__flat_117__SSA3_2 { , NN } ; 
  double _emal_53899__pinl_3951__flat_95 { , NN } ; 
  double _emal_53898__pinl_3926__flat_95 { , NN } ; 
  double _emal_53892__ctz_7774 { , NN } ; 
  bool _emal_53891__pinl_3979__flat_252 { , NN } ; 
  int _emal_53890__pinl_3982__flat_122 { , NN } ; 
  int _emal_53889__ctz_7772 { , NN } ; 
  bool _emal_53888__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48433 { , NN } ; 
  int _ivesli_48431 { , NN } ; 
  double _ctz_7774 { , NN } ; 
  int _ctz_7772 { , NN } ; 
  double[2] _flat_117__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA3_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_53904__ivesli_48433 = _alloc_( 1, 0, [:int]); 
  _ivesli_48433 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51545), _emal_53904__ivesli_48433); 
  _emal_53903__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48433, P), _emal_53903__pinl_3880__flat_149); 
  _free_( _ivesli_48433); 
  _emal_53902__ivesli_48431 = _alloc_( 1, 0, [:int]); 
  _ivesli_48431 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51546), _emal_53902__ivesli_48431); 
  _emal_53901__pinl_3880__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48431, P), _emal_53901__pinl_3880__flat_149__SSA3_2); 
  _free_( _ivesli_48431); 
  _emal_53900__flat_117__SSA3_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA3_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA3_2 ], _emal_53900__flat_117__SSA3_2); 
  _emal_53899__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_53899__pinl_3951__flat_95); 
  _emal_53898__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA3_2), _emal_53898__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA3_2), _pinl_3880__flat_149__SSA3_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_53892__ctz_7774 = _alloc_( 1, 0, [:int]); 
  _ctz_7774 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_53892__ctz_7774); 
  _emal_53891__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_7774, 0.0), _emal_53891__pinl_3979__flat_252); 
  _free_( _ctz_7774); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_4976_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA3_2, max, _pinl_3897__flat_95) ; 
  _emal_53890__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_53890__pinl_3982__flat_122); 
  _emal_53889__ctz_7772 = _alloc_( 1, 0, [:int]); 
  _ctz_7772 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_53889__ctz_7772); 
  _emal_53888__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_7772, 0), _emal_53888__pinl_3983__flat_197); 
  _free_( _ctz_7772); 
  _hce_5 = _MAIN::_dup_4977_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_4978_BlockHoare__Loop_8( _iveras_51546, _iveras_51545, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51545, 1); 
    _dec_rc_( _iveras_51546, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4977_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_4977_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4977_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_53925__hce_5__SSA0_1 { , NN } ; 
  int _emal_53924__wlsimp_7231 { , NN } ; 
  int _emal_53923__iveras_51547 { , NN } ; 
  int _emal_53922__ivesli_48437 { , NN } ; 
  double _emal_53921__pinl_3995__flat_149 { , NN } ; 
  int _emal_53920__pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int _emal_53919__iveras_51548 { , NN } ; 
  int _emal_53918__ivesli_48435 { , NN } ; 
  double _emal_53917__pinl_3995__flat_149__SSA3_2 { , NN } ; 
  double _emal_53916__pinl_4078__flat_149 { , NN } ; 
  double _emal_53915__pinl_4066__flat_95 { , NN } ; 
  double _emal_53914__pinl_4053__flat_149 { , NN } ; 
  double _emal_53913__pinl_4041__flat_95 { , NN } ; 
  double _emal_53912__pinl_4040__flat_96 { , NN } ; 
  double _emal_53911__pinl_4039__flat_149 { , NN } ; 
  double _emal_53910__pinl_4027__flat_95 { , NN } ; 
  double _emal_53909__pinl_4026__flat_149 { , NN } ; 
  double _emal_53908__pinl_4014__flat_95 { , NN } ; 
  double _emal_53907__pinl_4013__flat_96 { , NN } ; 
  double _emal_53906__pinl_4012__flat_95 { , NN } ; 
  bool _emal_53905__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51548 { , NN } ; 
  int _iveras_51547 { , NN } ; 
  int _ivesli_48437 { , NN } ; 
  int _ivesli_48435 { , NN } ; 
  double _pinl_3995__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7231 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_53924__wlsimp_7231 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7231 = _fill_( 0, _emal_53924__wlsimp_7231); 
    _emal_53923__iveras_51547 = _alloc_( 1, 0, [:int]); 
    _iveras_51547 = _fill_( 0, _emal_53923__iveras_51547); 
    _ivesli_48437 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51547), _iveras_51547); 
    _emal_53921__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48437, P), _emal_53921__pinl_3995__flat_149); 
    _free_( _ivesli_48437); 
    _emal_53920__pinl_3996__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA3_1 = _fill_( 1, _emal_53920__pinl_3996__eat_768__SSA3_1); 
    _emal_53919__iveras_51548 = _alloc_( 1, 0, [:int]); 
    _iveras_51548 = _fill_( 1, _emal_53919__iveras_51548); 
    _ivesli_48435 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51548), _iveras_51548); 
    _emal_53917__pinl_3995__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48435, P), _emal_53917__pinl_3995__flat_149__SSA3_2); 
    _free_( _ivesli_48435); 
    _emal_53916__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_7231, q), _emal_53916__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_53914__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, p), _emal_53914__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_53911__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA3_1, q), _emal_53911__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA3_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA3_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA3_2); 
    _emal_53909__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_7231, p), _emal_53909__pinl_4026__flat_149); 
    _free_( _wlsimp_7231); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_53905__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_53905__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_53925__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_53925__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4976_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_4976_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_4976_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_4975_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_4975_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_4975_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_53946__hce_6__SSA0_1 { , NN } ; 
  int _emal_53945__wlsimp_7234 { , NN } ; 
  int _emal_53944__iveras_51549 { , NN } ; 
  int _emal_53943__ivesli_48441 { , NN } ; 
  double _emal_53942__pinl_3772__flat_149 { , NN } ; 
  int _emal_53941__pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int _emal_53940__iveras_51550 { , NN } ; 
  int _emal_53939__ivesli_48439 { , NN } ; 
  double _emal_53938__pinl_3772__flat_149__SSA3_2 { , NN } ; 
  double _emal_53937__pinl_3855__flat_149 { , NN } ; 
  double _emal_53936__pinl_3843__flat_95 { , NN } ; 
  double _emal_53935__pinl_3830__flat_149 { , NN } ; 
  double _emal_53934__pinl_3818__flat_95 { , NN } ; 
  double _emal_53933__pinl_3817__flat_96 { , NN } ; 
  double _emal_53932__pinl_3816__flat_149 { , NN } ; 
  double _emal_53931__pinl_3804__flat_95 { , NN } ; 
  double _emal_53930__pinl_3803__flat_149 { , NN } ; 
  double _emal_53929__pinl_3791__flat_95 { , NN } ; 
  double _emal_53928__pinl_3790__flat_96 { , NN } ; 
  double _emal_53927__pinl_3789__flat_95 { , NN } ; 
  bool _emal_53926__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51550 { , NN } ; 
  int _iveras_51549 { , NN } ; 
  int _ivesli_48441 { , NN } ; 
  int _ivesli_48439 { , NN } ; 
  double _pinl_3772__flat_149__SSA3_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA3_1 { , NN } ; 
  int{0} _wlsimp_7234 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_53945__wlsimp_7234 = _alloc_( 1, 0, [:int]); 
    _wlsimp_7234 = _fill_( 0, _emal_53945__wlsimp_7234); 
    _emal_53944__iveras_51549 = _alloc_( 1, 0, [:int]); 
    _iveras_51549 = _fill_( 0, _emal_53944__iveras_51549); 
    _ivesli_48441 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51549), _iveras_51549); 
    _emal_53942__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48441, P), _emal_53942__pinl_3772__flat_149); 
    _free_( _ivesli_48441); 
    _emal_53941__pinl_3773__eat_768__SSA3_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA3_1 = _fill_( 1, _emal_53941__pinl_3773__eat_768__SSA3_1); 
    _emal_53940__iveras_51550 = _alloc_( 1, 0, [:int]); 
    _iveras_51550 = _fill_( 1, _emal_53940__iveras_51550); 
    _ivesli_48439 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51550), _iveras_51550); 
    _emal_53938__pinl_3772__flat_149__SSA3_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA3_2 = _fill_( _idx_sel_( _ivesli_48439, P), _emal_53938__pinl_3772__flat_149__SSA3_2); 
    _free_( _ivesli_48439); 
    _emal_53937__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_7234, q), _emal_53937__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_53935__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, p), _emal_53935__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_53932__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA3_1, q), _emal_53932__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA3_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA3_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA3_2); 
    _emal_53930__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_7234, p), _emal_53930__pinl_3803__flat_149); 
    _free_( _wlsimp_7234); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_53926__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_53926__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_53946__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_53946__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * _MAIN::FindHull(...) [ body ]
 ****************************************************************************/
inline
double[1000000,2], int, double[1000000,2] _MAIN::FindHull( double[1000000,2] P { ,NN } , int lo { ,NN } , int hi { ,NN } , double[2] p { ,NN } , double[2] q { ,NN } , double[2] rk { ,NN } , double[1000000,2] hull { ,NN } , int hull_count { ,NN } )
/*
 *  FindHull ::  ---
 */
{ 
  int _emal_53948__ctz_9807 { , NN } ; 
  bool _emal_53947__pinl_5090__flat_195 { , NN } ; 
  int _ctz_9807 { , NN } ; 
  bool _pinl_5090__flat_195 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int count { , NN } ;  /* declared: int */

  _emal_53948__ctz_9807 = _alloc_( 1, 0, [:int]); 
  _ctz_9807 = _fill_( _sub_SxS_( lo, hi), _emal_53948__ctz_9807); 
  _emal_53947__pinl_5090__flat_195 = _alloc_( 1, 0, [:int]); 
  _pinl_5090__flat_195 = _fill_( _neq_SxS_( _ctz_9807, 0), _emal_53947__pinl_5090__flat_195); 
  _free_( _ctz_9807); 
  count, hull__SSA0_1, P__SSA0_1 = _MAIN::FindHull__Cond_40( _pinl_5090__flat_195, hull_count, hull, rk, q, p, hi, lo, P) ; 
  return( P__SSA0_1, count, hull__SSA0_1); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_9515_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_9515_BlockHoare__Loop_18( int _iveras_51552 { ,NN } , int _iveras_51551 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_9339 { ,NN } , double _ls_9338 { ,NN } , double _ls_9329 { ,NN } , double _ls_9328 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_9515_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_53972__emec_51724_offsetsr { , NN } ; 
  int _emal_53970__ivesli_48446 { , NN } ; 
  int _emal_53968__ivesli_48449 { , NN } ; 
  double _emal_53967__pinl_3375__flat_149 { , NN } ; 
  double _emal_53965__pinl_3375__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_53964__flat_81__SSA5_2 { , NN } ; 
  double _emal_53963__pinl_3446__flat_95 { , NN } ; 
  double _emal_53962__pinl_3421__flat_95 { , NN } ; 
  bool _emal_53956__pinl_3471__flat_251 { , NN } ; 
  int _emal_53955__pinl_3472__flat_438 { , NN } ; 
  double _emal_53953__ctz_9811 { , NN } ; 
  bool _emal_53952__pinl_3477__flat_252 { , NN } ; 
  int _emal_53951__pinl_3480__flat_122 { , NN } ; 
  int _emal_53950__al_13045 { , NN } ; 
  bool _emal_53949__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51724_offsetsr { , NN } ; 
  int _ivesli_48449 { , NN } ; 
  int _ivesli_48447 { , NN } ; 
  int _ivesli_48446 { , NN } ; 
  int _ivesli_48445 { , NN } ; 
  int _al_13045 { , NN } ; 
  double _ctz_9811 { , NN } ; 
  double[2] _flat_81__SSA5_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_53972__emec_51724_offsetsr = offsetsr; 
  _emec_51724_offsetsr = _fill_( _noop_( offsetsr), _emal_53972__emec_51724_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51724_offsetsr, numr, i), _emec_51724_offsetsr); 
  _emal_53970__ivesli_48446 = _alloc_( 1, 0, [:int]); 
  _ivesli_48446 = _fill_( _sub_SxS_( i, r), _emal_53970__ivesli_48446); 
  _ivesli_48447 = _fill_( _neg_S_( _ivesli_48446), _ivesli_48446); 
  _emal_53968__ivesli_48449 = _alloc_( 1, 0, [:int]); 
  _ivesli_48449 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48447, _iveras_51551), _emal_53968__ivesli_48449); 
  _emal_53967__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48449, P), _emal_53967__pinl_3375__flat_149); 
  _free_( _ivesli_48449); 
  _ivesli_48445 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48447, _iveras_51552), _ivesli_48447); 
  _emal_53965__pinl_3375__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48445, P), _emal_53965__pinl_3375__flat_149__SSA5_2); 
  _free_( _ivesli_48445); 
  _emal_53964__flat_81__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA5_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA5_2 ], _emal_53964__flat_81__SSA5_2); 
  _emal_53963__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_9339, _pinl_3375__flat_149), _emal_53963__pinl_3446__flat_95); 
  _emal_53962__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_9328, _pinl_3375__flat_149__SSA5_2), _emal_53962__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_9338, _pinl_3375__flat_149__SSA5_2), _pinl_3375__flat_149__SSA5_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_9329, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_53956__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_53956__pinl_3471__flat_251); 
  _emal_53955__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_53955__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_53953__ctz_9811 = _alloc_( 1, 0, [:int]); 
  _ctz_9811 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_53953__ctz_9811); 
  _emal_53952__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_9811, 0.0), _emal_53952__pinl_3477__flat_252); 
  _free_( _ctz_9811); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_9514_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA5_2, max, _pinl_3392__flat_95) ; 
  _emal_53951__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_53951__pinl_3480__flat_122); 
  _emal_53950__al_13045 = i; 
  _al_13045 = _fill_( _add_SxS_( -63, i), _emal_53950__al_13045); 
  _emal_53949__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_13045, 0), _emal_53949__pinl_3481__flat_196); 
  _free_( _al_13045); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_9515_BlockHoare__Loop_18( _iveras_51552, _iveras_51551, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_9339, _ls_9338, _ls_9329, _ls_9328, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_9328, 1); 
    _dec_rc_( _ls_9329, 1); 
    _dec_rc_( _ls_9338, 1); 
    _dec_rc_( _ls_9339, 1); 
    _dec_rc_( _iveras_51551, 1); 
    _dec_rc_( _iveras_51552, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_9514_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_9514_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_9514_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_9501_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_9501_BlockHoare__Loop_21( int _iveras_51554 { ,NN } , int _iveras_51553 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_9359 { ,NN } , double _ls_9358 { ,NN } , double _ls_9349 { ,NN } , double _ls_9348 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_9501_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_53995__emec_51725_offsetsl { , NN } ; 
  int _emal_53993__ivesli_48455 { , NN } ; 
  int _emal_53992__ivesli_48457 { , NN } ; 
  double _emal_53991__pinl_3253__flat_149 { , NN } ; 
  double _emal_53989__pinl_3253__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_53988__flat_68__SSA5_2 { , NN } ; 
  double _emal_53987__pinl_3324__flat_95 { , NN } ; 
  double _emal_53986__pinl_3299__flat_95 { , NN } ; 
  bool _emal_53980__pinl_3349__flat_252 { , NN } ; 
  int _emal_53979__pinl_3350__flat_438 { , NN } ; 
  double _emal_53977__ctz_9815 { , NN } ; 
  bool _emal_53976__pinl_3355__flat_252 { , NN } ; 
  int _emal_53975__pinl_3358__flat_122 { , NN } ; 
  int _emal_53974__al_13047 { , NN } ; 
  bool _emal_53973__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51725_offsetsl { , NN } ; 
  int _ivesli_48457 { , NN } ; 
  int _ivesli_48455 { , NN } ; 
  int _ivesli_48454 { , NN } ; 
  int _al_13047 { , NN } ; 
  double _ctz_9815 { , NN } ; 
  double[2] _flat_68__SSA5_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_53995__emec_51725_offsetsl = offsetsl; 
  _emec_51725_offsetsl = _fill_( _noop_( offsetsl), _emal_53995__emec_51725_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51725_offsetsl, numl, i), _emec_51725_offsetsl); 
  _emal_53993__ivesli_48455 = _alloc_( 1, 0, [:int]); 
  _ivesli_48455 = _fill_( _add_SxS_( l, i), _emal_53993__ivesli_48455); 
  _emal_53992__ivesli_48457 = _alloc_( 1, 0, [:int]); 
  _ivesli_48457 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48455, _iveras_51553), _emal_53992__ivesli_48457); 
  _emal_53991__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48457, P), _emal_53991__pinl_3253__flat_149); 
  _free_( _ivesli_48457); 
  _ivesli_48454 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48455, _iveras_51554), _ivesli_48455); 
  _emal_53989__pinl_3253__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48454, P), _emal_53989__pinl_3253__flat_149__SSA5_2); 
  _free_( _ivesli_48454); 
  _emal_53988__flat_68__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA5_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA5_2 ], _emal_53988__flat_68__SSA5_2); 
  _emal_53987__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_9359, _pinl_3253__flat_149), _emal_53987__pinl_3324__flat_95); 
  _emal_53986__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_9348, _pinl_3253__flat_149__SSA5_2), _emal_53986__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_9358, _pinl_3253__flat_149__SSA5_2), _pinl_3253__flat_149__SSA5_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_9349, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_53980__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_53980__pinl_3349__flat_252); 
  _emal_53979__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_53979__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_53977__ctz_9815 = _alloc_( 1, 0, [:int]); 
  _ctz_9815 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_53977__ctz_9815); 
  _emal_53976__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_9815, 0.0), _emal_53976__pinl_3355__flat_252); 
  _free_( _ctz_9815); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_9500_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA5_2, max, _pinl_3270__flat_95) ; 
  _emal_53975__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_53975__pinl_3358__flat_122); 
  _emal_53974__al_13047 = i; 
  _al_13047 = _fill_( _add_SxS_( -63, i), _emal_53974__al_13047); 
  _emal_53973__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_13047, 0), _emal_53973__pinl_3359__flat_196); 
  _free_( _al_13047); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_9501_BlockHoare__Loop_21( _iveras_51554, _iveras_51553, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_9359, _ls_9358, _ls_9349, _ls_9348, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_9348, 1); 
    _dec_rc_( _ls_9349, 1); 
    _dec_rc_( _ls_9358, 1); 
    _dec_rc_( _ls_9359, 1); 
    _dec_rc_( _iveras_51553, 1); 
    _dec_rc_( _iveras_51554, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_9500_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_9500_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_9500_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_9487_BlockHoare__Loop_18(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_9487_BlockHoare__Loop_18( int _iveras_51556 { ,NN } , int _iveras_51555 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int numr { ,NN } , int i { ,NN } , double _ls_9379 { ,NN } , double _ls_9378 { ,NN } , double _ls_9369 { ,NN } , double _ls_9368 { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_9487_BlockHoare__Loop_18 ::  ---
 */
{ 
  int[64] _emal_54019__emec_51726_offsetsr { , NN } ; 
  int _emal_54017__ivesli_48464 { , NN } ; 
  int _emal_54015__ivesli_48467 { , NN } ; 
  double _emal_54014__pinl_3375__flat_149 { , NN } ; 
  double _emal_54012__pinl_3375__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54011__flat_81__SSA5_2 { , NN } ; 
  double _emal_54010__pinl_3446__flat_95 { , NN } ; 
  double _emal_54009__pinl_3421__flat_95 { , NN } ; 
  bool _emal_54003__pinl_3471__flat_251 { , NN } ; 
  int _emal_54002__pinl_3472__flat_438 { , NN } ; 
  double _emal_54000__ctz_9819 { , NN } ; 
  bool _emal_53999__pinl_3477__flat_252 { , NN } ; 
  int _emal_53998__pinl_3480__flat_122 { , NN } ; 
  int _emal_53997__al_13049 { , NN } ; 
  bool _emal_53996__pinl_3481__flat_196 { , NN } ; 
  int[64] _emec_51726_offsetsr { , NN } ; 
  int _ivesli_48467 { , NN } ; 
  int _ivesli_48465 { , NN } ; 
  int _ivesli_48464 { , NN } ; 
  int _ivesli_48463 { , NN } ; 
  int _al_13049 { , NN } ; 
  double _ctz_9819 { , NN } ; 
  double[2] _flat_81__SSA5_2 { , NN } ; 
  double _pinl_3375__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3375__flat_149 { , NN } ; 
  double _pinl_3446__flat_95 { , NN } ; 
  double _pinl_3421__flat_95 { , NN } ; 
  double _pinl_3420__flat_96 { , NN } ; 
  double _pinl_3407__flat_95 { , NN } ; 
  double _pinl_3394__flat_95 { , NN } ; 
  double _pinl_3393__flat_96 { , NN } ; 
  double _pinl_3392__flat_95 { , NN } ; 
  bool _pinl_3471__flat_251 { , NN } ; 
  int _pinl_3472__flat_438 { , NN } ; 
  int _pinl_3473__flat_40 { , NN } ; 
  bool _pinl_3477__flat_252 { , NN } ; 
  double _pinl_3476_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3475_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3480__flat_122 { , NN } ; 
  bool _pinl_3481__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsr__SSA0_3 { , NN } ; 
  int numr__SSA0_3 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 

  _emal_54019__emec_51726_offsetsr = offsetsr; 
  _emec_51726_offsetsr = _fill_( _noop_( offsetsr), _emal_54019__emec_51726_offsetsr); 
  offsetsr__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51726_offsetsr, numr, i), _emec_51726_offsetsr); 
  _emal_54017__ivesli_48464 = _alloc_( 1, 0, [:int]); 
  _ivesli_48464 = _fill_( _sub_SxS_( i, r), _emal_54017__ivesli_48464); 
  _ivesli_48465 = _fill_( _neg_S_( _ivesli_48464), _ivesli_48464); 
  _emal_54015__ivesli_48467 = _alloc_( 1, 0, [:int]); 
  _ivesli_48467 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48465, _iveras_51555), _emal_54015__ivesli_48467); 
  _emal_54014__pinl_3375__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149 = _fill_( _idx_sel_( _ivesli_48467, P), _emal_54014__pinl_3375__flat_149); 
  _free_( _ivesli_48467); 
  _ivesli_48463 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48465, _iveras_51556), _ivesli_48465); 
  _emal_54012__pinl_3375__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3375__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48463, P), _emal_54012__pinl_3375__flat_149__SSA5_2); 
  _free_( _ivesli_48463); 
  _emal_54011__flat_81__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_81__SSA5_2 = _fill_( [ _pinl_3375__flat_149, _pinl_3375__flat_149__SSA5_2 ], _emal_54011__flat_81__SSA5_2); 
  _emal_54010__pinl_3446__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3446__flat_95 = _fill_( _sub_SxS_( _ls_9379, _pinl_3375__flat_149), _emal_54010__pinl_3446__flat_95); 
  _emal_54009__pinl_3421__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3421__flat_95 = _fill_( _sub_SxS_( _ls_9368, _pinl_3375__flat_149__SSA5_2), _emal_54009__pinl_3421__flat_95); 
  _pinl_3420__flat_96 = _fill_( _mul_SxS_( _pinl_3421__flat_95, _pinl_3446__flat_95), _pinl_3421__flat_95); 
  _free_( _pinl_3446__flat_95); 
  _pinl_3407__flat_95 = _fill_( _sub_SxS_( _ls_9378, _pinl_3375__flat_149__SSA5_2), _pinl_3375__flat_149__SSA5_2); 
  _pinl_3394__flat_95 = _fill_( _sub_SxS_( _ls_9369, _pinl_3375__flat_149), _pinl_3375__flat_149); 
  _pinl_3393__flat_96 = _fill_( _mul_SxS_( _pinl_3394__flat_95, _pinl_3407__flat_95), _pinl_3394__flat_95); 
  _free_( _pinl_3407__flat_95); 
  _pinl_3392__flat_95 = _fill_( _sub_SxS_( _pinl_3393__flat_96, _pinl_3420__flat_96), _pinl_3393__flat_96); 
  _free_( _pinl_3420__flat_96); 
  _emal_54003__pinl_3471__flat_251 = _alloc_( 1, 0, [:int]); 
  _pinl_3471__flat_251 = _fill_( _le_SxS_( _pinl_3392__flat_95, 0.0), _emal_54003__pinl_3471__flat_251); 
  _emal_54002__pinl_3472__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3472__flat_438 = _fill_( _toi_S_( _pinl_3471__flat_251), _emal_54002__pinl_3472__flat_438); 
  _free_( _pinl_3471__flat_251); 
  _pinl_3473__flat_40 = _fill_( _add_SxS_( _pinl_3472__flat_438, numr), _pinl_3472__flat_438); 
  _free_( numr); 
  _emal_54000__ctz_9819 = _alloc_( 1, 0, [:int]); 
  _ctz_9819 = _fill_( _sub_SxS_( _pinl_3392__flat_95, max), _emal_54000__ctz_9819); 
  _emal_53999__pinl_3477__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3477__flat_252 = _fill_( _gt_SxS_( _ctz_9819, 0.0), _emal_53999__pinl_3477__flat_252); 
  _free_( _ctz_9819); 
  _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1 = _MAIN::_dup_9486_set_max__Cond_0( _pinl_3477__flat_252, argmax, _flat_81__SSA5_2, max, _pinl_3392__flat_95) ; 
  _emal_53998__pinl_3480__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3480__flat_122 = _fill_( _add_SxS_( 1, i), _emal_53998__pinl_3480__flat_122); 
  _emal_53997__al_13049 = i; 
  _al_13049 = _fill_( _add_SxS_( -63, i), _emal_53997__al_13049); 
  _emal_53996__pinl_3481__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3481__flat_196 = _fill_( _lt_SxS_( _al_13049, 0), _emal_53996__pinl_3481__flat_196); 
  _free_( _al_13049); 
  if (_pinl_3481__flat_196) 
  { 
    _free_( _pinl_3481__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, numr__SSA0_2 = _MAIN::_dup_9487_BlockHoare__Loop_18( _iveras_51556, _iveras_51555, _pinl_3475_argmax__SSA0_1, _pinl_3476_max__SSA0_1, offsetsr__SSA0_1, _pinl_3473__flat_40, _pinl_3480__flat_122, _ls_9379, _ls_9378, _ls_9369, _ls_9368, r, P) ; 
  }
  else
  { 
    _free_( _pinl_3480__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( _ls_9368, 1); 
    _dec_rc_( _ls_9369, 1); 
    _dec_rc_( _ls_9378, 1); 
    _dec_rc_( _ls_9379, 1); 
    _dec_rc_( _iveras_51555, 1); 
    _dec_rc_( _iveras_51556, 1); 
    _free_( _pinl_3481__flat_196); 
  }
  numr__SSA0_3 = ( _pinl_3481__flat_196 ? numr__SSA0_2 : _pinl_3473__flat_40 ); 
  offsetsr__SSA0_3 = ( _pinl_3481__flat_196 ? offsetsr__SSA0_2 : offsetsr__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3481__flat_196 ? max__SSA0_2 : _pinl_3476_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3481__flat_196 ? argmax__SSA0_2 : _pinl_3475_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsr__SSA0_3, numr__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_9486_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_9486_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_9486_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 64:
 * _MAIN::_dup_9473_BlockHoare__Loop_21(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int _MAIN::_dup_9473_BlockHoare__Loop_21( int _iveras_51558 { ,NN } , int _iveras_51557 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int numl { ,NN } , int i { ,NN } , double _ls_9399 { ,NN } , double _ls_9398 { ,NN } , double _ls_9389 { ,NN } , double _ls_9388 { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_9473_BlockHoare__Loop_21 ::  ---
 */
{ 
  int[64] _emal_54042__emec_51727_offsetsl { , NN } ; 
  int _emal_54040__ivesli_48473 { , NN } ; 
  int _emal_54039__ivesli_48475 { , NN } ; 
  double _emal_54038__pinl_3253__flat_149 { , NN } ; 
  double _emal_54036__pinl_3253__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54035__flat_68__SSA5_2 { , NN } ; 
  double _emal_54034__pinl_3324__flat_95 { , NN } ; 
  double _emal_54033__pinl_3299__flat_95 { , NN } ; 
  bool _emal_54027__pinl_3349__flat_252 { , NN } ; 
  int _emal_54026__pinl_3350__flat_438 { , NN } ; 
  double _emal_54024__ctz_9823 { , NN } ; 
  bool _emal_54023__pinl_3355__flat_252 { , NN } ; 
  int _emal_54022__pinl_3358__flat_122 { , NN } ; 
  int _emal_54021__al_13051 { , NN } ; 
  bool _emal_54020__pinl_3359__flat_196 { , NN } ; 
  int[64] _emec_51727_offsetsl { , NN } ; 
  int _ivesli_48475 { , NN } ; 
  int _ivesli_48473 { , NN } ; 
  int _ivesli_48472 { , NN } ; 
  int _al_13051 { , NN } ; 
  double _ctz_9823 { , NN } ; 
  double[2] _flat_68__SSA5_2 { , NN } ; 
  double _pinl_3253__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3253__flat_149 { , NN } ; 
  double _pinl_3324__flat_95 { , NN } ; 
  double _pinl_3299__flat_95 { , NN } ; 
  double _pinl_3298__flat_96 { , NN } ; 
  double _pinl_3285__flat_95 { , NN } ; 
  double _pinl_3272__flat_95 { , NN } ; 
  double _pinl_3271__flat_96 { , NN } ; 
  double _pinl_3270__flat_95 { , NN } ; 
  bool _pinl_3349__flat_252 { , NN } ; 
  int _pinl_3350__flat_438 { , NN } ; 
  int _pinl_3351__flat_40 { , NN } ; 
  bool _pinl_3355__flat_252 { , NN } ; 
  double _pinl_3354_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3353_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3358__flat_122 { , NN } ; 
  bool _pinl_3359__flat_196 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int[64] offsetsl__SSA0_3 { , NN } ; 
  int numl__SSA0_3 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 

  _emal_54042__emec_51727_offsetsl = offsetsl; 
  _emec_51727_offsetsl = _fill_( _noop_( offsetsl), _emal_54042__emec_51727_offsetsl); 
  offsetsl__SSA0_1 = _fill_( _idx_modarray_AxSxS_( _emec_51727_offsetsl, numl, i), _emec_51727_offsetsl); 
  _emal_54040__ivesli_48473 = _alloc_( 1, 0, [:int]); 
  _ivesli_48473 = _fill_( _add_SxS_( l, i), _emal_54040__ivesli_48473); 
  _emal_54039__ivesli_48475 = _alloc_( 1, 0, [:int]); 
  _ivesli_48475 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48473, _iveras_51557), _emal_54039__ivesli_48475); 
  _emal_54038__pinl_3253__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149 = _fill_( _idx_sel_( _ivesli_48475, P), _emal_54038__pinl_3253__flat_149); 
  _free_( _ivesli_48475); 
  _ivesli_48472 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48473, _iveras_51558), _ivesli_48473); 
  _emal_54036__pinl_3253__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3253__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48472, P), _emal_54036__pinl_3253__flat_149__SSA5_2); 
  _free_( _ivesli_48472); 
  _emal_54035__flat_68__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_68__SSA5_2 = _fill_( [ _pinl_3253__flat_149, _pinl_3253__flat_149__SSA5_2 ], _emal_54035__flat_68__SSA5_2); 
  _emal_54034__pinl_3324__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3324__flat_95 = _fill_( _sub_SxS_( _ls_9399, _pinl_3253__flat_149), _emal_54034__pinl_3324__flat_95); 
  _emal_54033__pinl_3299__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3299__flat_95 = _fill_( _sub_SxS_( _ls_9388, _pinl_3253__flat_149__SSA5_2), _emal_54033__pinl_3299__flat_95); 
  _pinl_3298__flat_96 = _fill_( _mul_SxS_( _pinl_3299__flat_95, _pinl_3324__flat_95), _pinl_3299__flat_95); 
  _free_( _pinl_3324__flat_95); 
  _pinl_3285__flat_95 = _fill_( _sub_SxS_( _ls_9398, _pinl_3253__flat_149__SSA5_2), _pinl_3253__flat_149__SSA5_2); 
  _pinl_3272__flat_95 = _fill_( _sub_SxS_( _ls_9389, _pinl_3253__flat_149), _pinl_3253__flat_149); 
  _pinl_3271__flat_96 = _fill_( _mul_SxS_( _pinl_3272__flat_95, _pinl_3285__flat_95), _pinl_3272__flat_95); 
  _free_( _pinl_3285__flat_95); 
  _pinl_3270__flat_95 = _fill_( _sub_SxS_( _pinl_3271__flat_96, _pinl_3298__flat_96), _pinl_3271__flat_96); 
  _free_( _pinl_3298__flat_96); 
  _emal_54027__pinl_3349__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3349__flat_252 = _fill_( _gt_SxS_( _pinl_3270__flat_95, 0.0), _emal_54027__pinl_3349__flat_252); 
  _emal_54026__pinl_3350__flat_438 = _alloc_( 1, 0, [:int]); 
  _pinl_3350__flat_438 = _fill_( _toi_S_( _pinl_3349__flat_252), _emal_54026__pinl_3350__flat_438); 
  _free_( _pinl_3349__flat_252); 
  _pinl_3351__flat_40 = _fill_( _add_SxS_( _pinl_3350__flat_438, numl), _pinl_3350__flat_438); 
  _free_( numl); 
  _emal_54024__ctz_9823 = _alloc_( 1, 0, [:int]); 
  _ctz_9823 = _fill_( _sub_SxS_( _pinl_3270__flat_95, max), _emal_54024__ctz_9823); 
  _emal_54023__pinl_3355__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3355__flat_252 = _fill_( _gt_SxS_( _ctz_9823, 0.0), _emal_54023__pinl_3355__flat_252); 
  _free_( _ctz_9823); 
  _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1 = _MAIN::_dup_9472_set_max__Cond_0( _pinl_3355__flat_252, argmax, _flat_68__SSA5_2, max, _pinl_3270__flat_95) ; 
  _emal_54022__pinl_3358__flat_122 = _alloc_( 1, 0, [:int]); 
  _pinl_3358__flat_122 = _fill_( _add_SxS_( 1, i), _emal_54022__pinl_3358__flat_122); 
  _emal_54021__al_13051 = i; 
  _al_13051 = _fill_( _add_SxS_( -63, i), _emal_54021__al_13051); 
  _emal_54020__pinl_3359__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3359__flat_196 = _fill_( _lt_SxS_( _al_13051, 0), _emal_54020__pinl_3359__flat_196); 
  _free_( _al_13051); 
  if (_pinl_3359__flat_196) 
  { 
    _free_( _pinl_3359__flat_196); 
    argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, numl__SSA0_2 = _MAIN::_dup_9473_BlockHoare__Loop_21( _iveras_51558, _iveras_51557, _pinl_3353_argmax__SSA0_1, _pinl_3354_max__SSA0_1, offsetsl__SSA0_1, _pinl_3351__flat_40, _pinl_3358__flat_122, _ls_9399, _ls_9398, _ls_9389, _ls_9388, l, P) ; 
  }
  else
  { 
    _free_( _pinl_3358__flat_122); 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( _ls_9388, 1); 
    _dec_rc_( _ls_9389, 1); 
    _dec_rc_( _ls_9398, 1); 
    _dec_rc_( _ls_9399, 1); 
    _dec_rc_( _iveras_51557, 1); 
    _dec_rc_( _iveras_51558, 1); 
    _free_( _pinl_3359__flat_196); 
  }
  numl__SSA0_3 = ( _pinl_3359__flat_196 ? numl__SSA0_2 : _pinl_3351__flat_40 ); 
  offsetsl__SSA0_3 = ( _pinl_3359__flat_196 ? offsetsl__SSA0_2 : offsetsl__SSA0_1 ); 
  max__SSA0_3 = ( _pinl_3359__flat_196 ? max__SSA0_2 : _pinl_3354_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _pinl_3359__flat_196 ? argmax__SSA0_2 : _pinl_3353_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, offsetsl__SSA0_3, numl__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_9472_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_9472_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_9472_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::FindHull__Cond_40(...) [ body ]
 ****************************************************************************/
int, double[1000000,2], double[1000000,2] _MAIN::FindHull__Cond_40( bool _flat_231 { ,NN } , int hull_count { ,NN } , double[1000000,2] hull { ,NN } , double[2] rk { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int hi { ,NN } , int lo { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  FindHull__Cond_40 ::  ---
 */
{ 
  bool _emrb_55374_val { , NN } ; 
  bool _emrb_55373_mem { , NN } ; 
  int _emal_54071_count__SSA0_2 { , NN } ; 
  int _emal_54070__pinl_5130__flat_41 { , NN } ; 
  double[2] _emal_54069__pinl_5093_argmax { , NN } ; 
  double _emal_54068__pinl_5095_max { , NN } ; 
  int _emal_54067__pinl_5096__flat_55 { , NN } ; 
  int{0} _emal_54066_val { , NN } ; 
  int[64] _emal_54065__pinl_5099_offsetsl { , NN } ; 
  int _emal_54064__al_10132 { , NN } ; 
  int _emal_54063__al_10133 { , NN } ; 
  bool _emal_54062__pinl_5116__flat_198 { , NN } ; 
  int _emal_54061__ctz_9829 { , NN } ; 
  bool _emal_54060__pinl_5115__flat_197 { , NN } ; 
  int _emal_54059__uprf_9754 { , NN } ; 
  int _emal_54058__pinl_9196_z { , NN } ; 
  double[1000000,2] _emal_54052_hull__SSA0_3 { , NN } ; 
  int _emal_54051__pinl_5229__flat_41 { , NN } ; 
  int _emal_54050__al_10127 { , NN } ; 
  int _emal_54049__al_10128 { , NN } ; 
  bool _emal_54048__pinl_5215__flat_198 { , NN } ; 
  int _emal_54047__ctz_9825 { , NN } ; 
  bool _emal_54046__pinl_5214__flat_197 { , NN } ; 
  int _emal_54045__pinl_5259__flat_40 { , NN } ; 
  int _emal_54044__pinl_5260__flat_40 { , NN } ; 
  int _emal_54043__pinl_5262__flat_40 { , NN } ; 
  int _wlidx_47903_hull__SSA0_3 { , NN } ; 
  int _wlidx_47902__pinl_5099_offsetsl { , NN } ; 
  int _al_10133 { , NN } ; 
  int _al_10132 { , NN } ; 
  int _al_10128 { , NN } ; 
  int _al_10127 { , NN } ; 
  int _ctz_9829 { , NN } ; 
  int _ctz_9825 { , NN } ; 
  int _uprf_9754 { , NN } ; 
  int _pinl_9196_z { , NN } ; 
  int _pinl_5130__flat_41 { , NN } ; 
  int _pinl_5122__eat_764 { , NN } ; 
  int[1] _pinl_5121_iv { , NN } ; 
  bool _pinl_5116__flat_198 { , NN } ; 
  bool _pinl_5115__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5114_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5113_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5112_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5111_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5110_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5109_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5108_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5107_argmax__SSA0_1 { , NN } ; 
  int[64] _pinl_5099_offsetsl { , NN } ; 
  int{0} _pinl_5096__flat_55 { , NN } ; 
  double{-17...} _pinl_5095_max { , NN } ; 
  double[2]{0.0...} _pinl_5093_argmax { , NN } ; 
  int _pinl_5229__flat_41 { , NN } ; 
  bool _pinl_5215__flat_198 { , NN } ; 
  bool _pinl_5214__flat_197 { , NN } ; 
  double[1000000,2] _pinl_5213_P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5212_l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] _pinl_5211_argmax__SSA0_2 { , NN } ; 
  double[1000000,2] _pinl_5210_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_5209_l__SSA0_1 { , NN } ;  /* declared: int */
  int _pinl_5208_r__SSA0_3 { , NN } ;  /* declared: int */
  double _pinl_5207_max__SSA0_1 { , NN } ; 
  double[2] _pinl_5206_argmax__SSA0_1 { , NN } ; 
  int _pinl_5259__flat_40 { , NN } ; 
  int _pinl_5260__flat_40 { , NN } ; 
  int _pinl_5262__flat_40 { , NN } ; 
  int count__SSA0_4 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_9 { , NN } ;  /* declared: double[1000000,2] */
  int{0} count__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] hull__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_7 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] hull__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  int lcount { , NN } ; 
  int rcount { , NN } ; 

  if (_flat_231) 
  { 
    _inc_rc_( lo, 1); 
    _inc_rc_( rk, 1); 
    _inc_rc_( hull_count, 1); 
    _free_( _flat_231); 
    _emal_54070__pinl_5130__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5130__flat_41 = _fill_( _add_SxS_( -1, hi), _emal_54070__pinl_5130__flat_41); 
    _emal_54069__pinl_5093_argmax = _alloc_( 2, 1, [ 2 ]); 
    _pinl_5093_argmax = _fill_( [ 0.0, 0.0 ], _emal_54069__pinl_5093_argmax); 
    _emal_54068__pinl_5095_max = _alloc_( 2, 0, [:int]); 
    _pinl_5095_max = _fill_( -1.797690000000000063230304921389426434930330364336853362154109832891264341489062899406152996321966094455338163203127744334848599000464911410516510916727344709727599413825823048028128827530592629736371829425359826368844446113768685826367454055532068818593409e+308, _emal_54068__pinl_5095_max); 
    _emal_54067__pinl_5096__flat_55 = _alloc_( 7, 0, [:int]); 
    _pinl_5096__flat_55 = _fill_( 0, _emal_54067__pinl_5096__flat_55); 
    _emal_54065__pinl_5099_offsetsl = _alloc_( 3, 1, [ 64 ]); 
    _pinl_5122__eat_764 = _alloc_( 1, 0, [:int]); 
    _wlidx_47902__pinl_5099_offsetsl = _alloc_( 1, 0, [:int]); 
    _pinl_5099_offsetsl = with2 (_pinl_5121_iv=[_pinl_5122__eat_764] (IDXS:_wlidx_47902__pinl_5099_offsetsl))
        /********** operators: **********/
        op_0 =
          { 
            _emal_54066_val = _wl_assign_( _pinl_5096__flat_55, _emal_54065__pinl_5099_offsetsl, _pinl_5121_iv, _wlidx_47902__pinl_5099_offsetsl); 
          } : _emal_54066_val ; 
        /********** segment 0: **********
         * index domain: [ 0 ] -> [ 64 ]
         * bv: [ 1 ], [ 1 ], [ 1 ]
         * ubv: [ 1 ]
         * sv: [ 1 ]
         * homsv: [ 1 ]
         */
        (0 -> 64), step0[0] 1
          (0 --> 1): op_0
        /********** conexpr: **********/
        genarray( [ 64 ], _pinl_5096__flat_55, _emal_54065__pinl_5099_offsetsl, IDX(_wlidx_47902__pinl_5099_offsetsl)); 
    _free_( _pinl_5122__eat_764); 
    _free_( _wlidx_47902__pinl_5099_offsetsl); 
    _emal_54064__al_10132 = _alloc_( 1, 0, [:int]); 
    _al_10132 = _fill_( _sub_SxS_( hi, lo), _emal_54064__al_10132); 
    _al_10133 = _fill_( _add_SxS_( -129, _al_10132), _al_10132); 
    _emal_54062__pinl_5116__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5116__flat_198 = _fill_( _gt_SxS_( _al_10133, 0), _emal_54062__pinl_5116__flat_198); 
    _free_( _al_10133); 
    _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1 = _MAIN::_dup_5145_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5095_max, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5116__flat_198, rk, p, _pinl_5130__flat_41, lo, P) ; 
    _emal_54061__ctz_9829 = _alloc_( 1, 0, [:int]); 
    _ctz_9829 = _fill_( _sub_SxS_( _pinl_5110_l__SSA0_1, _pinl_5109_r__SSA0_3), _emal_54061__ctz_9829); 
    _emal_54060__pinl_5115__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5115__flat_197 = _fill_( _le_SxS_( _ctz_9829, 0), _emal_54060__pinl_5115__flat_197); 
    _free_( _ctz_9829); 
    _pinl_5112_argmax__SSA0_2, _pinl_5113_l__SSA0_2, _pinl_5114_P__SSA0_2 = _MAIN::_dup_5159_BlockHoare__Cond_12( _pinl_5107_argmax__SSA0_1, _pinl_5108_max__SSA0_1, _pinl_5115__flat_197, rk, p, _pinl_5109_r__SSA0_3, _pinl_5110_l__SSA0_1, _pinl_5111_P__SSA0_1) ; 
    P__SSA0_3, lcount, hull__SSA0_1 = _MAIN::FindHull( _pinl_5114_P__SSA0_2, _pinl_5113_l__SSA0_2, hi, p, rk, _pinl_5112_argmax__SSA0_2, hull, hull_count) ; 
    _emal_54059__uprf_9754 = _alloc_( 1, 0, [:int]); 
    _uprf_9754 = _fill_( _add_SxS_( lcount, 1), _emal_54059__uprf_9754); 
    _emal_54058__pinl_9196_z = _alloc_( 1, 0, [:int]); 
    _pinl_9196_z = _fill_( _max_SxS_( lcount, _uprf_9754), _emal_54058__pinl_9196_z); 
    _emal_54052_hull__SSA0_3 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], hull__SSA0_1); 
    _wlidx_47903_hull__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _emrb_55373_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55374_val = _fill_( _isreused_( _emal_54052_hull__SSA0_3, hull__SSA0_1), _emrb_55373_mem); 
    hull__SSA0_3 = _MAIN::FindHull__Cond_40__ReuseCond_13( _emrb_55374_val, lcount, hull__SSA0_1, _pinl_9196_z, _uprf_9754, _wlidx_47903_hull__SSA0_3, _emal_54052_hull__SSA0_3, rk) ; 
    _emal_54051__pinl_5229__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_5229__flat_41 = _fill_( _add_SxS_( -1, _pinl_5113_l__SSA0_2), _emal_54051__pinl_5229__flat_41); 
    _emal_54050__al_10127 = _alloc_( 1, 0, [:int]); 
    _al_10127 = _fill_( _sub_SxS_( _pinl_5113_l__SSA0_2, lo), _emal_54050__al_10127); 
    _al_10128 = _fill_( _add_SxS_( _al_10127, -129), _al_10127); 
    _emal_54048__pinl_5215__flat_198 = _alloc_( 1, 0, [:int]); 
    _pinl_5215__flat_198 = _fill_( _gt_SxS_( _al_10128, 0), _emal_54048__pinl_5215__flat_198); 
    _free_( _al_10128); 
    _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1 = _MAIN::_dup_5244_BlockHoare__Cond_25( _pinl_5093_argmax, _pinl_5095_max, _pinl_5099_offsetsl, _pinl_5099_offsetsl, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5096__flat_55, _pinl_5215__flat_198, q, rk, _pinl_5229__flat_41, lo, P__SSA0_3) ; 
    _emal_54047__ctz_9825 = _alloc_( 1, 0, [:int]); 
    _ctz_9825 = _fill_( _sub_SxS_( _pinl_5209_l__SSA0_1, _pinl_5208_r__SSA0_3), _emal_54047__ctz_9825); 
    _emal_54046__pinl_5214__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_5214__flat_197 = _fill_( _le_SxS_( _ctz_9825, 0), _emal_54046__pinl_5214__flat_197); 
    _free_( _ctz_9825); 
    _pinl_5211_argmax__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5213_P__SSA0_2 = _MAIN::_dup_5258_BlockHoare__Cond_12( _pinl_5206_argmax__SSA0_1, _pinl_5207_max__SSA0_1, _pinl_5214__flat_197, q, rk, _pinl_5208_r__SSA0_3, _pinl_5209_l__SSA0_1, _pinl_5210_P__SSA0_1) ; 
    _pinl_5259__flat_40 = _fill_( _add_SxS_( lcount, hull_count), lcount); 
    _dec_rc_( hull_count, 1); 
    _pinl_5260__flat_40 = _fill_( _add_SxS_( 1, _pinl_5259__flat_40), _pinl_5259__flat_40); 
    P__SSA0_7, rcount, hull__SSA0_5 = _MAIN::FindHull( _pinl_5213_P__SSA0_2, _pinl_5212_l__SSA0_2, _pinl_5113_l__SSA0_2, rk, q, _pinl_5211_argmax__SSA0_2, hull__SSA0_3, _pinl_5260__flat_40) ; 
    _pinl_5262__flat_40 = _fill_( _add_SxS_( rcount, _uprf_9754), rcount); 
    _free_( _uprf_9754); 
  }
  else
  { 
    _dec_rc_( lo, 1); 
    _dec_rc_( hi, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( rk, 1); 
    _dec_rc_( hull_count, 1); 
    _free_( _flat_231); 
    _emal_54071_count__SSA0_2 = _alloc_( 1, 0, [:int]); 
    count__SSA0_2 = _fill_( 0, _emal_54071_count__SSA0_2); 
  }
  P__SSA0_9 = ( _flat_231 ? P__SSA0_7 : P ); 
  hull__SSA0_7 = ( _flat_231 ? hull__SSA0_5 : hull ); 
  count__SSA0_4 = ( _flat_231 ? _pinl_5262__flat_40 : count__SSA0_2 ); 
  return( count__SSA0_4, hull__SSA0_7, P__SSA0_9); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::FindHull__Cond_40__ReuseCond_13(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::FindHull__Cond_40__ReuseCond_13( bool _emrb_55347 { ,NN } , int lcount { ,NN } , double[1000000,2] hull__SSA0_1 { ,NN } , int _pinl_9196_z { ,NN } , int _uprf_9754 { ,NN } , int _wlidx_47903_hull__SSA0_3 { ,NN } , double[1000000,2] _emal_54052_hull__SSA0_3 { ,NN } , double[2] rk { ,NN } )
/*
 *  FindHull__Cond_40__ReuseCond_13 ::  ---
 */
{ 
  double _emdr_55788 { , NN } ; 
  double[1000000,2] _emrb_55372 { , NN } ; 
  double _dup_55371__emal_54057_val { , NN } ; 
  double _dup_55370__pinl_9207__flat_28 { , NN } ; 
  double _dup_55369__emal_54055__dup_12539__pinl_9207__flat_28 { , NN } ; 
  int _dup_55368__ivesli_48480 { , NN } ; 
  int _dup_55367__emal_54056__ivesli_48480 { , NN } ; 
  double _dup_55366__emal_54054_val { , NN } ; 
  double _dup_55365__wlsw_12532 { , NN } ; 
  double _dup_55364__emal_54053__dup_12546__wlsw_12532 { , NN } ; 
  double[1000000,2] _dup_55363_hull__SSA0_3 { , NN } ; 
  int _dup_55362__eat_12441 { , NN } ; 
  int _dup_55361__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55360__wlsb_12533 { , NN } ; 
  double _dup_55354__emal_54054_val { , NN } ; 
  double _dup_55353__wlsw_12532 { , NN } ; 
  double _dup_55352__emal_54053__dup_12546__wlsw_12532 { , NN } ; 
  double[1000000,2] _dup_55351_hull__SSA0_3 { , NN } ; 
  int _dup_55350__eat_12441 { , NN } ; 
  int _dup_55349__pinl_5164__eat_766 { , NN } ; 
  int[2] _dup_55348__wlsb_12533 { , NN } ; 

  if (_emrb_55347) 
  { 
    _dec_rc_( _emrb_55347, 1); 
    _dup_55349__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55350__eat_12441 = _alloc_( 1, 0, [:int]); 
    _dup_55351_hull__SSA0_3 = with2 (_dup_55348__wlsb_12533=[_dup_55349__pinl_5164__eat_766, _dup_55350__eat_12441] (IDXS:_wlidx_47903_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55352__emal_54053__dup_12546__wlsw_12532 = _alloc_( 1, 0, [:int]); 
            _dup_55353__wlsw_12532 = _fill_( _idx_sel_( _dup_55350__eat_12441, rk), _dup_55352__emal_54053__dup_12546__wlsw_12532); 
            _dup_55354__emal_54054_val = _wl_assign_( _dup_55353__wlsw_12532, _emal_54052_hull__SSA0_3, _dup_55348__wlsb_12533, _wlidx_47903_hull__SSA0_3); 
            _free_( _dup_55353__wlsw_12532); 
          } : _dup_55354__emal_54054_val ; ,
        op_1 =
          { 
            _emdr_55788 = _noop_( _dup_55348__wlsb_12533); 
          } : _emdr_55788 ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_9754, 2 ]
         */
        (lcount => _uprf_9754), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_9196_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9196_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_54052_hull__SSA0_3 ,IDX(_wlidx_47903_hull__SSA0_3)); 
    _dec_rc_( hull__SSA0_1, 1); 
    _free_( _pinl_9196_z); 
    _free_( _dup_55349__pinl_5164__eat_766); 
    _free_( _dup_55350__eat_12441); 
    _free_( _wlidx_47903_hull__SSA0_3); 
  }
  else
  { 
    _dec_rc_( _emrb_55347, 1); 
    _dup_55361__pinl_5164__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55362__eat_12441 = _alloc_( 1, 0, [:int]); 
    _dup_55363_hull__SSA0_3 = with2 (_dup_55360__wlsb_12533=[_dup_55361__pinl_5164__eat_766, _dup_55362__eat_12441] (IDXS:_wlidx_47903_hull__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55364__emal_54053__dup_12546__wlsw_12532 = _alloc_( 1, 0, [:int]); 
            _dup_55365__wlsw_12532 = _fill_( _idx_sel_( _dup_55362__eat_12441, rk), _dup_55364__emal_54053__dup_12546__wlsw_12532); 
            _dup_55366__emal_54054_val = _wl_assign_( _dup_55365__wlsw_12532, _emal_54052_hull__SSA0_3, _dup_55360__wlsb_12533, _wlidx_47903_hull__SSA0_3); 
            _free_( _dup_55365__wlsw_12532); 
          } : _dup_55366__emal_54054_val ; ,
        op_1 =
          { 
            _dup_55367__emal_54056__ivesli_48480 = _alloc_( 1, 0, [:int]); 
            _dup_55368__ivesli_48480 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55361__pinl_5164__eat_766, _dup_55362__eat_12441), _dup_55367__emal_54056__ivesli_48480); 
            _dup_55369__emal_54055__dup_12539__pinl_9207__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55370__pinl_9207__flat_28 = _fill_( _idx_sel_( _dup_55368__ivesli_48480, hull__SSA0_1), _dup_55369__emal_54055__dup_12539__pinl_9207__flat_28); 
            _free_( _dup_55368__ivesli_48480); 
            _dup_55371__emal_54057_val = _wl_assign_( _dup_55370__pinl_9207__flat_28, _emal_54052_hull__SSA0_3, _dup_55360__wlsb_12533, _wlidx_47903_hull__SSA0_3); 
            _free_( _dup_55370__pinl_9207__flat_28); 
          } : _dup_55371__emal_54057_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ lcount, 0 ] -> [ _uprf_9754, 2 ]
         */
        (lcount => _uprf_9754), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ 0, 0 ] -> [ lcount, 2 ]
         */
        (0 => lcount), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ _pinl_9196_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9196_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** conexpr: **********/
        modarray( hull__SSA0_1 , _emal_54052_hull__SSA0_3 ,IDX(_wlidx_47903_hull__SSA0_3)); 
    _free_( _pinl_9196_z); 
    _free_( _dup_55361__pinl_5164__eat_766); 
    _free_( _dup_55362__eat_12441); 
    _free_( _wlidx_47903_hull__SSA0_3); 
    _dec_rc_( hull__SSA0_1, 1); 
  }
  _emrb_55372 = ( _emrb_55347 ? _dup_55351_hull__SSA0_3 : _dup_55363_hull__SSA0_3 ); 
  return( _emrb_55372); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5258_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5258_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5258_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5257_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5257_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5257_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5257_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_54078__ctz_9839 { , NN } ; 
  bool _emal_54077__pinl_3760__flat_197 { , NN } ; 
  int _emal_54076__ctz_9837 { , NN } ; 
  bool _emal_54075__pinl_4092__flat_197 { , NN } ; 
  int _emal_54074__ctz_9835 { , NN } ; 
  bool _emal_54073__pinl_4425__flat_196 { , NN } ; 
  bool _emal_54072__pinl_4645__flat_197 { , NN } ; 
  int _ctz_9839 { , NN } ; 
  int _ctz_9837 { , NN } ; 
  int _ctz_9835 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_54078__ctz_9839 = _alloc_( 1, 0, [:int]); 
  _ctz_9839 = _fill_( _sub_SxS_( l, r), _emal_54078__ctz_9839); 
  _emal_54077__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_9839, 0), _emal_54077__pinl_3760__flat_197); 
  _free_( _ctz_9839); 
  _hce_6 = _MAIN::_dup_5245_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5249_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_54076__ctz_9837 = _alloc_( 1, 0, [:int]); 
  _ctz_9837 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_54076__ctz_9837); 
  _emal_54075__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_9837, 0), _emal_54075__pinl_4092__flat_197); 
  _free_( _ctz_9837); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5255_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_54074__ctz_9835 = _alloc_( 1, 0, [:int]); 
  _ctz_9835 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_54074__ctz_9835); 
  _emal_54073__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_9835, 0), _emal_54073__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5256_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_54072__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_9835, 0), _emal_54072__pinl_4645__flat_197); 
  _free_( _ctz_9835); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5257_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5256_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5256_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5256_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55791 { , NN } ; 
  double _emdr_55790 { , NN } ; 
  bool _emrb_55345_val { , NN } ; 
  bool _emrb_55344_mem { , NN } ; 
  int _emal_54126__iveras_51559 { , NN } ; 
  int _emal_54125__ivesli_48491 { , NN } ; 
  double _emal_54124__pinl_4643__flat_149__SSA4_1 { , NN } ; 
  int _emal_54123__iveras_51560 { , NN } ; 
  int _emal_54122__ivesli_48489 { , NN } ; 
  double _emal_54121__pinl_4630__flat_149__SSA4_1 { , NN } ; 
  double _emal_54120__pinl_4616__flat_1457 { , NN } ; 
  int _emal_54119__iveras_51561 { , NN } ; 
  int _emal_54118__ivesli_48487 { , NN } ; 
  double _emal_54117__pinl_4643__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54116__iveras_51562 { , NN } ; 
  int _emal_54115__ivesli_48485 { , NN } ; 
  double _emal_54114__pinl_4630__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54113__pinl_4616__flat_1457__SSA5_2 { , NN } ; 
  int _emal_54112__uprf_9760 { , NN } ; 
  int _emal_54111__pinl_9276_z { , NN } ; 
  double[1000000,2] _emal_54105__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_54104__pinl_4575__flat_149__SSA4_1 { , NN } ; 
  double _emal_54103__pinl_4562__flat_149__SSA4_1 { , NN } ; 
  double _emal_54102__pinl_4548__flat_1465 { , NN } ; 
  double _emal_54101__pinl_4575__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54100__pinl_4562__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54099__pinl_4548__flat_1465__SSA5_2 { , NN } ; 
  int _emal_54098__uprf_9757 { , NN } ; 
  int _emal_54097__pinl_9296_z { , NN } ; 
  double _emal_54093_val { , NN } ; 
  double _emal_54092_val { , NN } ; 
  double[1000000,2] _emal_54091__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_54090__pinl_4507__flat_149__SSA4_1 { , NN } ; 
  double _emal_54089__pinl_4494__flat_149__SSA4_1 { , NN } ; 
  double _emal_54088__pinl_4480__flat_1465 { , NN } ; 
  double _emal_54087__pinl_4507__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54086__pinl_4494__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54085__pinl_4480__flat_1465__SSA5_2 { , NN } ; 
  double _emal_54081_val { , NN } ; 
  double _emal_54080_val { , NN } ; 
  double[1000000,2] _emal_54079__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51562 { , NN } ; 
  int _iveras_51561 { , NN } ; 
  int _iveras_51560 { , NN } ; 
  int _iveras_51559 { , NN } ; 
  int _ivesli_48491 { , NN } ; 
  int _ivesli_48489 { , NN } ; 
  int _ivesli_48487 { , NN } ; 
  int _ivesli_48485 { , NN } ; 
  int _wlidx_47906__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47905__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47904__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_12584 { , NN } ; 
  int[2] _wlsb_12556 { , NN } ; 
  int _eat_12447 { , NN } ; 
  int _eat_12446 { , NN } ; 
  double _pinl_4480__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA5_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _uprf_9760 { , NN } ; 
  int _uprf_9757 { , NN } ; 
  double _pinl_4494__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA4_1 { , NN } ; 
  int _pinl_9276_z { , NN } ; 
  int _pinl_9296_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_54126__iveras_51559 = _alloc_( 1, 0, [:int]); 
    _iveras_51559 = _fill_( 0, _emal_54126__iveras_51559); 
    _ivesli_48491 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51559), _iveras_51559); 
    _emal_54124__pinl_4643__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48491, P), _emal_54124__pinl_4643__flat_149__SSA4_1); 
    _emal_54123__iveras_51560 = _alloc_( 1, 0, [:int]); 
    _iveras_51560 = _fill_( 0, _emal_54123__iveras_51560); 
    _ivesli_48489 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51560), _iveras_51560); 
    _emal_54121__pinl_4630__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48489, P), _emal_54121__pinl_4630__flat_149__SSA4_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA4_1, _pinl_4643__flat_149__SSA4_1), _pinl_4630__flat_149__SSA4_1); 
    _free_( _pinl_4643__flat_149__SSA4_1); 
    _emal_54119__iveras_51561 = _alloc_( 1, 0, [:int]); 
    _iveras_51561 = _fill_( 1, _emal_54119__iveras_51561); 
    _ivesli_48487 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51561), _iveras_51561); 
    _emal_54117__pinl_4643__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48487, P), _emal_54117__pinl_4643__flat_149__SSA4_1__SSA5_1); 
    _emal_54116__iveras_51562 = _alloc_( 1, 0, [:int]); 
    _iveras_51562 = _fill_( 1, _emal_54116__iveras_51562); 
    _ivesli_48485 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51562), _iveras_51562); 
    _emal_54114__pinl_4630__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48485, P), _emal_54114__pinl_4630__flat_149__SSA4_1__SSA5_1); 
    _pinl_4616__flat_1457__SSA5_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA4_1__SSA5_1, _pinl_4643__flat_149__SSA4_1__SSA5_1), _pinl_4630__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4643__flat_149__SSA4_1__SSA5_1); 
    _emal_54112__uprf_9760 = _alloc_( 1, 0, [:int]); 
    _uprf_9760 = _fill_( _add_SxS_( 1, l), _emal_54112__uprf_9760); 
    _emal_54111__pinl_9276_z = _alloc_( 1, 0, [:int]); 
    _pinl_9276_z = _fill_( _max_SxS_( _uprf_9760, l), _emal_54111__pinl_9276_z); 
    _emal_54105__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47904__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55344_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55345_val = _fill_( _isreused_( _emal_54105__pinl_4435_P__SSA0_1, P), _emrb_55344_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5256_BlockHoare__Cond_1__ReuseCond_12( _emrb_55345_val, _pinl_4616__flat_1457, _pinl_9276_z, _uprf_9760, _pinl_4616__flat_1457__SSA5_2, _wlidx_47904__pinl_4435_P__SSA0_1, _emal_54105__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_54104__pinl_4575__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48491, _pinl_4435_P__SSA0_1), _emal_54104__pinl_4575__flat_149__SSA4_1); 
    _emal_54103__pinl_4562__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48489, _pinl_4435_P__SSA0_1), _emal_54103__pinl_4562__flat_149__SSA4_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA4_1, _pinl_4575__flat_149__SSA4_1), _pinl_4562__flat_149__SSA4_1); 
    _free_( _pinl_4575__flat_149__SSA4_1); 
    _emal_54101__pinl_4575__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48487, _pinl_4435_P__SSA0_1), _emal_54101__pinl_4575__flat_149__SSA4_1__SSA5_1); 
    _emal_54100__pinl_4562__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48485, _pinl_4435_P__SSA0_1), _emal_54100__pinl_4562__flat_149__SSA4_1__SSA5_1); 
    _pinl_4548__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA4_1__SSA5_1, _pinl_4575__flat_149__SSA4_1__SSA5_1), _pinl_4562__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4575__flat_149__SSA4_1__SSA5_1); 
    _emal_54098__uprf_9757 = _alloc_( 1, 0, [:int]); 
    _uprf_9757 = _fill_( _add_SxS_( 1, r), _emal_54098__uprf_9757); 
    _emal_54097__pinl_9296_z = _alloc_( 1, 0, [:int]); 
    _pinl_9296_z = _fill_( _max_SxS_( _uprf_9757, r), _emal_54097__pinl_9296_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_12446 = _alloc_( 1, 0, [:int]); 
    _wlidx_47905__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_12584=[_pinl_4513__eat_766, _eat_12446] (IDXS:_wlidx_47905__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_54092_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_12584, _wlidx_47905__pinl_4437_P__SSA0_3); 
          } : _emal_54092_val ; ,
        op_1 =
          { 
            _emal_54093_val = _wl_assign_( _pinl_4548__flat_1465__SSA5_2, _pinl_4435_P__SSA0_1, _wlsb_12584, _wlidx_47905__pinl_4437_P__SSA0_3); 
          } : _emal_54093_val ; ,
        op_2 =
          { 
            _emdr_55790 = _noop_( _wlsb_12584); 
          } : _emdr_55790 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_9757, 1 ]
         */
        (r => _uprf_9757), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_9757, 2 ]
         */
        (r => _uprf_9757), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9296_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9296_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47905__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_9296_z); 
    _free_( _uprf_9757); 
    _free_( _eat_12446); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA5_2); 
    _free_( _wlidx_47905__pinl_4437_P__SSA0_3); 
    _emal_54090__pinl_4507__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48491, _pinl_4437_P__SSA0_3), _emal_54090__pinl_4507__flat_149__SSA4_1); 
    _free_( _ivesli_48491); 
    _emal_54089__pinl_4494__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48489, _pinl_4437_P__SSA0_3), _emal_54089__pinl_4494__flat_149__SSA4_1); 
    _free_( _ivesli_48489); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA4_1, _pinl_4507__flat_149__SSA4_1), _pinl_4494__flat_149__SSA4_1); 
    _free_( _pinl_4507__flat_149__SSA4_1); 
    _emal_54087__pinl_4507__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48487, _pinl_4437_P__SSA0_3), _emal_54087__pinl_4507__flat_149__SSA4_1__SSA5_1); 
    _free_( _ivesli_48487); 
    _emal_54086__pinl_4494__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48485, _pinl_4437_P__SSA0_3), _emal_54086__pinl_4494__flat_149__SSA4_1__SSA5_1); 
    _free_( _ivesli_48485); 
    _pinl_4480__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA4_1__SSA5_1, _pinl_4507__flat_149__SSA4_1__SSA5_1), _pinl_4494__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4507__flat_149__SSA4_1__SSA5_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_12447 = _alloc_( 1, 0, [:int]); 
    _wlidx_47906__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_12556=[_pinl_4445__eat_766, _eat_12447] (IDXS:_wlidx_47906__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_54080_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_12556, _wlidx_47906__pinl_4439_P__SSA0_5); 
          } : _emal_54080_val ; ,
        op_1 =
          { 
            _emal_54081_val = _wl_assign_( _pinl_4480__flat_1465__SSA5_2, _pinl_4437_P__SSA0_3, _wlsb_12556, _wlidx_47906__pinl_4439_P__SSA0_5); 
          } : _emal_54081_val ; ,
        op_2 =
          { 
            _emdr_55791 = _noop_( _wlsb_12556); 
          } : _emdr_55791 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9760, 1 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9760, 2 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9276_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9276_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47906__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_9276_z); 
    _free_( _uprf_9760); 
    _free_( _eat_12447); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA5_2); 
    _free_( _wlidx_47906__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5256_BlockHoare__Cond_1__ReuseCond_12(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5256_BlockHoare__Cond_1__ReuseCond_12( bool _emrb_55320 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_9276_z { ,NN } , int _uprf_9760 { ,NN } , double _pinl_4616__flat_1457__SSA5_2 { ,NN } , int _wlidx_47904__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_54105__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5256_BlockHoare__Cond_1__ReuseCond_12 ::  ---
 */
{ 
  double _emdr_55789 { , NN } ; 
  double[1000000,2] _emrb_55343 { , NN } ; 
  double _dup_55342__emal_54110_val { , NN } ; 
  double _dup_55341__pinl_9287__flat_28 { , NN } ; 
  double _dup_55340__emal_54108__dup_12618__pinl_9287__flat_28 { , NN } ; 
  int _dup_55339__ivesli_48483 { , NN } ; 
  int _dup_55338__emal_54109__ivesli_48483 { , NN } ; 
  double _dup_55337__emal_54107_val { , NN } ; 
  double _dup_55336__emal_54106_val { , NN } ; 
  double[1000000,2] _dup_55335__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55334__eat_12445 { , NN } ; 
  int _dup_55333__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55332__wlsb_12612 { , NN } ; 
  double _dup_55326__emal_54107_val { , NN } ; 
  double _dup_55325__emal_54106_val { , NN } ; 
  double[1000000,2] _dup_55324__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55323__eat_12445 { , NN } ; 
  int _dup_55322__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55321__wlsb_12612 { , NN } ; 

  if (_emrb_55320) 
  { 
    _dec_rc_( _emrb_55320, 1); 
    _dup_55322__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55323__eat_12445 = _alloc_( 1, 0, [:int]); 
    _dup_55324__pinl_4435_P__SSA0_1 = with2 (_dup_55321__wlsb_12612=[_dup_55322__pinl_4581__eat_766, _dup_55323__eat_12445] (IDXS:_wlidx_47904__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55325__emal_54106_val = _wl_assign_( _pinl_4616__flat_1457, _emal_54105__pinl_4435_P__SSA0_1, _dup_55321__wlsb_12612, _wlidx_47904__pinl_4435_P__SSA0_1); 
          } : _dup_55325__emal_54106_val ; ,
        op_1 =
          { 
            _dup_55326__emal_54107_val = _wl_assign_( _pinl_4616__flat_1457__SSA5_2, _emal_54105__pinl_4435_P__SSA0_1, _dup_55321__wlsb_12612, _wlidx_47904__pinl_4435_P__SSA0_1); 
          } : _dup_55326__emal_54107_val ; ,
        op_2 =
          { 
            _emdr_55789 = _noop_( _dup_55321__wlsb_12612); 
          } : _emdr_55789 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9760, 1 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9760, 2 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9276_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9276_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_54105__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47904__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55323__eat_12445); 
    _free_( _dup_55322__pinl_4581__eat_766); 
    _free_( _wlidx_47904__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA5_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55320, 1); 
    _dup_55333__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55334__eat_12445 = _alloc_( 1, 0, [:int]); 
    _dup_55335__pinl_4435_P__SSA0_1 = with2 (_dup_55332__wlsb_12612=[_dup_55333__pinl_4581__eat_766, _dup_55334__eat_12445] (IDXS:_wlidx_47904__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55336__emal_54106_val = _wl_assign_( _pinl_4616__flat_1457, _emal_54105__pinl_4435_P__SSA0_1, _dup_55332__wlsb_12612, _wlidx_47904__pinl_4435_P__SSA0_1); 
          } : _dup_55336__emal_54106_val ; ,
        op_1 =
          { 
            _dup_55337__emal_54107_val = _wl_assign_( _pinl_4616__flat_1457__SSA5_2, _emal_54105__pinl_4435_P__SSA0_1, _dup_55332__wlsb_12612, _wlidx_47904__pinl_4435_P__SSA0_1); 
          } : _dup_55337__emal_54107_val ; ,
        op_2 =
          { 
            _dup_55338__emal_54109__ivesli_48483 = _alloc_( 1, 0, [:int]); 
            _dup_55339__ivesli_48483 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55333__pinl_4581__eat_766, _dup_55334__eat_12445), _dup_55338__emal_54109__ivesli_48483); 
            _dup_55340__emal_54108__dup_12618__pinl_9287__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55341__pinl_9287__flat_28 = _fill_( _idx_sel_( _dup_55339__ivesli_48483, P), _dup_55340__emal_54108__dup_12618__pinl_9287__flat_28); 
            _free_( _dup_55339__ivesli_48483); 
            _dup_55342__emal_54110_val = _wl_assign_( _dup_55341__pinl_9287__flat_28, _emal_54105__pinl_4435_P__SSA0_1, _dup_55332__wlsb_12612, _wlidx_47904__pinl_4435_P__SSA0_1); 
            _free_( _dup_55341__pinl_9287__flat_28); 
          } : _dup_55342__emal_54110_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9760, 1 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9760, 2 ]
         */
        (l => _uprf_9760), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9276_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9276_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_54105__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47904__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55333__pinl_4581__eat_766); 
    _free_( _dup_55334__eat_12445); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47904__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA5_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55343 = ( _emrb_55320 ? _dup_55324__pinl_4435_P__SSA0_1 : _dup_55335__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55343); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5255_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5255_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5255_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_54128__ctz_9841 { , NN } ; 
  bool _emal_54127__pinl_4093__flat_197 { , NN } ; 
  int _ctz_9841 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_54128__ctz_9841 = _alloc_( 1, 0, [:int]); 
    _ctz_9841 = _fill_( _sub_SxS_( l, r), _emal_54128__ctz_9841); 
    _emal_54127__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_9841, 0), _emal_54127__pinl_4093__flat_197); 
    _free_( _ctz_9841); 
    _hce_4 = _MAIN::_dup_5250_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5254_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5254_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5254_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5254_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55177_r { , NN } ; 
  int _emlr_55176_r { , NN } ; 
  int _emal_54136__dlirmov_51373__wlsimp_9576 { , NN } ; 
  int _emal_54135__dlirmov_51375__pinl_4214__eat_768__SSA5_1 { , NN } ; 
  double _emal_54134__dlirmov_51378__pinl_4296__flat_149 { , NN } ; 
  double _emal_54133__dlirmov_51381__pinl_4271__flat_149 { , NN } ; 
  double _emal_54132__dlirmov_51384__pinl_4257__flat_149 { , NN } ; 
  double _emal_54131__dlirmov_51387__pinl_4244__flat_149 { , NN } ; 
  int _emal_54130__dlirmov_51695__iveras_51563 { , NN } ; 
  int _emal_54129__dlirmov_51696__iveras_51564 { , NN } ; 
  int _dlirmov_51696__iveras_51564 { , NN } ; 
  int _dlirmov_51695__iveras_51563 { , NN } ; 
  double _dlirmov_51387__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_51384__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_51381__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_51378__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_51375__pinl_4214__eat_768__SSA5_1 { , NN } ; 
  int{0} _dlirmov_51373__wlsimp_9576 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_54136__dlirmov_51373__wlsimp_9576 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51373__wlsimp_9576 = _fill_( 0, _emal_54136__dlirmov_51373__wlsimp_9576); 
    _emal_54135__dlirmov_51375__pinl_4214__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51375__pinl_4214__eat_768__SSA5_1 = _fill_( 1, _emal_54135__dlirmov_51375__pinl_4214__eat_768__SSA5_1); 
    _emal_54134__dlirmov_51378__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51378__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_51373__wlsimp_9576, q), _emal_54134__dlirmov_51378__pinl_4296__flat_149); 
    _emal_54133__dlirmov_51381__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51381__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_51375__pinl_4214__eat_768__SSA5_1, p), _emal_54133__dlirmov_51381__pinl_4271__flat_149); 
    _emal_54132__dlirmov_51384__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51384__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_51375__pinl_4214__eat_768__SSA5_1, q), _emal_54132__dlirmov_51384__pinl_4257__flat_149); 
    _free_( _dlirmov_51375__pinl_4214__eat_768__SSA5_1); 
    _emal_54131__dlirmov_51387__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51387__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_51373__wlsimp_9576, p), _emal_54131__dlirmov_51387__pinl_4244__flat_149); 
    _free_( _dlirmov_51373__wlsimp_9576); 
    _emal_54130__dlirmov_51695__iveras_51563 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51695__iveras_51563 = _fill_( 0, _emal_54130__dlirmov_51695__iveras_51563); 
    _emal_54129__dlirmov_51696__iveras_51564 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51696__iveras_51564 = _fill_( 1, _emal_54129__dlirmov_51696__iveras_51564); 
    _emlr_55176_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55177_r = _fill_( _copy_( r), _emlr_55176_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5253_BlockHoare__Loop_3( _dlirmov_51696__iveras_51564, _dlirmov_51695__iveras_51563, _dlirmov_51387__pinl_4244__flat_149, _dlirmov_51384__pinl_4257__flat_149, _dlirmov_51381__pinl_4271__flat_149, _dlirmov_51378__pinl_4296__flat_149, argmax, max, q, p, _emlr_55177_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5253_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5253_BlockHoare__Loop_3( int _iveras_51564 { ,NN } , int _iveras_51563 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5253_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_54154__ivesli_48495 { , NN } ; 
  double _emal_54153__pinl_4213__flat_149 { , NN } ; 
  int _emal_54152__ivesli_48493 { , NN } ; 
  double _emal_54151__pinl_4213__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54150__flat_129__SSA5_2 { , NN } ; 
  double _emal_54149__pinl_4284__flat_95 { , NN } ; 
  double _emal_54148__pinl_4259__flat_95 { , NN } ; 
  double _emal_54142__ctz_9845 { , NN } ; 
  bool _emal_54141__pinl_4312__flat_252 { , NN } ; 
  int _emal_54140__pinl_4315__flat_124 { , NN } ; 
  int _emal_54139__esd_9950 { , NN } ; 
  bool _emal_54137__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48495 { , NN } ; 
  int _ivesli_48493 { , NN } ; 
  int _esd_9950 { , NN } ; 
  double _ctz_9845 { , NN } ; 
  int _ctz_9843 { , NN } ; 
  double[2] _flat_129__SSA5_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA5_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_54154__ivesli_48495 = _alloc_( 1, 0, [:int]); 
  _ivesli_48495 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51563), _emal_54154__ivesli_48495); 
  _emal_54153__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48495, P), _emal_54153__pinl_4213__flat_149); 
  _free_( _ivesli_48495); 
  _emal_54152__ivesli_48493 = _alloc_( 1, 0, [:int]); 
  _ivesli_48493 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51564), _emal_54152__ivesli_48493); 
  _emal_54151__pinl_4213__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48493, P), _emal_54151__pinl_4213__flat_149__SSA5_2); 
  _free_( _ivesli_48493); 
  _emal_54150__flat_129__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA5_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA5_2 ], _emal_54150__flat_129__SSA5_2); 
  _emal_54149__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_54149__pinl_4284__flat_95); 
  _emal_54148__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA5_2), _emal_54148__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA5_2), _pinl_4213__flat_149__SSA5_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_54142__ctz_9845 = _alloc_( 1, 0, [:int]); 
  _ctz_9845 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_54142__ctz_9845); 
  _emal_54141__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_9845, 0.0), _emal_54141__pinl_4312__flat_252); 
  _free_( _ctz_9845); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5251_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA5_2, max, _pinl_4230__flat_95) ; 
  _emal_54140__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_54140__pinl_4315__flat_124); 
  _emal_54139__esd_9950 = r; 
  _esd_9950 = _fill_( _sub_SxS_( 1, r), _emal_54139__esd_9950); 
  _ctz_9843 = _fill_( _add_SxS_( _esd_9950, l), _esd_9950); 
  _emal_54137__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_9843, 0), _emal_54137__pinl_4316__flat_197); 
  _free_( _ctz_9843); 
  _hce_3 = _MAIN::_dup_5252_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5253_BlockHoare__Loop_3( _iveras_51564, _iveras_51563, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51563, 1); 
    _dec_rc_( _iveras_51564, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5252_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5252_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5252_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_54175__hce_3__SSA0_1 { , NN } ; 
  int _emal_54174__wlsimp_9579 { , NN } ; 
  int _emal_54173__iveras_51565 { , NN } ; 
  int _emal_54172__ivesli_48499 { , NN } ; 
  double _emal_54171__pinl_4328__flat_149 { , NN } ; 
  int _emal_54170__pinl_4329__eat_768__SSA5_1 { , NN } ; 
  int _emal_54169__iveras_51566 { , NN } ; 
  int _emal_54168__ivesli_48497 { , NN } ; 
  double _emal_54167__pinl_4328__flat_149__SSA5_2 { , NN } ; 
  double _emal_54166__pinl_4411__flat_149 { , NN } ; 
  double _emal_54165__pinl_4399__flat_95 { , NN } ; 
  double _emal_54164__pinl_4386__flat_149 { , NN } ; 
  double _emal_54163__pinl_4374__flat_95 { , NN } ; 
  double _emal_54162__pinl_4373__flat_96 { , NN } ; 
  double _emal_54161__pinl_4372__flat_149 { , NN } ; 
  double _emal_54160__pinl_4360__flat_95 { , NN } ; 
  double _emal_54159__pinl_4359__flat_149 { , NN } ; 
  double _emal_54158__pinl_4347__flat_95 { , NN } ; 
  double _emal_54157__pinl_4346__flat_96 { , NN } ; 
  double _emal_54156__pinl_4345__flat_95 { , NN } ; 
  bool _emal_54155__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51566 { , NN } ; 
  int _iveras_51565 { , NN } ; 
  int _ivesli_48499 { , NN } ; 
  int _ivesli_48497 { , NN } ; 
  double _pinl_4328__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9579 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_54174__wlsimp_9579 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9579 = _fill_( 0, _emal_54174__wlsimp_9579); 
    _emal_54173__iveras_51565 = _alloc_( 1, 0, [:int]); 
    _iveras_51565 = _fill_( 0, _emal_54173__iveras_51565); 
    _ivesli_48499 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51565), _iveras_51565); 
    _emal_54171__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48499, P), _emal_54171__pinl_4328__flat_149); 
    _free_( _ivesli_48499); 
    _emal_54170__pinl_4329__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA5_1 = _fill_( 1, _emal_54170__pinl_4329__eat_768__SSA5_1); 
    _emal_54169__iveras_51566 = _alloc_( 1, 0, [:int]); 
    _iveras_51566 = _fill_( 1, _emal_54169__iveras_51566); 
    _ivesli_48497 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51566), _iveras_51566); 
    _emal_54167__pinl_4328__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48497, P), _emal_54167__pinl_4328__flat_149__SSA5_2); 
    _free_( _ivesli_48497); 
    _emal_54166__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_9579, q), _emal_54166__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_54164__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA5_1, p), _emal_54164__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA5_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_54161__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA5_1, q), _emal_54161__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA5_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA5_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA5_2); 
    _emal_54159__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_9579, p), _emal_54159__pinl_4359__flat_149); 
    _free_( _wlsimp_9579); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_54155__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_54155__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_54175__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_54175__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5251_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5251_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5251_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5250_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5250_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5250_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_54196__hce_4__SSA0_1 { , NN } ; 
  int _emal_54195__wlsimp_9582 { , NN } ; 
  int _emal_54194__iveras_51567 { , NN } ; 
  int _emal_54193__ivesli_48503 { , NN } ; 
  double _emal_54192__pinl_4105__flat_149 { , NN } ; 
  int _emal_54191__pinl_4106__eat_768__SSA5_1 { , NN } ; 
  int _emal_54190__iveras_51568 { , NN } ; 
  int _emal_54189__ivesli_48501 { , NN } ; 
  double _emal_54188__pinl_4105__flat_149__SSA5_2 { , NN } ; 
  double _emal_54187__pinl_4188__flat_149 { , NN } ; 
  double _emal_54186__pinl_4176__flat_95 { , NN } ; 
  double _emal_54185__pinl_4163__flat_149 { , NN } ; 
  double _emal_54184__pinl_4151__flat_95 { , NN } ; 
  double _emal_54183__pinl_4150__flat_96 { , NN } ; 
  double _emal_54182__pinl_4149__flat_149 { , NN } ; 
  double _emal_54181__pinl_4137__flat_95 { , NN } ; 
  double _emal_54180__pinl_4136__flat_149 { , NN } ; 
  double _emal_54179__pinl_4124__flat_95 { , NN } ; 
  double _emal_54178__pinl_4123__flat_96 { , NN } ; 
  double _emal_54177__pinl_4122__flat_95 { , NN } ; 
  bool _emal_54176__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51568 { , NN } ; 
  int _iveras_51567 { , NN } ; 
  int _ivesli_48503 { , NN } ; 
  int _ivesli_48501 { , NN } ; 
  double _pinl_4105__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9582 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_54195__wlsimp_9582 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9582 = _fill_( 0, _emal_54195__wlsimp_9582); 
    _emal_54194__iveras_51567 = _alloc_( 1, 0, [:int]); 
    _iveras_51567 = _fill_( 0, _emal_54194__iveras_51567); 
    _ivesli_48503 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51567), _iveras_51567); 
    _emal_54192__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48503, P), _emal_54192__pinl_4105__flat_149); 
    _free_( _ivesli_48503); 
    _emal_54191__pinl_4106__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA5_1 = _fill_( 1, _emal_54191__pinl_4106__eat_768__SSA5_1); 
    _emal_54190__iveras_51568 = _alloc_( 1, 0, [:int]); 
    _iveras_51568 = _fill_( 1, _emal_54190__iveras_51568); 
    _ivesli_48501 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51568), _iveras_51568); 
    _emal_54188__pinl_4105__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48501, P), _emal_54188__pinl_4105__flat_149__SSA5_2); 
    _free_( _ivesli_48501); 
    _emal_54187__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_9582, q), _emal_54187__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_54185__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA5_1, p), _emal_54185__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA5_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_54182__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA5_1, q), _emal_54182__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA5_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA5_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA5_2); 
    _emal_54180__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_9582, p), _emal_54180__pinl_4136__flat_149); 
    _free_( _wlsimp_9582); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_54176__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_54176__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_54196__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_54196__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5249_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5249_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5249_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55179_l { , NN } ; 
  int _emlr_55178_l { , NN } ; 
  int _emal_54204__dlirmov_51357__wlsimp_9585 { , NN } ; 
  int _emal_54203__dlirmov_51359__pinl_3881__eat_768__SSA5_1 { , NN } ; 
  double _emal_54202__dlirmov_51362__pinl_3963__flat_149 { , NN } ; 
  double _emal_54201__dlirmov_51365__pinl_3938__flat_149 { , NN } ; 
  double _emal_54200__dlirmov_51368__pinl_3924__flat_149 { , NN } ; 
  double _emal_54199__dlirmov_51371__pinl_3911__flat_149 { , NN } ; 
  int _emal_54198__dlirmov_51693__iveras_51569 { , NN } ; 
  int _emal_54197__dlirmov_51694__iveras_51570 { , NN } ; 
  int _dlirmov_51694__iveras_51570 { , NN } ; 
  int _dlirmov_51693__iveras_51569 { , NN } ; 
  double _dlirmov_51371__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_51368__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_51365__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_51362__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_51359__pinl_3881__eat_768__SSA5_1 { , NN } ; 
  int{0} _dlirmov_51357__wlsimp_9585 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_54204__dlirmov_51357__wlsimp_9585 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51357__wlsimp_9585 = _fill_( 0, _emal_54204__dlirmov_51357__wlsimp_9585); 
    _emal_54203__dlirmov_51359__pinl_3881__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51359__pinl_3881__eat_768__SSA5_1 = _fill_( 1, _emal_54203__dlirmov_51359__pinl_3881__eat_768__SSA5_1); 
    _emal_54202__dlirmov_51362__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51362__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_51357__wlsimp_9585, q), _emal_54202__dlirmov_51362__pinl_3963__flat_149); 
    _emal_54201__dlirmov_51365__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51365__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_51359__pinl_3881__eat_768__SSA5_1, p), _emal_54201__dlirmov_51365__pinl_3938__flat_149); 
    _emal_54200__dlirmov_51368__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51368__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_51359__pinl_3881__eat_768__SSA5_1, q), _emal_54200__dlirmov_51368__pinl_3924__flat_149); 
    _free_( _dlirmov_51359__pinl_3881__eat_768__SSA5_1); 
    _emal_54199__dlirmov_51371__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51371__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_51357__wlsimp_9585, p), _emal_54199__dlirmov_51371__pinl_3911__flat_149); 
    _free_( _dlirmov_51357__wlsimp_9585); 
    _emal_54198__dlirmov_51693__iveras_51569 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51693__iveras_51569 = _fill_( 0, _emal_54198__dlirmov_51693__iveras_51569); 
    _emal_54197__dlirmov_51694__iveras_51570 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51694__iveras_51570 = _fill_( 1, _emal_54197__dlirmov_51694__iveras_51570); 
    _emlr_55178_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55179_l = _fill_( _copy_( l), _emlr_55178_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5248_BlockHoare__Loop_8( _dlirmov_51694__iveras_51570, _dlirmov_51693__iveras_51569, _dlirmov_51371__pinl_3911__flat_149, _dlirmov_51368__pinl_3924__flat_149, _dlirmov_51365__pinl_3938__flat_149, _dlirmov_51362__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55179_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5248_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5248_BlockHoare__Loop_8( int _iveras_51570 { ,NN } , int _iveras_51569 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5248_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_54221__ivesli_48507 { , NN } ; 
  double _emal_54220__pinl_3880__flat_149 { , NN } ; 
  int _emal_54219__ivesli_48505 { , NN } ; 
  double _emal_54218__pinl_3880__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54217__flat_117__SSA5_2 { , NN } ; 
  double _emal_54216__pinl_3951__flat_95 { , NN } ; 
  double _emal_54215__pinl_3926__flat_95 { , NN } ; 
  double _emal_54209__ctz_9849 { , NN } ; 
  bool _emal_54208__pinl_3979__flat_252 { , NN } ; 
  int _emal_54207__pinl_3982__flat_122 { , NN } ; 
  int _emal_54206__ctz_9847 { , NN } ; 
  bool _emal_54205__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48507 { , NN } ; 
  int _ivesli_48505 { , NN } ; 
  double _ctz_9849 { , NN } ; 
  int _ctz_9847 { , NN } ; 
  double[2] _flat_117__SSA5_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_54221__ivesli_48507 = _alloc_( 1, 0, [:int]); 
  _ivesli_48507 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51569), _emal_54221__ivesli_48507); 
  _emal_54220__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48507, P), _emal_54220__pinl_3880__flat_149); 
  _free_( _ivesli_48507); 
  _emal_54219__ivesli_48505 = _alloc_( 1, 0, [:int]); 
  _ivesli_48505 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51570), _emal_54219__ivesli_48505); 
  _emal_54218__pinl_3880__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48505, P), _emal_54218__pinl_3880__flat_149__SSA5_2); 
  _free_( _ivesli_48505); 
  _emal_54217__flat_117__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA5_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA5_2 ], _emal_54217__flat_117__SSA5_2); 
  _emal_54216__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_54216__pinl_3951__flat_95); 
  _emal_54215__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA5_2), _emal_54215__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA5_2), _pinl_3880__flat_149__SSA5_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_54209__ctz_9849 = _alloc_( 1, 0, [:int]); 
  _ctz_9849 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_54209__ctz_9849); 
  _emal_54208__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_9849, 0.0), _emal_54208__pinl_3979__flat_252); 
  _free_( _ctz_9849); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5246_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA5_2, max, _pinl_3897__flat_95) ; 
  _emal_54207__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_54207__pinl_3982__flat_122); 
  _emal_54206__ctz_9847 = _alloc_( 1, 0, [:int]); 
  _ctz_9847 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_54206__ctz_9847); 
  _emal_54205__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_9847, 0), _emal_54205__pinl_3983__flat_197); 
  _free_( _ctz_9847); 
  _hce_5 = _MAIN::_dup_5247_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5248_BlockHoare__Loop_8( _iveras_51570, _iveras_51569, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51569, 1); 
    _dec_rc_( _iveras_51570, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5247_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5247_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5247_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_54242__hce_5__SSA0_1 { , NN } ; 
  int _emal_54241__wlsimp_9588 { , NN } ; 
  int _emal_54240__iveras_51571 { , NN } ; 
  int _emal_54239__ivesli_48511 { , NN } ; 
  double _emal_54238__pinl_3995__flat_149 { , NN } ; 
  int _emal_54237__pinl_3996__eat_768__SSA5_1 { , NN } ; 
  int _emal_54236__iveras_51572 { , NN } ; 
  int _emal_54235__ivesli_48509 { , NN } ; 
  double _emal_54234__pinl_3995__flat_149__SSA5_2 { , NN } ; 
  double _emal_54233__pinl_4078__flat_149 { , NN } ; 
  double _emal_54232__pinl_4066__flat_95 { , NN } ; 
  double _emal_54231__pinl_4053__flat_149 { , NN } ; 
  double _emal_54230__pinl_4041__flat_95 { , NN } ; 
  double _emal_54229__pinl_4040__flat_96 { , NN } ; 
  double _emal_54228__pinl_4039__flat_149 { , NN } ; 
  double _emal_54227__pinl_4027__flat_95 { , NN } ; 
  double _emal_54226__pinl_4026__flat_149 { , NN } ; 
  double _emal_54225__pinl_4014__flat_95 { , NN } ; 
  double _emal_54224__pinl_4013__flat_96 { , NN } ; 
  double _emal_54223__pinl_4012__flat_95 { , NN } ; 
  bool _emal_54222__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51572 { , NN } ; 
  int _iveras_51571 { , NN } ; 
  int _ivesli_48511 { , NN } ; 
  int _ivesli_48509 { , NN } ; 
  double _pinl_3995__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9588 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_54241__wlsimp_9588 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9588 = _fill_( 0, _emal_54241__wlsimp_9588); 
    _emal_54240__iveras_51571 = _alloc_( 1, 0, [:int]); 
    _iveras_51571 = _fill_( 0, _emal_54240__iveras_51571); 
    _ivesli_48511 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51571), _iveras_51571); 
    _emal_54238__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48511, P), _emal_54238__pinl_3995__flat_149); 
    _free_( _ivesli_48511); 
    _emal_54237__pinl_3996__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA5_1 = _fill_( 1, _emal_54237__pinl_3996__eat_768__SSA5_1); 
    _emal_54236__iveras_51572 = _alloc_( 1, 0, [:int]); 
    _iveras_51572 = _fill_( 1, _emal_54236__iveras_51572); 
    _ivesli_48509 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51572), _iveras_51572); 
    _emal_54234__pinl_3995__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48509, P), _emal_54234__pinl_3995__flat_149__SSA5_2); 
    _free_( _ivesli_48509); 
    _emal_54233__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_9588, q), _emal_54233__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_54231__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA5_1, p), _emal_54231__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA5_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_54228__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA5_1, q), _emal_54228__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA5_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA5_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA5_2); 
    _emal_54226__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_9588, p), _emal_54226__pinl_4026__flat_149); 
    _free_( _wlsimp_9588); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_54222__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_54222__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_54242__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_54242__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5246_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5246_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5246_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5245_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5245_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5245_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_54263__hce_6__SSA0_1 { , NN } ; 
  int _emal_54262__wlsimp_9591 { , NN } ; 
  int _emal_54261__iveras_51573 { , NN } ; 
  int _emal_54260__ivesli_48515 { , NN } ; 
  double _emal_54259__pinl_3772__flat_149 { , NN } ; 
  int _emal_54258__pinl_3773__eat_768__SSA5_1 { , NN } ; 
  int _emal_54257__iveras_51574 { , NN } ; 
  int _emal_54256__ivesli_48513 { , NN } ; 
  double _emal_54255__pinl_3772__flat_149__SSA5_2 { , NN } ; 
  double _emal_54254__pinl_3855__flat_149 { , NN } ; 
  double _emal_54253__pinl_3843__flat_95 { , NN } ; 
  double _emal_54252__pinl_3830__flat_149 { , NN } ; 
  double _emal_54251__pinl_3818__flat_95 { , NN } ; 
  double _emal_54250__pinl_3817__flat_96 { , NN } ; 
  double _emal_54249__pinl_3816__flat_149 { , NN } ; 
  double _emal_54248__pinl_3804__flat_95 { , NN } ; 
  double _emal_54247__pinl_3803__flat_149 { , NN } ; 
  double _emal_54246__pinl_3791__flat_95 { , NN } ; 
  double _emal_54245__pinl_3790__flat_96 { , NN } ; 
  double _emal_54244__pinl_3789__flat_95 { , NN } ; 
  bool _emal_54243__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51574 { , NN } ; 
  int _iveras_51573 { , NN } ; 
  int _ivesli_48515 { , NN } ; 
  int _ivesli_48513 { , NN } ; 
  double _pinl_3772__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9591 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_54262__wlsimp_9591 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9591 = _fill_( 0, _emal_54262__wlsimp_9591); 
    _emal_54261__iveras_51573 = _alloc_( 1, 0, [:int]); 
    _iveras_51573 = _fill_( 0, _emal_54261__iveras_51573); 
    _ivesli_48515 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51573), _iveras_51573); 
    _emal_54259__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48515, P), _emal_54259__pinl_3772__flat_149); 
    _free_( _ivesli_48515); 
    _emal_54258__pinl_3773__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA5_1 = _fill_( 1, _emal_54258__pinl_3773__eat_768__SSA5_1); 
    _emal_54257__iveras_51574 = _alloc_( 1, 0, [:int]); 
    _iveras_51574 = _fill_( 1, _emal_54257__iveras_51574); 
    _ivesli_48513 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51574), _iveras_51574); 
    _emal_54255__pinl_3772__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48513, P), _emal_54255__pinl_3772__flat_149__SSA5_2); 
    _free_( _ivesli_48513); 
    _emal_54254__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_9591, q), _emal_54254__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_54252__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA5_1, p), _emal_54252__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA5_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_54249__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA5_1, q), _emal_54249__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA5_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA5_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA5_2); 
    _emal_54247__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_9591, p), _emal_54247__pinl_3803__flat_149); 
    _free_( _wlsimp_9591); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_54243__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_54243__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_54263__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_54263__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5244_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5244_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5244_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_54264__dlirmov_51354__flat_65 { , NN } ; 
  int{0} _dlirmov_51354__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_59); 
    _emal_54264__dlirmov_51354__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51354__flat_65 = _fill_( 0, _emal_54264__dlirmov_51354__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5243_BlockHoare__Loop_24( _dlirmov_51354__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _dec_rc_( numr, 1); 
    _dec_rc_( numl, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5243_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5243_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5243_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_54283__esd_30647 { , NN } ; 
  bool _emal_54282__pinl_3238__flat_194 { , NN } ; 
  int _emal_54281__esd_30646 { , NN } ; 
  bool _emal_54280__pinl_3360__flat_194 { , NN } ; 
  int _emal_54279__ctz_9855 { , NN } ; 
  bool _emal_54278__pinl_3482__flat_196 { , NN } ; 
  int _emal_54277__esd_9995 { , NN } ; 
  bool _emal_54276__pinl_3483__flat_196 { , NN } ; 
  int _emal_54275__pinl_3748__flat_41 { , NN } ; 
  int _emal_54274__pinl_3749__flat_41 { , NN } ; 
  int _emal_54273__pinl_3750__flat_40 { , NN } ; 
  int _emal_54272__pinl_3751__flat_40 { , NN } ; 
  int _emal_54271__esd_30642 { , NN } ; 
  bool _emal_54270__pinl_3752__flat_194 { , NN } ; 
  int _emal_54269__esd_30641 { , NN } ; 
  bool _emal_54268__pinl_3754__flat_194 { , NN } ; 
  int _emal_54267__pinl_3757__flat_41 { , NN } ; 
  bool _emal_54265__pinl_3758__flat_198 { , NN } ; 
  int _esd_30647 { , NN } ; 
  int _esd_30646 { , NN } ; 
  int _esd_30642 { , NN } ; 
  int _esd_30641 { , NN } ; 
  int _esd_9995 { , NN } ; 
  int _ctz_9855 { , NN } ; 
  int _ctz_9851 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_54283__esd_30647 = _alloc_( 1, 0, [:int]); 
  _esd_30647 = _fill_( _neg_S_( numl), _emal_54283__esd_30647); 
  _emal_54282__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_30647, 0), _emal_54282__pinl_3238__flat_194); 
  _free_( _esd_30647); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5233_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_54281__esd_30646 = _alloc_( 1, 0, [:int]); 
  _esd_30646 = _fill_( _neg_S_( numr), _emal_54281__esd_30646); 
  _emal_54280__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_30646, 0), _emal_54280__pinl_3360__flat_194); 
  _free_( _esd_30646); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5237_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_54279__ctz_9855 = _alloc_( 1, 0, [:int]); 
  _ctz_9855 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_54279__ctz_9855); 
  _emal_54278__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_9855, 0), _emal_54278__pinl_3482__flat_196); 
  _free_( _ctz_9855); 
  _hce_7 = _MAIN::_dup_5238_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_54277__esd_9995 = _alloc_( 1, 0, [:int]); 
  _esd_9995 = _fill_( _neg_S_( _hce_7), _emal_54277__esd_9995); 
  _emal_54276__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_9995, 0), _emal_54276__pinl_3483__flat_196); 
  _free_( _esd_9995); 
  P__SSA0_1 = _MAIN::_dup_5240_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_54275__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_54275__pinl_3748__flat_41); 
  _emal_54274__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_54274__pinl_3749__flat_41); 
  _emal_54273__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_54273__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_54272__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_54272__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_54271__esd_30642 = _alloc_( 1, 0, [:int]); 
  _esd_30642 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_54271__esd_30642); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_54270__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_30642, 0), _emal_54270__pinl_3752__flat_194); 
  _free_( _esd_30642); 
  l__SSA0_1 = _MAIN::_dup_5241_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_54269__esd_30641 = _alloc_( 1, 0, [:int]); 
  _esd_30641 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_54269__esd_30641); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_54268__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_30641, 0), _emal_54268__pinl_3754__flat_194); 
  _free_( _esd_30641); 
  r__SSA0_1 = _MAIN::_dup_5242_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_54267__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_54267__pinl_3757__flat_41); 
  _ctz_9851 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_54265__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_9851, 0), _emal_54265__pinl_3758__flat_198); 
  _free_( _ctz_9851); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5243_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5242_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5242_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5242_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_54284__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_54284__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_54284__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5241_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5241_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5241_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_54285__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_54285__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_54285__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5240_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5240_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5240_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55318_val { , NN } ; 
  bool _emrb_55317_mem { , NN } ; 
  double[1000000,2] _emlr_55183_P { , NN } ; 
  double[1000000,2] _emlr_55182_P { , NN } ; 
  int{0} _emlr_55181_j { , NN } ; 
  int _emlr_55180_j { , NN } ; 
  int _emal_54289__dlirmov_51689__iveras_51575 { , NN } ; 
  int _emal_54288__dlirmov_51690__iveras_51576 { , NN } ; 
  int _emal_54287__dlirmov_51691__iveras_51577 { , NN } ; 
  int _emal_54286__dlirmov_51692__iveras_51578 { , NN } ; 
  int _dlirmov_51692__iveras_51578 { , NN } ; 
  int _dlirmov_51691__iveras_51577 { , NN } ; 
  int _dlirmov_51690__iveras_51576 { , NN } ; 
  int _dlirmov_51689__iveras_51575 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_54289__dlirmov_51689__iveras_51575 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51689__iveras_51575 = _fill_( 0, _emal_54289__dlirmov_51689__iveras_51575); 
    _emal_54288__dlirmov_51690__iveras_51576 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51690__iveras_51576 = _fill_( 0, _emal_54288__dlirmov_51690__iveras_51576); 
    _emal_54287__dlirmov_51691__iveras_51577 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51691__iveras_51577 = _fill_( 1, _emal_54287__dlirmov_51691__iveras_51577); 
    _emal_54286__dlirmov_51692__iveras_51578 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51692__iveras_51578 = _fill_( 1, _emal_54286__dlirmov_51692__iveras_51578); 
    _emlr_55182_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55317_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55318_val = _fill_( _isreused_( _emlr_55182_P, P), _emrb_55317_mem); 
    _emlr_55183_P = _MAIN::_dup_5240_BlockHoare__Cond_16__ReuseCond_11( _emrb_55318_val, _emlr_55182_P, P) ; 
    _emlr_55180_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55181_j = _fill_( _copy_( j), _emlr_55180_j); 
    P__SSA0_1 = _MAIN::_dup_5239_BlockHoare__Loop_15( _dlirmov_51692__iveras_51578, _dlirmov_51691__iveras_51577, _dlirmov_51690__iveras_51576, _dlirmov_51689__iveras_51575, offsetsl, offsetsr, startl, startr, num, _emlr_55181_j, r, l, _emlr_55183_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5240_BlockHoare__Cond_16__ReuseCond_11(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5240_BlockHoare__Cond_16__ReuseCond_11( bool _emrb_55313 { ,NN } , double[1000000,2] _emlr_55182_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5240_BlockHoare__Cond_16__ReuseCond_11 ::  ---
 */
{ 
  double[1000000,2] _emrb_55316 { , NN } ; 
  double[1000000,2] _dup_55315__emlr_55183_P { , NN } ; 
  double[1000000,2] _dup_55314__emlr_55183_P { , NN } ; 

  if (_emrb_55313) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55313, 1); 
    _dup_55314__emlr_55183_P = _fill_( _noop_( P), _emlr_55182_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55313, 1); 
    _dup_55315__emlr_55183_P = _fill_( _copy_( P), _emlr_55182_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55316 = ( _emrb_55313 ? _dup_55314__emlr_55183_P : _dup_55315__emlr_55183_P ); 
  return( _emrb_55316); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5239_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5239_BlockHoare__Loop_15( int _iveras_51578 { ,NN } , int _iveras_51577 { ,NN } , int _iveras_51576 { ,NN } , int _iveras_51575 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5239_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55794 { , NN } ; 
  double _emdr_55793 { , NN } ; 
  double _emdr_55792 { , NN } ; 
  int _emal_54345__ivesli_48536 { , NN } ; 
  int _emal_54344__pinl_3507__flat_68 { , NN } ; 
  int _emal_54343__pinl_3510__flat_41 { , NN } ; 
  int _emal_54342__ivesli_48533 { , NN } ; 
  int _emal_54341__pinl_3522__flat_68 { , NN } ; 
  int _emal_54340__pinl_3525__flat_40 { , NN } ; 
  int _emal_54337__ivesli_48532 { , NN } ; 
  double _emal_54336__pinl_3743__flat_149__SSA4_1 { , NN } ; 
  int _emal_54334__ivesli_48528 { , NN } ; 
  double _emal_54333__pinl_3730__flat_149__SSA4_1 { , NN } ; 
  double _emal_54330__pinl_3743__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54328__pinl_3730__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54326__uprf_9766 { , NN } ; 
  int _emal_54325__pinl_9216_z { , NN } ; 
  double _emal_54321_val { , NN } ; 
  double _emal_54320_val { , NN } ; 
  double[1000000,2] _emal_54319__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_54318__pinl_3675__flat_149__SSA4_1 { , NN } ; 
  double _emal_54317__pinl_3662__flat_149__SSA4_1 { , NN } ; 
  double _emal_54315__pinl_3675__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54314__pinl_3662__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54312__uprf_9763 { , NN } ; 
  int _emal_54311__pinl_9236_z { , NN } ; 
  double _emal_54307_val { , NN } ; 
  double _emal_54306_val { , NN } ; 
  double _emal_54304__pinl_3607__flat_149__SSA4_1 { , NN } ; 
  double _emal_54303__pinl_3594__flat_149__SSA4_1 { , NN } ; 
  double _emal_54301__pinl_3607__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54300__pinl_3594__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54295_val { , NN } ; 
  double _emal_54294_val { , NN } ; 
  int _emal_54292__pinl_3746__flat_122 { , NN } ; 
  int _emal_54291__ctz_9857 { , NN } ; 
  bool _emal_54290__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48536 { , NN } ; 
  int _ivesli_48533 { , NN } ; 
  int _ivesli_48532 { , NN } ; 
  int _ivesli_48530 { , NN } ; 
  int _ivesli_48529 { , NN } ; 
  int _ivesli_48528 { , NN } ; 
  int _ivesli_48526 { , NN } ; 
  int _ivesli_48525 { , NN } ; 
  int _ivesli_48521 { , NN } ; 
  int _wlidx_47909__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47908__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47907__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_12696 { , NN } ; 
  int[2] _wlsb_12668 { , NN } ; 
  int[2] _wlsb_12640 { , NN } ; 
  int _eat_12444 { , NN } ; 
  int _eat_12443 { , NN } ; 
  int _eat_12442 { , NN } ; 
  int _ctz_9857 { , NN } ; 
  double _pinl_3580__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA5_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _uprf_9766 { , NN } ; 
  int _uprf_9763 { , NN } ; 
  double _pinl_3594__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA4_1 { , NN } ; 
  int _pinl_9216_z { , NN } ; 
  int _pinl_9236_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_54345__ivesli_48536 = _alloc_( 1, 0, [:int]); 
  _ivesli_48536 = _fill_( _add_SxS_( startr, j), _emal_54345__ivesli_48536); 
  _emal_54344__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48536, offsetsr), _emal_54344__pinl_3507__flat_68); 
  _free_( _ivesli_48536); 
  _emal_54343__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_54343__pinl_3510__flat_41); 
  _emal_54342__ivesli_48533 = _alloc_( 1, 0, [:int]); 
  _ivesli_48533 = _fill_( _add_SxS_( startl, j), _emal_54342__ivesli_48533); 
  _emal_54341__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48533, offsetsl), _emal_54341__pinl_3522__flat_68); 
  _free_( _ivesli_48533); 
  _emal_54340__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_54340__pinl_3525__flat_40); 
  _ivesli_48529 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48530 = _fill_( _neg_S_( _ivesli_48529), _ivesli_48529); 
  _emal_54337__ivesli_48532 = _alloc_( 1, 0, [:int]); 
  _ivesli_48532 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48530, _iveras_51575), _emal_54337__ivesli_48532); 
  _emal_54336__pinl_3743__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48532, P), _emal_54336__pinl_3743__flat_149__SSA4_1); 
  _ivesli_48526 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_54334__ivesli_48528 = _alloc_( 1, 0, [:int]); 
  _ivesli_48528 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48526, _iveras_51576), _emal_54334__ivesli_48528); 
  _emal_54333__pinl_3730__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48528, P), _emal_54333__pinl_3730__flat_149__SSA4_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA4_1, _pinl_3743__flat_149__SSA4_1), _pinl_3730__flat_149__SSA4_1); 
  _free_( _pinl_3743__flat_149__SSA4_1); 
  _ivesli_48525 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48530, _iveras_51577), _ivesli_48530); 
  _emal_54330__pinl_3743__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48525, P), _emal_54330__pinl_3743__flat_149__SSA4_1__SSA5_1); 
  _ivesli_48521 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48526, _iveras_51578), _ivesli_48526); 
  _emal_54328__pinl_3730__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48521, P), _emal_54328__pinl_3730__flat_149__SSA4_1__SSA5_1); 
  _pinl_3716__flat_1457__SSA5_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA4_1__SSA5_1, _pinl_3743__flat_149__SSA4_1__SSA5_1), _pinl_3730__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3743__flat_149__SSA4_1__SSA5_1); 
  _emal_54326__uprf_9766 = _alloc_( 1, 0, [:int]); 
  _uprf_9766 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_54326__uprf_9766); 
  _emal_54325__pinl_9216_z = _alloc_( 1, 0, [:int]); 
  _pinl_9216_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_9766), _emal_54325__pinl_9216_z); 
  _emal_54319__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12442 = _alloc_( 1, 0, [:int]); 
  _wlidx_47907__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_12696=[_pinl_3681__eat_766, _eat_12442] (IDXS:_wlidx_47907__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54320_val = _wl_assign_( _pinl_3716__flat_1457, _emal_54319__pinl_3535_P__SSA0_1, _wlsb_12696, _wlidx_47907__pinl_3535_P__SSA0_1); 
        } : _emal_54320_val ; ,
      op_1 =
        { 
          _emal_54321_val = _wl_assign_( _pinl_3716__flat_1457__SSA5_2, _emal_54319__pinl_3535_P__SSA0_1, _wlsb_12696, _wlidx_47907__pinl_3535_P__SSA0_1); 
        } : _emal_54321_val ; ,
      op_2 =
        { 
          _emdr_55792 = _noop_( _wlsb_12696); 
        } : _emdr_55792 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_9766, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_9766), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_9766, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_9766), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9216_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9216_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_54319__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47907__pinl_3535_P__SSA0_1)); 
  _free_( _eat_12442); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA5_2); 
  _free_( _wlidx_47907__pinl_3535_P__SSA0_1); 
  _emal_54318__pinl_3675__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48532, _pinl_3535_P__SSA0_1), _emal_54318__pinl_3675__flat_149__SSA4_1); 
  _emal_54317__pinl_3662__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48528, _pinl_3535_P__SSA0_1), _emal_54317__pinl_3662__flat_149__SSA4_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA4_1, _pinl_3675__flat_149__SSA4_1), _pinl_3662__flat_149__SSA4_1); 
  _free_( _pinl_3675__flat_149__SSA4_1); 
  _emal_54315__pinl_3675__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48525, _pinl_3535_P__SSA0_1), _emal_54315__pinl_3675__flat_149__SSA4_1__SSA5_1); 
  _emal_54314__pinl_3662__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48521, _pinl_3535_P__SSA0_1), _emal_54314__pinl_3662__flat_149__SSA4_1__SSA5_1); 
  _pinl_3648__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA4_1__SSA5_1, _pinl_3675__flat_149__SSA4_1__SSA5_1), _pinl_3662__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3675__flat_149__SSA4_1__SSA5_1); 
  _emal_54312__uprf_9763 = _alloc_( 1, 0, [:int]); 
  _uprf_9763 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_54312__uprf_9763); 
  _emal_54311__pinl_9236_z = _alloc_( 1, 0, [:int]); 
  _pinl_9236_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_9763), _emal_54311__pinl_9236_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12443 = _alloc_( 1, 0, [:int]); 
  _wlidx_47908__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_12668=[_pinl_3613__eat_766, _eat_12443] (IDXS:_wlidx_47908__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54306_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_12668, _wlidx_47908__pinl_3537_P__SSA0_3); 
        } : _emal_54306_val ; ,
      op_1 =
        { 
          _emal_54307_val = _wl_assign_( _pinl_3648__flat_1465__SSA5_2, _pinl_3535_P__SSA0_1, _wlsb_12668, _wlidx_47908__pinl_3537_P__SSA0_3); 
        } : _emal_54307_val ; ,
      op_2 =
        { 
          _emdr_55793 = _noop_( _wlsb_12668); 
        } : _emdr_55793 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_9763, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_9763), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_9763, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_9763), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9236_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9236_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47908__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_9236_z); 
  _free_( _uprf_9763); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_12443); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA5_2); 
  _free_( _wlidx_47908__pinl_3537_P__SSA0_3); 
  _emal_54304__pinl_3607__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48532, _pinl_3537_P__SSA0_3), _emal_54304__pinl_3607__flat_149__SSA4_1); 
  _free_( _ivesli_48532); 
  _emal_54303__pinl_3594__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48528, _pinl_3537_P__SSA0_3), _emal_54303__pinl_3594__flat_149__SSA4_1); 
  _free_( _ivesli_48528); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA4_1, _pinl_3607__flat_149__SSA4_1), _pinl_3594__flat_149__SSA4_1); 
  _free_( _pinl_3607__flat_149__SSA4_1); 
  _emal_54301__pinl_3607__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48525, _pinl_3537_P__SSA0_3), _emal_54301__pinl_3607__flat_149__SSA4_1__SSA5_1); 
  _free_( _ivesli_48525); 
  _emal_54300__pinl_3594__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48521, _pinl_3537_P__SSA0_3), _emal_54300__pinl_3594__flat_149__SSA4_1__SSA5_1); 
  _free_( _ivesli_48521); 
  _pinl_3580__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA4_1__SSA5_1, _pinl_3607__flat_149__SSA4_1__SSA5_1), _pinl_3594__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3607__flat_149__SSA4_1__SSA5_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12444 = _alloc_( 1, 0, [:int]); 
  _wlidx_47909__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_12640=[_pinl_3545__eat_766, _eat_12444] (IDXS:_wlidx_47909__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54294_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_12640, _wlidx_47909__pinl_3539_P__SSA0_5); 
        } : _emal_54294_val ; ,
      op_1 =
        { 
          _emal_54295_val = _wl_assign_( _pinl_3580__flat_1465__SSA5_2, _pinl_3537_P__SSA0_3, _wlsb_12640, _wlidx_47909__pinl_3539_P__SSA0_5); 
        } : _emal_54295_val ; ,
      op_2 =
        { 
          _emdr_55794 = _noop_( _wlsb_12640); 
        } : _emdr_55794 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_9766, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_9766), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_9766, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_9766), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9216_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9216_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47909__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_9216_z); 
  _free_( _uprf_9766); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_12444); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA5_2); 
  _free_( _wlidx_47909__pinl_3539_P__SSA0_5); 
  _emal_54292__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_54292__pinl_3746__flat_122); 
  _emal_54291__ctz_9857 = _alloc_( 1, 0, [:int]); 
  _ctz_9857 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_54291__ctz_9857); 
  _emal_54290__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_9857, 0), _emal_54290__pinl_3747__flat_196); 
  _free_( _ctz_9857); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5239_BlockHoare__Loop_15( _iveras_51578, _iveras_51577, _iveras_51576, _iveras_51575, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51575, 1); 
    _dec_rc_( _iveras_51576, 1); 
    _dec_rc_( _iveras_51577, 1); 
    _dec_rc_( _iveras_51578, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5238_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5238_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5238_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5237_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5237_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5237_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55311_val { , NN } ; 
  bool _emrb_55310_mem { , NN } ; 
  int{0} _emlr_55189_startr__SSA0_1 { , NN } ; 
  int _emlr_55188_startr__SSA0_1 { , NN } ; 
  int _emlr_55187_numr { , NN } ; 
  int _emlr_55186_numr { , NN } ; 
  int[64] _emlr_55185_offsetsr { , NN } ; 
  int[64] _emlr_55184_offsetsr { , NN } ; 
  int _emal_54353_startr__SSA0_1 { , NN } ; 
  int _emal_54352__ivesplit_27159 { , NN } ; 
  double _emal_54351__pinl_9512__ls_9344 { , NN } ; 
  double _emal_54350__pinl_9513__ls_9345 { , NN } ; 
  double _emal_54349__pinl_9508__ls_9334 { , NN } ; 
  double _emal_54348__pinl_9509__ls_9335 { , NN } ; 
  int _emal_54347__dlirmov_51687__iveras_51551 { , NN } ; 
  int _emal_54346__dlirmov_51688__iveras_51552 { , NN } ; 
  int _dlirmov_51688__iveras_51552 { , NN } ; 
  int _dlirmov_51687__iveras_51551 { , NN } ; 
  int{1} _ivesplit_27159 { , NN } ; 
  double _pinl_9513__ls_9345 { , NN } ; 
  double _pinl_9512__ls_9344 { , NN } ; 
  double _pinl_9509__ls_9335 { , NN } ; 
  double _pinl_9508__ls_9334 { , NN } ; 
  int _pinl_9505_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_9504_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_9503_max__SSA0_1 { , NN } ; 
  double[2] _pinl_9502_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_54353_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_54353_startr__SSA0_1); 
    _emal_54352__ivesplit_27159 = _alloc_( 1, 0, [:int]); 
    _ivesplit_27159 = _fill_( 1, _emal_54352__ivesplit_27159); 
    _emal_54351__pinl_9512__ls_9344 = _alloc_( 1, 0, [:int]); 
    _pinl_9512__ls_9344 = _fill_( _idx_sel_( _ivesplit_27159, q), _emal_54351__pinl_9512__ls_9344); 
    _emal_54350__pinl_9513__ls_9345 = _alloc_( 1, 0, [:int]); 
    _pinl_9513__ls_9345 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_54350__pinl_9513__ls_9345); 
    _emal_54349__pinl_9508__ls_9334 = _alloc_( 1, 0, [:int]); 
    _pinl_9508__ls_9334 = _fill_( _idx_sel_( _ivesplit_27159, p), _emal_54349__pinl_9508__ls_9334); 
    _free_( _ivesplit_27159); 
    _emal_54348__pinl_9509__ls_9335 = _alloc_( 1, 0, [:int]); 
    _pinl_9509__ls_9335 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_54348__pinl_9509__ls_9335); 
    _emal_54347__dlirmov_51687__iveras_51551 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51687__iveras_51551 = _fill_( 0, _emal_54347__dlirmov_51687__iveras_51551); 
    _emal_54346__dlirmov_51688__iveras_51552 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51688__iveras_51552 = _fill_( 1, _emal_54346__dlirmov_51688__iveras_51552); 
    _emlr_55188_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55189_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55188_startr__SSA0_1); 
    _emlr_55186_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55187_numr = _fill_( _copy_( numr), _emlr_55186_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55184_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55310_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55311_val = _fill_( _isreused_( _emlr_55184_offsetsr, offsetsr), _emrb_55310_mem); 
    _emlr_55185_offsetsr = _MAIN::_dup_5237_BlockHoare__Cond_20__ReuseCond_10( _emrb_55311_val, _emlr_55184_offsetsr, offsetsr) ; 
    _pinl_9502_argmax__SSA0_1, _pinl_9503_max__SSA0_1, _pinl_9504_offsetsr__SSA0_1, _pinl_9505_numr__SSA0_1 = _MAIN::_dup_9515_BlockHoare__Loop_18( _dlirmov_51688__iveras_51552, _dlirmov_51687__iveras_51551, argmax, max, _emlr_55185_offsetsr, _emlr_55187_numr, _emlr_55189_startr__SSA0_1, _pinl_9513__ls_9345, _pinl_9512__ls_9344, _pinl_9509__ls_9335, _pinl_9508__ls_9334, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_9505_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_9504_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_9503_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_9502_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5237_BlockHoare__Cond_20__ReuseCond_10(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5237_BlockHoare__Cond_20__ReuseCond_10( bool _emrb_55306 { ,NN } , int[64] _emlr_55184_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5237_BlockHoare__Cond_20__ReuseCond_10 ::  ---
 */
{ 
  int[64] _emrb_55309 { , NN } ; 
  int[64] _dup_55308__emlr_55185_offsetsr { , NN } ; 
  int[64] _dup_55307__emlr_55185_offsetsr { , NN } ; 

  if (_emrb_55306) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55306, 1); 
    _dup_55307__emlr_55185_offsetsr = _fill_( _noop_( offsetsr), _emlr_55184_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55306, 1); 
    _dup_55308__emlr_55185_offsetsr = _fill_( _copy_( offsetsr), _emlr_55184_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55309 = ( _emrb_55306 ? _dup_55307__emlr_55185_offsetsr : _dup_55308__emlr_55185_offsetsr ); 
  return( _emrb_55309); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5233_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5233_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5233_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55304_val { , NN } ; 
  bool _emrb_55303_mem { , NN } ; 
  int{0} _emlr_55195_startl__SSA0_1 { , NN } ; 
  int _emlr_55194_startl__SSA0_1 { , NN } ; 
  int _emlr_55193_numl { , NN } ; 
  int _emlr_55192_numl { , NN } ; 
  int[64] _emlr_55191_offsetsl { , NN } ; 
  int[64] _emlr_55190_offsetsl { , NN } ; 
  int _emal_54361_startl__SSA0_1 { , NN } ; 
  int _emal_54360__ivesplit_27167 { , NN } ; 
  double _emal_54359__pinl_9498__ls_9364 { , NN } ; 
  double _emal_54358__pinl_9499__ls_9365 { , NN } ; 
  double _emal_54357__pinl_9494__ls_9354 { , NN } ; 
  double _emal_54356__pinl_9495__ls_9355 { , NN } ; 
  int _emal_54355__dlirmov_51685__iveras_51553 { , NN } ; 
  int _emal_54354__dlirmov_51686__iveras_51554 { , NN } ; 
  int _dlirmov_51686__iveras_51554 { , NN } ; 
  int _dlirmov_51685__iveras_51553 { , NN } ; 
  int{1} _ivesplit_27167 { , NN } ; 
  double _pinl_9499__ls_9365 { , NN } ; 
  double _pinl_9498__ls_9364 { , NN } ; 
  double _pinl_9495__ls_9355 { , NN } ; 
  double _pinl_9494__ls_9354 { , NN } ; 
  int _pinl_9491_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_9490_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_9489_max__SSA0_1 { , NN } ; 
  double[2] _pinl_9488_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_54361_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_54361_startl__SSA0_1); 
    _emal_54360__ivesplit_27167 = _alloc_( 1, 0, [:int]); 
    _ivesplit_27167 = _fill_( 1, _emal_54360__ivesplit_27167); 
    _emal_54359__pinl_9498__ls_9364 = _alloc_( 1, 0, [:int]); 
    _pinl_9498__ls_9364 = _fill_( _idx_sel_( _ivesplit_27167, q), _emal_54359__pinl_9498__ls_9364); 
    _emal_54358__pinl_9499__ls_9365 = _alloc_( 1, 0, [:int]); 
    _pinl_9499__ls_9365 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_54358__pinl_9499__ls_9365); 
    _emal_54357__pinl_9494__ls_9354 = _alloc_( 1, 0, [:int]); 
    _pinl_9494__ls_9354 = _fill_( _idx_sel_( _ivesplit_27167, p), _emal_54357__pinl_9494__ls_9354); 
    _free_( _ivesplit_27167); 
    _emal_54356__pinl_9495__ls_9355 = _alloc_( 1, 0, [:int]); 
    _pinl_9495__ls_9355 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_54356__pinl_9495__ls_9355); 
    _emal_54355__dlirmov_51685__iveras_51553 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51685__iveras_51553 = _fill_( 0, _emal_54355__dlirmov_51685__iveras_51553); 
    _emal_54354__dlirmov_51686__iveras_51554 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51686__iveras_51554 = _fill_( 1, _emal_54354__dlirmov_51686__iveras_51554); 
    _emlr_55194_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55195_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55194_startl__SSA0_1); 
    _emlr_55192_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55193_numl = _fill_( _copy_( numl), _emlr_55192_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55190_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55303_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55304_val = _fill_( _isreused_( _emlr_55190_offsetsl, offsetsl), _emrb_55303_mem); 
    _emlr_55191_offsetsl = _MAIN::_dup_5233_BlockHoare__Cond_23__ReuseCond_9( _emrb_55304_val, _emlr_55190_offsetsl, offsetsl) ; 
    _pinl_9488_argmax__SSA0_1, _pinl_9489_max__SSA0_1, _pinl_9490_offsetsl__SSA0_1, _pinl_9491_numl__SSA0_1 = _MAIN::_dup_9501_BlockHoare__Loop_21( _dlirmov_51686__iveras_51554, _dlirmov_51685__iveras_51553, argmax, max, _emlr_55191_offsetsl, _emlr_55193_numl, _emlr_55195_startl__SSA0_1, _pinl_9499__ls_9365, _pinl_9498__ls_9364, _pinl_9495__ls_9355, _pinl_9494__ls_9354, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_9491_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_9490_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_9489_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_9488_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5233_BlockHoare__Cond_23__ReuseCond_9(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5233_BlockHoare__Cond_23__ReuseCond_9( bool _emrb_55299 { ,NN } , int[64] _emlr_55190_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5233_BlockHoare__Cond_23__ReuseCond_9 ::  ---
 */
{ 
  int[64] _emrb_55302 { , NN } ; 
  int[64] _dup_55301__emlr_55191_offsetsl { , NN } ; 
  int[64] _dup_55300__emlr_55191_offsetsl { , NN } ; 

  if (_emrb_55299) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55299, 1); 
    _dup_55300__emlr_55191_offsetsl = _fill_( _noop_( offsetsl), _emlr_55190_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55299, 1); 
    _dup_55301__emlr_55191_offsetsl = _fill_( _copy_( offsetsl), _emlr_55190_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55302 = ( _emrb_55299 ? _dup_55300__emlr_55191_offsetsl : _dup_55301__emlr_55191_offsetsl ); 
  return( _emrb_55302); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5159_BlockHoare__Cond_12(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5159_BlockHoare__Cond_12( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_110 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5159_BlockHoare__Cond_12 ::  ---
 */
{ 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_110) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _flat_110); 
    argmax__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5158_BlockHoare__Loop_11( argmax, max, q, p, r, l, P) ; 
    _inc_rc_( l__SSA0_1, 1); 
  }
  else
  { 
    _inc_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( max, 1); 
    _free_( _flat_110); 
  }
  P__SSA0_2 = ( _flat_110 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_110 ? l__SSA0_1 : l ); 
  argmax__SSA0_2 = ( _flat_110 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5158_BlockHoare__Loop_11(...) [ body ]
 ****************************************************************************/
double[2], int, double[1000000,2] _MAIN::_dup_5158_BlockHoare__Loop_11( double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5158_BlockHoare__Loop_11 ::  ---
 */
{ 
  int _emal_54368__ctz_9865 { , NN } ; 
  bool _emal_54367__pinl_3760__flat_197 { , NN } ; 
  int _emal_54366__ctz_9863 { , NN } ; 
  bool _emal_54365__pinl_4092__flat_197 { , NN } ; 
  int _emal_54364__ctz_9861 { , NN } ; 
  bool _emal_54363__pinl_4425__flat_196 { , NN } ; 
  bool _emal_54362__pinl_4645__flat_197 { , NN } ; 
  int _ctz_9865 { , NN } ; 
  int _ctz_9863 { , NN } ; 
  int _ctz_9861 { , NN } ; 
  bool _pinl_3760__flat_197 { , NN } ; 
  bool _pinl_4092__flat_197 { , NN } ; 
  bool _pinl_4425__flat_196 { , NN } ; 
  bool _pinl_4645__flat_197 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[2] argmax__SSA0_3 { , NN } ; 
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_6 { , NN } ; 

  _emal_54368__ctz_9865 = _alloc_( 1, 0, [:int]); 
  _ctz_9865 = _fill_( _sub_SxS_( l, r), _emal_54368__ctz_9865); 
  _emal_54367__pinl_3760__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3760__flat_197 = _fill_( _le_SxS_( _ctz_9865, 0), _emal_54367__pinl_3760__flat_197); 
  _free_( _ctz_9865); 
  _hce_6 = _MAIN::_dup_5146_BlockHoare__Cond_10( _pinl_3760__flat_197, q, p, l, P) ; 
  argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5150_BlockHoare__Cond_9( argmax, max, _hce_6, q, p, r, l, P) ; 
  _emal_54366__ctz_9863 = _alloc_( 1, 0, [:int]); 
  _ctz_9863 = _fill_( _sub_SxS_( l__SSA0_1, r), _emal_54366__ctz_9863); 
  _emal_54365__pinl_4092__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4092__flat_197 = _fill_( _le_SxS_( _ctz_9863, 0), _emal_54365__pinl_4092__flat_197); 
  _free_( _ctz_9863); 
  argmax__SSA0_2, max__SSA0_2, r__SSA0_1 = _MAIN::_dup_5156_BlockHoare__Cond_6( argmax__SSA0_1, max__SSA0_1, _pinl_4092__flat_197, q, p, r, l__SSA0_1, P) ; 
  _emal_54364__ctz_9861 = _alloc_( 1, 0, [:int]); 
  _ctz_9861 = _fill_( _sub_SxS_( l__SSA0_1, r__SSA0_1), _emal_54364__ctz_9861); 
  _emal_54363__pinl_4425__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_4425__flat_196 = _fill_( _lt_SxS_( _ctz_9861, 0), _emal_54363__pinl_4425__flat_196); 
  P__SSA0_1 = _MAIN::_dup_5157_BlockHoare__Cond_1( _pinl_4425__flat_196, r__SSA0_1, l__SSA0_1, P) ; 
  _emal_54362__pinl_4645__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4645__flat_197 = _fill_( _le_SxS_( _ctz_9861, 0), _emal_54362__pinl_4645__flat_197); 
  _free_( _ctz_9861); 
  if (_pinl_4645__flat_197) 
  { 
    _free_( _pinl_4645__flat_197); 
    argmax__SSA0_3, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5158_BlockHoare__Loop_11( argmax__SSA0_2, max__SSA0_2, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( max__SSA0_2, 1); 
    _dec_rc_( r__SSA0_1, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _free_( _pinl_4645__flat_197); 
  }
  P__SSA0_3 = ( _pinl_4645__flat_197 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_4645__flat_197 ? l__SSA0_2 : l__SSA0_1 ); 
  argmax__SSA0_4 = ( _pinl_4645__flat_197 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5157_BlockHoare__Cond_1(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5157_BlockHoare__Cond_1( bool _flat_134 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5157_BlockHoare__Cond_1 ::  ---
 */
{ 
  double _emdr_55797 { , NN } ; 
  double _emdr_55796 { , NN } ; 
  bool _emrb_55297_val { , NN } ; 
  bool _emrb_55296_mem { , NN } ; 
  int _emal_54416__iveras_51579 { , NN } ; 
  int _emal_54415__ivesli_48549 { , NN } ; 
  double _emal_54414__pinl_4643__flat_149__SSA4_1 { , NN } ; 
  int _emal_54413__iveras_51580 { , NN } ; 
  int _emal_54412__ivesli_48547 { , NN } ; 
  double _emal_54411__pinl_4630__flat_149__SSA4_1 { , NN } ; 
  double _emal_54410__pinl_4616__flat_1457 { , NN } ; 
  int _emal_54409__iveras_51581 { , NN } ; 
  int _emal_54408__ivesli_48545 { , NN } ; 
  double _emal_54407__pinl_4643__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54406__iveras_51582 { , NN } ; 
  int _emal_54405__ivesli_48543 { , NN } ; 
  double _emal_54404__pinl_4630__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54403__pinl_4616__flat_1457__SSA5_2 { , NN } ; 
  int _emal_54402__uprf_9772 { , NN } ; 
  int _emal_54401__pinl_9136_z { , NN } ; 
  double[1000000,2] _emal_54395__pinl_4435_P__SSA0_1 { , NN } ; 
  double _emal_54394__pinl_4575__flat_149__SSA4_1 { , NN } ; 
  double _emal_54393__pinl_4562__flat_149__SSA4_1 { , NN } ; 
  double _emal_54392__pinl_4548__flat_1465 { , NN } ; 
  double _emal_54391__pinl_4575__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54390__pinl_4562__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54389__pinl_4548__flat_1465__SSA5_2 { , NN } ; 
  int _emal_54388__uprf_9769 { , NN } ; 
  int _emal_54387__pinl_9156_z { , NN } ; 
  double _emal_54383_val { , NN } ; 
  double _emal_54382_val { , NN } ; 
  double[1000000,2] _emal_54381__pinl_4437_P__SSA0_3 { , NN } ; 
  double _emal_54380__pinl_4507__flat_149__SSA4_1 { , NN } ; 
  double _emal_54379__pinl_4494__flat_149__SSA4_1 { , NN } ; 
  double _emal_54378__pinl_4480__flat_1465 { , NN } ; 
  double _emal_54377__pinl_4507__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54376__pinl_4494__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54375__pinl_4480__flat_1465__SSA5_2 { , NN } ; 
  double _emal_54371_val { , NN } ; 
  double _emal_54370_val { , NN } ; 
  double[1000000,2] _emal_54369__pinl_4439_P__SSA0_5 { , NN } ; 
  int _iveras_51582 { , NN } ; 
  int _iveras_51581 { , NN } ; 
  int _iveras_51580 { , NN } ; 
  int _iveras_51579 { , NN } ; 
  int _ivesli_48549 { , NN } ; 
  int _ivesli_48547 { , NN } ; 
  int _ivesli_48545 { , NN } ; 
  int _ivesli_48543 { , NN } ; 
  int _wlidx_47912__pinl_4439_P__SSA0_5 { , NN } ; 
  int _wlidx_47911__pinl_4437_P__SSA0_3 { , NN } ; 
  int _wlidx_47910__pinl_4435_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_12752 { , NN } ; 
  int[2] _wlsb_12724 { , NN } ; 
  int _eat_12440 { , NN } ; 
  int _eat_12439 { , NN } ; 
  double _pinl_4480__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_4494__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4548__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_4562__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4616__flat_1457__SSA5_2 { , NN } ; 
  double _pinl_4630__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _uprf_9772 { , NN } ; 
  int _uprf_9769 { , NN } ; 
  double _pinl_4494__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4507__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4562__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4575__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4630__flat_149__SSA4_1 { , NN } ; 
  double _pinl_4643__flat_149__SSA4_1 { , NN } ; 
  int _pinl_9136_z { , NN } ; 
  int _pinl_9156_z { , NN } ; 
  double _pinl_4616__flat_1457 { , NN } ; 
  double _pinl_4548__flat_1465 { , NN } ; 
  int _pinl_4513__eat_766 { , NN } ; 
  double _pinl_4480__flat_1465 { , NN } ; 
  int _pinl_4445__eat_766 { , NN } ; 
  double[1000000,2] _pinl_4439_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4437_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_4435_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_134) 
  { 
    _free_( _flat_134); 
    _emal_54416__iveras_51579 = _alloc_( 1, 0, [:int]); 
    _iveras_51579 = _fill_( 0, _emal_54416__iveras_51579); 
    _ivesli_48549 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51579), _iveras_51579); 
    _emal_54414__pinl_4643__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48549, P), _emal_54414__pinl_4643__flat_149__SSA4_1); 
    _emal_54413__iveras_51580 = _alloc_( 1, 0, [:int]); 
    _iveras_51580 = _fill_( 0, _emal_54413__iveras_51580); 
    _ivesli_48547 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51580), _iveras_51580); 
    _emal_54411__pinl_4630__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48547, P), _emal_54411__pinl_4630__flat_149__SSA4_1); 
    _pinl_4616__flat_1457 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA4_1, _pinl_4643__flat_149__SSA4_1), _pinl_4630__flat_149__SSA4_1); 
    _free_( _pinl_4643__flat_149__SSA4_1); 
    _emal_54409__iveras_51581 = _alloc_( 1, 0, [:int]); 
    _iveras_51581 = _fill_( 1, _emal_54409__iveras_51581); 
    _ivesli_48545 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51581), _iveras_51581); 
    _emal_54407__pinl_4643__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4643__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48545, P), _emal_54407__pinl_4643__flat_149__SSA4_1__SSA5_1); 
    _emal_54406__iveras_51582 = _alloc_( 1, 0, [:int]); 
    _iveras_51582 = _fill_( 1, _emal_54406__iveras_51582); 
    _ivesli_48543 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51582), _iveras_51582); 
    _emal_54404__pinl_4630__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4630__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48543, P), _emal_54404__pinl_4630__flat_149__SSA4_1__SSA5_1); 
    _pinl_4616__flat_1457__SSA5_2 = _fill_( _add_SxS_( _pinl_4630__flat_149__SSA4_1__SSA5_1, _pinl_4643__flat_149__SSA4_1__SSA5_1), _pinl_4630__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4643__flat_149__SSA4_1__SSA5_1); 
    _emal_54402__uprf_9772 = _alloc_( 1, 0, [:int]); 
    _uprf_9772 = _fill_( _add_SxS_( 1, l), _emal_54402__uprf_9772); 
    _emal_54401__pinl_9136_z = _alloc_( 1, 0, [:int]); 
    _pinl_9136_z = _fill_( _max_SxS_( _uprf_9772, l), _emal_54401__pinl_9136_z); 
    _emal_54395__pinl_4435_P__SSA0_1 = _alloc_or_reuse_( 1, 2, [ 1000000, 2 ], P); 
    _wlidx_47910__pinl_4435_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _emrb_55296_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55297_val = _fill_( _isreused_( _emal_54395__pinl_4435_P__SSA0_1, P), _emrb_55296_mem); 
    _pinl_4435_P__SSA0_1 = _MAIN::_dup_5157_BlockHoare__Cond_1__ReuseCond_8( _emrb_55297_val, _pinl_4616__flat_1457, _pinl_9136_z, _uprf_9772, _pinl_4616__flat_1457__SSA5_2, _wlidx_47910__pinl_4435_P__SSA0_1, _emal_54395__pinl_4435_P__SSA0_1, P, l) ; 
    _emal_54394__pinl_4575__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48549, _pinl_4435_P__SSA0_1), _emal_54394__pinl_4575__flat_149__SSA4_1); 
    _emal_54393__pinl_4562__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48547, _pinl_4435_P__SSA0_1), _emal_54393__pinl_4562__flat_149__SSA4_1); 
    _pinl_4548__flat_1465 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA4_1, _pinl_4575__flat_149__SSA4_1), _pinl_4562__flat_149__SSA4_1); 
    _free_( _pinl_4575__flat_149__SSA4_1); 
    _emal_54391__pinl_4575__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4575__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48545, _pinl_4435_P__SSA0_1), _emal_54391__pinl_4575__flat_149__SSA4_1__SSA5_1); 
    _emal_54390__pinl_4562__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4562__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48543, _pinl_4435_P__SSA0_1), _emal_54390__pinl_4562__flat_149__SSA4_1__SSA5_1); 
    _pinl_4548__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_4562__flat_149__SSA4_1__SSA5_1, _pinl_4575__flat_149__SSA4_1__SSA5_1), _pinl_4562__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4575__flat_149__SSA4_1__SSA5_1); 
    _emal_54388__uprf_9769 = _alloc_( 1, 0, [:int]); 
    _uprf_9769 = _fill_( _add_SxS_( 1, r), _emal_54388__uprf_9769); 
    _emal_54387__pinl_9156_z = _alloc_( 1, 0, [:int]); 
    _pinl_9156_z = _fill_( _max_SxS_( _uprf_9769, r), _emal_54387__pinl_9156_z); 
    _pinl_4513__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_12439 = _alloc_( 1, 0, [:int]); 
    _wlidx_47911__pinl_4437_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
    _pinl_4437_P__SSA0_3 = with2 (_wlsb_12752=[_pinl_4513__eat_766, _eat_12439] (IDXS:_wlidx_47911__pinl_4437_P__SSA0_3))
        /********** operators: **********/
        op_0 =
          { 
            _emal_54382_val = _wl_assign_( _pinl_4548__flat_1465, _pinl_4435_P__SSA0_1, _wlsb_12752, _wlidx_47911__pinl_4437_P__SSA0_3); 
          } : _emal_54382_val ; ,
        op_1 =
          { 
            _emal_54383_val = _wl_assign_( _pinl_4548__flat_1465__SSA5_2, _pinl_4435_P__SSA0_1, _wlsb_12752, _wlidx_47911__pinl_4437_P__SSA0_3); 
          } : _emal_54383_val ; ,
        op_2 =
          { 
            _emdr_55796 = _noop_( _wlsb_12752); 
          } : _emdr_55796 ; 
        /********** (var.) segment 0: **********
         * index domain: [ r, 0 ] -> [ _uprf_9769, 1 ]
         */
        (r => _uprf_9769), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ r, 1 ] -> [ _uprf_9769, 2 ]
         */
        (r => _uprf_9769), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ r, 2 ]
         */
        (0 => r), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9156_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9156_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4435_P__SSA0_1 , _pinl_4435_P__SSA0_1 ,IDX(_wlidx_47911__pinl_4437_P__SSA0_3)); 
    _free_( _pinl_9156_z); 
    _free_( _uprf_9769); 
    _free_( _eat_12439); 
    _free_( _pinl_4513__eat_766); 
    _free_( _pinl_4548__flat_1465); 
    _free_( _pinl_4548__flat_1465__SSA5_2); 
    _free_( _wlidx_47911__pinl_4437_P__SSA0_3); 
    _emal_54380__pinl_4507__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48549, _pinl_4437_P__SSA0_3), _emal_54380__pinl_4507__flat_149__SSA4_1); 
    _free_( _ivesli_48549); 
    _emal_54379__pinl_4494__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48547, _pinl_4437_P__SSA0_3), _emal_54379__pinl_4494__flat_149__SSA4_1); 
    _free_( _ivesli_48547); 
    _pinl_4480__flat_1465 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA4_1, _pinl_4507__flat_149__SSA4_1), _pinl_4494__flat_149__SSA4_1); 
    _free_( _pinl_4507__flat_149__SSA4_1); 
    _emal_54377__pinl_4507__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4507__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48545, _pinl_4437_P__SSA0_3), _emal_54377__pinl_4507__flat_149__SSA4_1__SSA5_1); 
    _free_( _ivesli_48545); 
    _emal_54376__pinl_4494__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4494__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48543, _pinl_4437_P__SSA0_3), _emal_54376__pinl_4494__flat_149__SSA4_1__SSA5_1); 
    _free_( _ivesli_48543); 
    _pinl_4480__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_4494__flat_149__SSA4_1__SSA5_1, _pinl_4507__flat_149__SSA4_1__SSA5_1), _pinl_4494__flat_149__SSA4_1__SSA5_1); 
    _free_( _pinl_4507__flat_149__SSA4_1__SSA5_1); 
    _pinl_4445__eat_766 = _alloc_( 1, 0, [:int]); 
    _eat_12440 = _alloc_( 1, 0, [:int]); 
    _wlidx_47912__pinl_4439_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
    _pinl_4439_P__SSA0_5 = with2 (_wlsb_12724=[_pinl_4445__eat_766, _eat_12440] (IDXS:_wlidx_47912__pinl_4439_P__SSA0_5))
        /********** operators: **********/
        op_0 =
          { 
            _emal_54370_val = _wl_assign_( _pinl_4480__flat_1465, _pinl_4437_P__SSA0_3, _wlsb_12724, _wlidx_47912__pinl_4439_P__SSA0_5); 
          } : _emal_54370_val ; ,
        op_1 =
          { 
            _emal_54371_val = _wl_assign_( _pinl_4480__flat_1465__SSA5_2, _pinl_4437_P__SSA0_3, _wlsb_12724, _wlidx_47912__pinl_4439_P__SSA0_5); 
          } : _emal_54371_val ; ,
        op_2 =
          { 
            _emdr_55797 = _noop_( _wlsb_12724); 
          } : _emdr_55797 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9772, 1 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9772, 2 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9136_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9136_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( _pinl_4437_P__SSA0_3 , _pinl_4437_P__SSA0_3 ,IDX(_wlidx_47912__pinl_4439_P__SSA0_5)); 
    _free_( _pinl_9136_z); 
    _free_( _uprf_9772); 
    _free_( _eat_12440); 
    _free_( _pinl_4445__eat_766); 
    _free_( _pinl_4480__flat_1465); 
    _free_( _pinl_4480__flat_1465__SSA5_2); 
    _free_( _wlidx_47912__pinl_4439_P__SSA0_5); 
  }
  else
  { 
    _free_( _flat_134); 
  }
  P__SSA0_3 = ( _flat_134 ? _pinl_4439_P__SSA0_5 : P ); 
  return( P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5157_BlockHoare__Cond_1__ReuseCond_8(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5157_BlockHoare__Cond_1__ReuseCond_8( bool _emrb_55272 { ,NN } , double _pinl_4616__flat_1457 { ,NN } , int _pinl_9136_z { ,NN } , int _uprf_9772 { ,NN } , double _pinl_4616__flat_1457__SSA5_2 { ,NN } , int _wlidx_47910__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] _emal_54395__pinl_4435_P__SSA0_1 { ,NN } , double[1000000,2] P { ,NN } , int l { ,NN } )
/*
 *  _dup_5157_BlockHoare__Cond_1__ReuseCond_8 ::  ---
 */
{ 
  double _emdr_55795 { , NN } ; 
  double[1000000,2] _emrb_55295 { , NN } ; 
  double _dup_55294__emal_54400_val { , NN } ; 
  double _dup_55293__pinl_9147__flat_28 { , NN } ; 
  double _dup_55292__emal_54398__dup_12786__pinl_9147__flat_28 { , NN } ; 
  int _dup_55291__ivesli_48541 { , NN } ; 
  int _dup_55290__emal_54399__ivesli_48541 { , NN } ; 
  double _dup_55289__emal_54397_val { , NN } ; 
  double _dup_55288__emal_54396_val { , NN } ; 
  double[1000000,2] _dup_55287__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55286__eat_12438 { , NN } ; 
  int _dup_55285__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55284__wlsb_12780 { , NN } ; 
  double _dup_55278__emal_54397_val { , NN } ; 
  double _dup_55277__emal_54396_val { , NN } ; 
  double[1000000,2] _dup_55276__pinl_4435_P__SSA0_1 { , NN } ; 
  int _dup_55275__eat_12438 { , NN } ; 
  int _dup_55274__pinl_4581__eat_766 { , NN } ; 
  int[2] _dup_55273__wlsb_12780 { , NN } ; 

  if (_emrb_55272) 
  { 
    _dec_rc_( _emrb_55272, 1); 
    _dup_55274__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55275__eat_12438 = _alloc_( 1, 0, [:int]); 
    _dup_55276__pinl_4435_P__SSA0_1 = with2 (_dup_55273__wlsb_12780=[_dup_55274__pinl_4581__eat_766, _dup_55275__eat_12438] (IDXS:_wlidx_47910__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55277__emal_54396_val = _wl_assign_( _pinl_4616__flat_1457, _emal_54395__pinl_4435_P__SSA0_1, _dup_55273__wlsb_12780, _wlidx_47910__pinl_4435_P__SSA0_1); 
          } : _dup_55277__emal_54396_val ; ,
        op_1 =
          { 
            _dup_55278__emal_54397_val = _wl_assign_( _pinl_4616__flat_1457__SSA5_2, _emal_54395__pinl_4435_P__SSA0_1, _dup_55273__wlsb_12780, _wlidx_47910__pinl_4435_P__SSA0_1); 
          } : _dup_55278__emal_54397_val ; ,
        op_2 =
          { 
            _emdr_55795 = _noop_( _dup_55273__wlsb_12780); 
          } : _emdr_55795 ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9772, 1 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9772, 2 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9136_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9136_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_54395__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47910__pinl_4435_P__SSA0_1)); 
    _dec_rc_( P, 1); 
    _free_( _dup_55275__eat_12438); 
    _free_( _dup_55274__pinl_4581__eat_766); 
    _free_( _wlidx_47910__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA5_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  else
  { 
    _dec_rc_( _emrb_55272, 1); 
    _dup_55285__pinl_4581__eat_766 = _alloc_( 1, 0, [:int]); 
    _dup_55286__eat_12438 = _alloc_( 1, 0, [:int]); 
    _dup_55287__pinl_4435_P__SSA0_1 = with2 (_dup_55284__wlsb_12780=[_dup_55285__pinl_4581__eat_766, _dup_55286__eat_12438] (IDXS:_wlidx_47910__pinl_4435_P__SSA0_1))
        /********** operators: **********/
        op_0 =
          { 
            _dup_55288__emal_54396_val = _wl_assign_( _pinl_4616__flat_1457, _emal_54395__pinl_4435_P__SSA0_1, _dup_55284__wlsb_12780, _wlidx_47910__pinl_4435_P__SSA0_1); 
          } : _dup_55288__emal_54396_val ; ,
        op_1 =
          { 
            _dup_55289__emal_54397_val = _wl_assign_( _pinl_4616__flat_1457__SSA5_2, _emal_54395__pinl_4435_P__SSA0_1, _dup_55284__wlsb_12780, _wlidx_47910__pinl_4435_P__SSA0_1); 
          } : _dup_55289__emal_54397_val ; ,
        op_2 =
          { 
            _dup_55290__emal_54399__ivesli_48541 = _alloc_( 1, 0, [:int]); 
            _dup_55291__ivesli_48541 = _fill_( _idxs2offset_( [ 1000000, 2 ], _dup_55285__pinl_4581__eat_766, _dup_55286__eat_12438), _dup_55290__emal_54399__ivesli_48541); 
            _dup_55292__emal_54398__dup_12786__pinl_9147__flat_28 = _alloc_( 1, 0, [:int]); 
            _dup_55293__pinl_9147__flat_28 = _fill_( _idx_sel_( _dup_55291__ivesli_48541, P), _dup_55292__emal_54398__dup_12786__pinl_9147__flat_28); 
            _free_( _dup_55291__ivesli_48541); 
            _dup_55294__emal_54400_val = _wl_assign_( _dup_55293__pinl_9147__flat_28, _emal_54395__pinl_4435_P__SSA0_1, _dup_55284__wlsb_12780, _wlidx_47910__pinl_4435_P__SSA0_1); 
            _free_( _dup_55293__pinl_9147__flat_28); 
          } : _dup_55294__emal_54400_val ; 
        /********** (var.) segment 0: **********
         * index domain: [ l, 0 ] -> [ _uprf_9772, 1 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (0 -> 1), step0[1] 1
              (0 --> 1): op_0
        /********** (var.) segment 1: **********
         * index domain: [ l, 1 ] -> [ _uprf_9772, 2 ]
         */
        (l => _uprf_9772), step0[0] 1
          (0 --> 1):
            (1 -> 2), step0[1] 1
              (0 --> 1): op_1
        /********** (var.) segment 2: **********
         * index domain: [ 0, 0 ] -> [ l, 2 ]
         */
        (0 => l), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** (var.) segment 3: **********
         * index domain: [ _pinl_9136_z, 0 ] -> [ 1000000, 2 ]
         */
        (_pinl_9136_z => 1000000), step0[0] 1
          (0 --> 1):
            (0 -> 2), step0[1] 1
              (0 --> 1): op_2
        /********** conexpr: **********/
        modarray( P , _emal_54395__pinl_4435_P__SSA0_1 ,IDX(_wlidx_47910__pinl_4435_P__SSA0_1)); 
    _free_( _dup_55285__pinl_4581__eat_766); 
    _free_( _dup_55286__eat_12438); 
    _dec_rc_( P, 1); 
    _free_( _wlidx_47910__pinl_4435_P__SSA0_1); 
    _free_( _pinl_4616__flat_1457__SSA5_2); 
    _free_( _pinl_4616__flat_1457); 
  }
  _emrb_55295 = ( _emrb_55272 ? _dup_55276__pinl_4435_P__SSA0_1 : _dup_55287__pinl_4435_P__SSA0_1 ); 
  return( _emrb_55295); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5156_BlockHoare__Cond_6(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5156_BlockHoare__Cond_6( double[2] argmax { ,NN } , double max { ,NN } , bool _flat_122 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5156_BlockHoare__Cond_6 ::  ---
 */
{ 
  int _emal_54418__ctz_9867 { , NN } ; 
  bool _emal_54417__pinl_4093__flat_197 { , NN } ; 
  int _ctz_9867 { , NN } ; 
  bool _pinl_4093__flat_197 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  bool _hce_4 { , NN } ; 

  if (_flat_122) 
  { 
    _free_( _flat_122); 
    _emal_54418__ctz_9867 = _alloc_( 1, 0, [:int]); 
    _ctz_9867 = _fill_( _sub_SxS_( l, r), _emal_54418__ctz_9867); 
    _emal_54417__pinl_4093__flat_197 = _alloc_( 1, 0, [:int]); 
    _pinl_4093__flat_197 = _fill_( _le_SxS_( _ctz_9867, 0), _emal_54417__pinl_4093__flat_197); 
    _free_( _ctz_9867); 
    _hce_4 = _MAIN::_dup_5151_BlockHoare__Cond_5( _pinl_4093__flat_197, q, p, r, P) ; 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5155_BlockHoare__Cond_4( argmax, max, _hce_4, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_122); 
  }
  r__SSA0_2 = ( _flat_122 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_122 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_122 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5155_BlockHoare__Cond_4(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5155_BlockHoare__Cond_4( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_4 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5155_BlockHoare__Cond_4 ::  ---
 */
{ 
  int _emlr_55197_r { , NN } ; 
  int _emlr_55196_r { , NN } ; 
  int _emal_54426__dlirmov_51281__wlsimp_9672 { , NN } ; 
  int _emal_54425__dlirmov_51283__pinl_4214__eat_768__SSA5_1 { , NN } ; 
  double _emal_54424__dlirmov_51286__pinl_4296__flat_149 { , NN } ; 
  double _emal_54423__dlirmov_51289__pinl_4271__flat_149 { , NN } ; 
  double _emal_54422__dlirmov_51292__pinl_4257__flat_149 { , NN } ; 
  double _emal_54421__dlirmov_51295__pinl_4244__flat_149 { , NN } ; 
  int _emal_54420__dlirmov_51683__iveras_51583 { , NN } ; 
  int _emal_54419__dlirmov_51684__iveras_51584 { , NN } ; 
  int _dlirmov_51684__iveras_51584 { , NN } ; 
  int _dlirmov_51683__iveras_51583 { , NN } ; 
  double _dlirmov_51295__pinl_4244__flat_149 { , NN } ; 
  double _dlirmov_51292__pinl_4257__flat_149 { , NN } ; 
  double _dlirmov_51289__pinl_4271__flat_149 { , NN } ; 
  double _dlirmov_51286__pinl_4296__flat_149 { , NN } ; 
  int{1} _dlirmov_51283__pinl_4214__eat_768__SSA5_1 { , NN } ; 
  int{0} _dlirmov_51281__wlsimp_9672 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_4) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_4); 
    _emal_54426__dlirmov_51281__wlsimp_9672 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51281__wlsimp_9672 = _fill_( 0, _emal_54426__dlirmov_51281__wlsimp_9672); 
    _emal_54425__dlirmov_51283__pinl_4214__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51283__pinl_4214__eat_768__SSA5_1 = _fill_( 1, _emal_54425__dlirmov_51283__pinl_4214__eat_768__SSA5_1); 
    _emal_54424__dlirmov_51286__pinl_4296__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51286__pinl_4296__flat_149 = _fill_( _idx_sel_( _dlirmov_51281__wlsimp_9672, q), _emal_54424__dlirmov_51286__pinl_4296__flat_149); 
    _emal_54423__dlirmov_51289__pinl_4271__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51289__pinl_4271__flat_149 = _fill_( _idx_sel_( _dlirmov_51283__pinl_4214__eat_768__SSA5_1, p), _emal_54423__dlirmov_51289__pinl_4271__flat_149); 
    _emal_54422__dlirmov_51292__pinl_4257__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51292__pinl_4257__flat_149 = _fill_( _idx_sel_( _dlirmov_51283__pinl_4214__eat_768__SSA5_1, q), _emal_54422__dlirmov_51292__pinl_4257__flat_149); 
    _free_( _dlirmov_51283__pinl_4214__eat_768__SSA5_1); 
    _emal_54421__dlirmov_51295__pinl_4244__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51295__pinl_4244__flat_149 = _fill_( _idx_sel_( _dlirmov_51281__wlsimp_9672, p), _emal_54421__dlirmov_51295__pinl_4244__flat_149); 
    _free_( _dlirmov_51281__wlsimp_9672); 
    _emal_54420__dlirmov_51683__iveras_51583 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51683__iveras_51583 = _fill_( 0, _emal_54420__dlirmov_51683__iveras_51583); 
    _emal_54419__dlirmov_51684__iveras_51584 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51684__iveras_51584 = _fill_( 1, _emal_54419__dlirmov_51684__iveras_51584); 
    _emlr_55196_r = _alloc_( 1, _dim_A_( r), _shape_A_( r)); 
    _emlr_55197_r = _fill_( _copy_( r), _emlr_55196_r); 
    _dec_rc_( r, 1); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1 = _MAIN::_dup_5154_BlockHoare__Loop_3( _dlirmov_51684__iveras_51584, _dlirmov_51683__iveras_51583, _dlirmov_51295__pinl_4244__flat_149, _dlirmov_51292__pinl_4257__flat_149, _dlirmov_51289__pinl_4271__flat_149, _dlirmov_51286__pinl_4296__flat_149, argmax, max, q, p, _emlr_55197_r, l, P) ; 
  }
  else
  { 
    _free_( _hce_4); 
  }
  r__SSA0_2 = ( _hce_4 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _hce_4 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_4 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5154_BlockHoare__Loop_3(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5154_BlockHoare__Loop_3( int _iveras_51584 { ,NN } , int _iveras_51583 { ,NN } , double _pinl_4244__flat_149 { ,NN } , double _pinl_4257__flat_149 { ,NN } , double _pinl_4271__flat_149 { ,NN } , double _pinl_4296__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5154_BlockHoare__Loop_3 ::  ---
 */
{ 
  int _emal_54444__ivesli_48553 { , NN } ; 
  double _emal_54443__pinl_4213__flat_149 { , NN } ; 
  int _emal_54442__ivesli_48551 { , NN } ; 
  double _emal_54441__pinl_4213__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54440__flat_129__SSA5_2 { , NN } ; 
  double _emal_54439__pinl_4284__flat_95 { , NN } ; 
  double _emal_54438__pinl_4259__flat_95 { , NN } ; 
  double _emal_54432__ctz_9871 { , NN } ; 
  bool _emal_54431__pinl_4312__flat_252 { , NN } ; 
  int _emal_54430__pinl_4315__flat_124 { , NN } ; 
  int _emal_54429__esd_10031 { , NN } ; 
  bool _emal_54427__pinl_4316__flat_197 { , NN } ; 
  int _ivesli_48553 { , NN } ; 
  int _ivesli_48551 { , NN } ; 
  int _esd_10031 { , NN } ; 
  double _ctz_9871 { , NN } ; 
  int _ctz_9869 { , NN } ; 
  double[2] _flat_129__SSA5_2 { , NN } ; 
  double _pinl_4213__flat_149__SSA5_2 { , NN } ; 
  double _pinl_4213__flat_149 { , NN } ; 
  double _pinl_4284__flat_95 { , NN } ; 
  double _pinl_4259__flat_95 { , NN } ; 
  double _pinl_4258__flat_96 { , NN } ; 
  double _pinl_4245__flat_95 { , NN } ; 
  double _pinl_4232__flat_95 { , NN } ; 
  double _pinl_4231__flat_96 { , NN } ; 
  double _pinl_4230__flat_95 { , NN } ; 
  bool _pinl_4312__flat_252 { , NN } ; 
  double _pinl_4311_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_4310_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_4315__flat_124 { , NN } ; 
  bool _pinl_4316__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int r__SSA0_4 { , NN } ;  /* declared: int */
  int r__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_3 { , NN } ; 

  _emal_54444__ivesli_48553 = _alloc_( 1, 0, [:int]); 
  _ivesli_48553 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51583), _emal_54444__ivesli_48553); 
  _emal_54443__pinl_4213__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149 = _fill_( _idx_sel_( _ivesli_48553, P), _emal_54443__pinl_4213__flat_149); 
  _free_( _ivesli_48553); 
  _emal_54442__ivesli_48551 = _alloc_( 1, 0, [:int]); 
  _ivesli_48551 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51584), _emal_54442__ivesli_48551); 
  _emal_54441__pinl_4213__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_4213__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48551, P), _emal_54441__pinl_4213__flat_149__SSA5_2); 
  _free_( _ivesli_48551); 
  _emal_54440__flat_129__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_129__SSA5_2 = _fill_( [ _pinl_4213__flat_149, _pinl_4213__flat_149__SSA5_2 ], _emal_54440__flat_129__SSA5_2); 
  _emal_54439__pinl_4284__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4284__flat_95 = _fill_( _sub_SxS_( _pinl_4296__flat_149, _pinl_4213__flat_149), _emal_54439__pinl_4284__flat_95); 
  _emal_54438__pinl_4259__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_4259__flat_95 = _fill_( _sub_SxS_( _pinl_4271__flat_149, _pinl_4213__flat_149__SSA5_2), _emal_54438__pinl_4259__flat_95); 
  _pinl_4258__flat_96 = _fill_( _mul_SxS_( _pinl_4259__flat_95, _pinl_4284__flat_95), _pinl_4259__flat_95); 
  _free_( _pinl_4284__flat_95); 
  _pinl_4245__flat_95 = _fill_( _sub_SxS_( _pinl_4257__flat_149, _pinl_4213__flat_149__SSA5_2), _pinl_4213__flat_149__SSA5_2); 
  _pinl_4232__flat_95 = _fill_( _sub_SxS_( _pinl_4244__flat_149, _pinl_4213__flat_149), _pinl_4213__flat_149); 
  _pinl_4231__flat_96 = _fill_( _mul_SxS_( _pinl_4232__flat_95, _pinl_4245__flat_95), _pinl_4232__flat_95); 
  _free_( _pinl_4245__flat_95); 
  _pinl_4230__flat_95 = _fill_( _sub_SxS_( _pinl_4231__flat_96, _pinl_4258__flat_96), _pinl_4231__flat_96); 
  _free_( _pinl_4258__flat_96); 
  _emal_54432__ctz_9871 = _alloc_( 1, 0, [:int]); 
  _ctz_9871 = _fill_( _sub_SxS_( _pinl_4230__flat_95, max), _emal_54432__ctz_9871); 
  _emal_54431__pinl_4312__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_4312__flat_252 = _fill_( _gt_SxS_( _ctz_9871, 0.0), _emal_54431__pinl_4312__flat_252); 
  _free_( _ctz_9871); 
  _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1 = _MAIN::_dup_5152_set_max__Cond_0( _pinl_4312__flat_252, argmax, _flat_129__SSA5_2, max, _pinl_4230__flat_95) ; 
  _emal_54430__pinl_4315__flat_124 = _alloc_( 1, 0, [:int]); 
  _pinl_4315__flat_124 = _fill_( _add_SxS_( -1, r), _emal_54430__pinl_4315__flat_124); 
  _emal_54429__esd_10031 = r; 
  _esd_10031 = _fill_( _sub_SxS_( 1, r), _emal_54429__esd_10031); 
  _ctz_9869 = _fill_( _add_SxS_( _esd_10031, l), _esd_10031); 
  _emal_54427__pinl_4316__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_4316__flat_197 = _fill_( _le_SxS_( _ctz_9869, 0), _emal_54427__pinl_4316__flat_197); 
  _free_( _ctz_9869); 
  _hce_3 = _MAIN::_dup_5153_BlockHoare__Cond_2( _pinl_4316__flat_197, q, p, _pinl_4315__flat_124, P) ; 
  if (_hce_3) 
  { 
    _free_( _hce_3); 
    argmax__SSA0_2, max__SSA0_2, r__SSA0_3 = _MAIN::_dup_5154_BlockHoare__Loop_3( _iveras_51584, _iveras_51583, _pinl_4244__flat_149, _pinl_4257__flat_149, _pinl_4271__flat_149, _pinl_4296__flat_149, _pinl_4310_argmax__SSA0_1, _pinl_4311_max__SSA0_1, q, p, _pinl_4315__flat_124, l, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( l, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_4296__flat_149, 1); 
    _dec_rc_( _pinl_4271__flat_149, 1); 
    _dec_rc_( _pinl_4257__flat_149, 1); 
    _dec_rc_( _pinl_4244__flat_149, 1); 
    _dec_rc_( _iveras_51583, 1); 
    _dec_rc_( _iveras_51584, 1); 
    _free_( _hce_3); 
  }
  r__SSA0_4 = ( _hce_3 ? r__SSA0_3 : _pinl_4315__flat_124 ); 
  max__SSA0_3 = ( _hce_3 ? max__SSA0_2 : _pinl_4311_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_3 ? argmax__SSA0_2 : _pinl_4310_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, r__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5153_BlockHoare__Cond_2(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5153_BlockHoare__Cond_2( bool _flat_130 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5153_BlockHoare__Cond_2 ::  ---
 */
{ 
  bool _emal_54465__hce_3__SSA0_1 { , NN } ; 
  int _emal_54464__wlsimp_9675 { , NN } ; 
  int _emal_54463__iveras_51585 { , NN } ; 
  int _emal_54462__ivesli_48557 { , NN } ; 
  double _emal_54461__pinl_4328__flat_149 { , NN } ; 
  int _emal_54460__pinl_4329__eat_768__SSA5_1 { , NN } ; 
  int _emal_54459__iveras_51586 { , NN } ; 
  int _emal_54458__ivesli_48555 { , NN } ; 
  double _emal_54457__pinl_4328__flat_149__SSA5_2 { , NN } ; 
  double _emal_54456__pinl_4411__flat_149 { , NN } ; 
  double _emal_54455__pinl_4399__flat_95 { , NN } ; 
  double _emal_54454__pinl_4386__flat_149 { , NN } ; 
  double _emal_54453__pinl_4374__flat_95 { , NN } ; 
  double _emal_54452__pinl_4373__flat_96 { , NN } ; 
  double _emal_54451__pinl_4372__flat_149 { , NN } ; 
  double _emal_54450__pinl_4360__flat_95 { , NN } ; 
  double _emal_54449__pinl_4359__flat_149 { , NN } ; 
  double _emal_54448__pinl_4347__flat_95 { , NN } ; 
  double _emal_54447__pinl_4346__flat_96 { , NN } ; 
  double _emal_54446__pinl_4345__flat_95 { , NN } ; 
  bool _emal_54445__pinl_4424__flat_252 { , NN } ; 
  int _iveras_51586 { , NN } ; 
  int _iveras_51585 { , NN } ; 
  int _ivesli_48557 { , NN } ; 
  int _ivesli_48555 { , NN } ; 
  double _pinl_4328__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_4329__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9675 { , NN } ; 
  double _pinl_4328__flat_149 { , NN } ; 
  double _pinl_4411__flat_149 { , NN } ; 
  double _pinl_4399__flat_95 { , NN } ; 
  double _pinl_4386__flat_149 { , NN } ; 
  double _pinl_4374__flat_95 { , NN } ; 
  double _pinl_4373__flat_96 { , NN } ; 
  double _pinl_4372__flat_149 { , NN } ; 
  double _pinl_4360__flat_95 { , NN } ; 
  double _pinl_4359__flat_149 { , NN } ; 
  double _pinl_4347__flat_95 { , NN } ; 
  double _pinl_4346__flat_96 { , NN } ; 
  double _pinl_4345__flat_95 { , NN } ; 
  bool _pinl_4424__flat_252 { , NN } ; 
  bool _hce_3__SSA0_2 { , NN } ; 
  bool{0} _hce_3__SSA0_1 { , NN } ; 

  if (_flat_130) 
  { 
    _free_( _flat_130); 
    _emal_54464__wlsimp_9675 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9675 = _fill_( 0, _emal_54464__wlsimp_9675); 
    _emal_54463__iveras_51585 = _alloc_( 1, 0, [:int]); 
    _iveras_51585 = _fill_( 0, _emal_54463__iveras_51585); 
    _ivesli_48557 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51585), _iveras_51585); 
    _emal_54461__pinl_4328__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149 = _fill_( _idx_sel_( _ivesli_48557, P), _emal_54461__pinl_4328__flat_149); 
    _free_( _ivesli_48557); 
    _emal_54460__pinl_4329__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4329__eat_768__SSA5_1 = _fill_( 1, _emal_54460__pinl_4329__eat_768__SSA5_1); 
    _emal_54459__iveras_51586 = _alloc_( 1, 0, [:int]); 
    _iveras_51586 = _fill_( 1, _emal_54459__iveras_51586); 
    _ivesli_48555 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51586), _iveras_51586); 
    _emal_54457__pinl_4328__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4328__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48555, P), _emal_54457__pinl_4328__flat_149__SSA5_2); 
    _free_( _ivesli_48555); 
    _emal_54456__pinl_4411__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4411__flat_149 = _fill_( _idx_sel_( _wlsimp_9675, q), _emal_54456__pinl_4411__flat_149); 
    _pinl_4399__flat_95 = _fill_( _sub_SxS_( _pinl_4411__flat_149, _pinl_4328__flat_149), _pinl_4411__flat_149); 
    _emal_54454__pinl_4386__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4386__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA5_1, p), _emal_54454__pinl_4386__flat_149); 
    _pinl_4374__flat_95 = _fill_( _sub_SxS_( _pinl_4386__flat_149, _pinl_4328__flat_149__SSA5_2), _pinl_4386__flat_149); 
    _pinl_4373__flat_96 = _fill_( _mul_SxS_( _pinl_4374__flat_95, _pinl_4399__flat_95), _pinl_4374__flat_95); 
    _free_( _pinl_4399__flat_95); 
    _emal_54451__pinl_4372__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4372__flat_149 = _fill_( _idx_sel_( _pinl_4329__eat_768__SSA5_1, q), _emal_54451__pinl_4372__flat_149); 
    _free_( _pinl_4329__eat_768__SSA5_1); 
    _pinl_4360__flat_95 = _fill_( _sub_SxS_( _pinl_4372__flat_149, _pinl_4328__flat_149__SSA5_2), _pinl_4372__flat_149); 
    _free_( _pinl_4328__flat_149__SSA5_2); 
    _emal_54449__pinl_4359__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4359__flat_149 = _fill_( _idx_sel_( _wlsimp_9675, p), _emal_54449__pinl_4359__flat_149); 
    _free_( _wlsimp_9675); 
    _pinl_4347__flat_95 = _fill_( _sub_SxS_( _pinl_4359__flat_149, _pinl_4328__flat_149), _pinl_4359__flat_149); 
    _free_( _pinl_4328__flat_149); 
    _pinl_4346__flat_96 = _fill_( _mul_SxS_( _pinl_4347__flat_95, _pinl_4360__flat_95), _pinl_4347__flat_95); 
    _free_( _pinl_4360__flat_95); 
    _pinl_4345__flat_95 = _fill_( _sub_SxS_( _pinl_4346__flat_96, _pinl_4373__flat_96), _pinl_4346__flat_96); 
    _free_( _pinl_4373__flat_96); 
    _emal_54445__pinl_4424__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4424__flat_252 = _fill_( _gt_SxS_( _pinl_4345__flat_95, 0.0), _emal_54445__pinl_4424__flat_252); 
    _free_( _pinl_4345__flat_95); 
  }
  else
  { 
    _free_( _flat_130); 
    _emal_54465__hce_3__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_3__SSA0_1 = _fill_( false, _emal_54465__hce_3__SSA0_1); 
  }
  _hce_3__SSA0_2 = ( _flat_130 ? _pinl_4424__flat_252 : _hce_3__SSA0_1 ); 
  return( _hce_3__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5152_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5152_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5152_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5151_BlockHoare__Cond_5(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5151_BlockHoare__Cond_5( bool _flat_123 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5151_BlockHoare__Cond_5 ::  ---
 */
{ 
  bool _emal_54486__hce_4__SSA0_1 { , NN } ; 
  int _emal_54485__wlsimp_9678 { , NN } ; 
  int _emal_54484__iveras_51587 { , NN } ; 
  int _emal_54483__ivesli_48561 { , NN } ; 
  double _emal_54482__pinl_4105__flat_149 { , NN } ; 
  int _emal_54481__pinl_4106__eat_768__SSA5_1 { , NN } ; 
  int _emal_54480__iveras_51588 { , NN } ; 
  int _emal_54479__ivesli_48559 { , NN } ; 
  double _emal_54478__pinl_4105__flat_149__SSA5_2 { , NN } ; 
  double _emal_54477__pinl_4188__flat_149 { , NN } ; 
  double _emal_54476__pinl_4176__flat_95 { , NN } ; 
  double _emal_54475__pinl_4163__flat_149 { , NN } ; 
  double _emal_54474__pinl_4151__flat_95 { , NN } ; 
  double _emal_54473__pinl_4150__flat_96 { , NN } ; 
  double _emal_54472__pinl_4149__flat_149 { , NN } ; 
  double _emal_54471__pinl_4137__flat_95 { , NN } ; 
  double _emal_54470__pinl_4136__flat_149 { , NN } ; 
  double _emal_54469__pinl_4124__flat_95 { , NN } ; 
  double _emal_54468__pinl_4123__flat_96 { , NN } ; 
  double _emal_54467__pinl_4122__flat_95 { , NN } ; 
  bool _emal_54466__pinl_4201__flat_252 { , NN } ; 
  int _iveras_51588 { , NN } ; 
  int _iveras_51587 { , NN } ; 
  int _ivesli_48561 { , NN } ; 
  int _ivesli_48559 { , NN } ; 
  double _pinl_4105__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_4106__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9678 { , NN } ; 
  double _pinl_4105__flat_149 { , NN } ; 
  double _pinl_4188__flat_149 { , NN } ; 
  double _pinl_4176__flat_95 { , NN } ; 
  double _pinl_4163__flat_149 { , NN } ; 
  double _pinl_4151__flat_95 { , NN } ; 
  double _pinl_4150__flat_96 { , NN } ; 
  double _pinl_4149__flat_149 { , NN } ; 
  double _pinl_4137__flat_95 { , NN } ; 
  double _pinl_4136__flat_149 { , NN } ; 
  double _pinl_4124__flat_95 { , NN } ; 
  double _pinl_4123__flat_96 { , NN } ; 
  double _pinl_4122__flat_95 { , NN } ; 
  bool _pinl_4201__flat_252 { , NN } ; 
  bool _hce_4__SSA0_2 { , NN } ; 
  bool{0} _hce_4__SSA0_1 { , NN } ; 

  if (_flat_123) 
  { 
    _free_( _flat_123); 
    _emal_54485__wlsimp_9678 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9678 = _fill_( 0, _emal_54485__wlsimp_9678); 
    _emal_54484__iveras_51587 = _alloc_( 1, 0, [:int]); 
    _iveras_51587 = _fill_( 0, _emal_54484__iveras_51587); 
    _ivesli_48561 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51587), _iveras_51587); 
    _emal_54482__pinl_4105__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149 = _fill_( _idx_sel_( _ivesli_48561, P), _emal_54482__pinl_4105__flat_149); 
    _free_( _ivesli_48561); 
    _emal_54481__pinl_4106__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_4106__eat_768__SSA5_1 = _fill_( 1, _emal_54481__pinl_4106__eat_768__SSA5_1); 
    _emal_54480__iveras_51588 = _alloc_( 1, 0, [:int]); 
    _iveras_51588 = _fill_( 1, _emal_54480__iveras_51588); 
    _ivesli_48559 = _fill_( _idxs2offset_( [ 1000000, 2 ], r, _iveras_51588), _iveras_51588); 
    _emal_54478__pinl_4105__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_4105__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48559, P), _emal_54478__pinl_4105__flat_149__SSA5_2); 
    _free_( _ivesli_48559); 
    _emal_54477__pinl_4188__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4188__flat_149 = _fill_( _idx_sel_( _wlsimp_9678, q), _emal_54477__pinl_4188__flat_149); 
    _pinl_4176__flat_95 = _fill_( _sub_SxS_( _pinl_4188__flat_149, _pinl_4105__flat_149), _pinl_4188__flat_149); 
    _emal_54475__pinl_4163__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4163__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA5_1, p), _emal_54475__pinl_4163__flat_149); 
    _pinl_4151__flat_95 = _fill_( _sub_SxS_( _pinl_4163__flat_149, _pinl_4105__flat_149__SSA5_2), _pinl_4163__flat_149); 
    _pinl_4150__flat_96 = _fill_( _mul_SxS_( _pinl_4151__flat_95, _pinl_4176__flat_95), _pinl_4151__flat_95); 
    _free_( _pinl_4176__flat_95); 
    _emal_54472__pinl_4149__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4149__flat_149 = _fill_( _idx_sel_( _pinl_4106__eat_768__SSA5_1, q), _emal_54472__pinl_4149__flat_149); 
    _free_( _pinl_4106__eat_768__SSA5_1); 
    _pinl_4137__flat_95 = _fill_( _sub_SxS_( _pinl_4149__flat_149, _pinl_4105__flat_149__SSA5_2), _pinl_4149__flat_149); 
    _free_( _pinl_4105__flat_149__SSA5_2); 
    _emal_54470__pinl_4136__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4136__flat_149 = _fill_( _idx_sel_( _wlsimp_9678, p), _emal_54470__pinl_4136__flat_149); 
    _free_( _wlsimp_9678); 
    _pinl_4124__flat_95 = _fill_( _sub_SxS_( _pinl_4136__flat_149, _pinl_4105__flat_149), _pinl_4136__flat_149); 
    _free_( _pinl_4105__flat_149); 
    _pinl_4123__flat_96 = _fill_( _mul_SxS_( _pinl_4124__flat_95, _pinl_4137__flat_95), _pinl_4124__flat_95); 
    _free_( _pinl_4137__flat_95); 
    _pinl_4122__flat_95 = _fill_( _sub_SxS_( _pinl_4123__flat_96, _pinl_4150__flat_96), _pinl_4123__flat_96); 
    _free_( _pinl_4150__flat_96); 
    _emal_54466__pinl_4201__flat_252 = _alloc_( 1, 0, [:int]); 
    _pinl_4201__flat_252 = _fill_( _gt_SxS_( _pinl_4122__flat_95, 0.0), _emal_54466__pinl_4201__flat_252); 
    _free_( _pinl_4122__flat_95); 
  }
  else
  { 
    _free_( _flat_123); 
    _emal_54486__hce_4__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_4__SSA0_1 = _fill_( false, _emal_54486__hce_4__SSA0_1); 
  }
  _hce_4__SSA0_2 = ( _flat_123 ? _pinl_4201__flat_252 : _hce_4__SSA0_1 ); 
  return( _hce_4__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5150_BlockHoare__Cond_9(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5150_BlockHoare__Cond_9( double[2] argmax { ,NN } , double max { ,NN } , bool _hce_6 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5150_BlockHoare__Cond_9 ::  ---
 */
{ 
  int _emlr_55199_l { , NN } ; 
  int _emlr_55198_l { , NN } ; 
  int _emal_54494__dlirmov_51265__wlsimp_9681 { , NN } ; 
  int _emal_54493__dlirmov_51267__pinl_3881__eat_768__SSA5_1 { , NN } ; 
  double _emal_54492__dlirmov_51270__pinl_3963__flat_149 { , NN } ; 
  double _emal_54491__dlirmov_51273__pinl_3938__flat_149 { , NN } ; 
  double _emal_54490__dlirmov_51276__pinl_3924__flat_149 { , NN } ; 
  double _emal_54489__dlirmov_51279__pinl_3911__flat_149 { , NN } ; 
  int _emal_54488__dlirmov_51681__iveras_51589 { , NN } ; 
  int _emal_54487__dlirmov_51682__iveras_51590 { , NN } ; 
  int _dlirmov_51682__iveras_51590 { , NN } ; 
  int _dlirmov_51681__iveras_51589 { , NN } ; 
  double _dlirmov_51279__pinl_3911__flat_149 { , NN } ; 
  double _dlirmov_51276__pinl_3924__flat_149 { , NN } ; 
  double _dlirmov_51273__pinl_3938__flat_149 { , NN } ; 
  double _dlirmov_51270__pinl_3963__flat_149 { , NN } ; 
  int{1} _dlirmov_51267__pinl_3881__eat_768__SSA5_1 { , NN } ; 
  int{0} _dlirmov_51265__wlsimp_9681 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_hce_6) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _free_( _hce_6); 
    _emal_54494__dlirmov_51265__wlsimp_9681 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51265__wlsimp_9681 = _fill_( 0, _emal_54494__dlirmov_51265__wlsimp_9681); 
    _emal_54493__dlirmov_51267__pinl_3881__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51267__pinl_3881__eat_768__SSA5_1 = _fill_( 1, _emal_54493__dlirmov_51267__pinl_3881__eat_768__SSA5_1); 
    _emal_54492__dlirmov_51270__pinl_3963__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51270__pinl_3963__flat_149 = _fill_( _idx_sel_( _dlirmov_51265__wlsimp_9681, q), _emal_54492__dlirmov_51270__pinl_3963__flat_149); 
    _emal_54491__dlirmov_51273__pinl_3938__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51273__pinl_3938__flat_149 = _fill_( _idx_sel_( _dlirmov_51267__pinl_3881__eat_768__SSA5_1, p), _emal_54491__dlirmov_51273__pinl_3938__flat_149); 
    _emal_54490__dlirmov_51276__pinl_3924__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51276__pinl_3924__flat_149 = _fill_( _idx_sel_( _dlirmov_51267__pinl_3881__eat_768__SSA5_1, q), _emal_54490__dlirmov_51276__pinl_3924__flat_149); 
    _free_( _dlirmov_51267__pinl_3881__eat_768__SSA5_1); 
    _emal_54489__dlirmov_51279__pinl_3911__flat_149 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51279__pinl_3911__flat_149 = _fill_( _idx_sel_( _dlirmov_51265__wlsimp_9681, p), _emal_54489__dlirmov_51279__pinl_3911__flat_149); 
    _free_( _dlirmov_51265__wlsimp_9681); 
    _emal_54488__dlirmov_51681__iveras_51589 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51681__iveras_51589 = _fill_( 0, _emal_54488__dlirmov_51681__iveras_51589); 
    _emal_54487__dlirmov_51682__iveras_51590 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51682__iveras_51590 = _fill_( 1, _emal_54487__dlirmov_51682__iveras_51590); 
    _emlr_55198_l = _alloc_( 1, _dim_A_( l), _shape_A_( l)); 
    _emlr_55199_l = _fill_( _copy_( l), _emlr_55198_l); 
    _dec_rc_( l, 1); 
    argmax__SSA0_1, max__SSA0_1, l__SSA0_1 = _MAIN::_dup_5149_BlockHoare__Loop_8( _dlirmov_51682__iveras_51590, _dlirmov_51681__iveras_51589, _dlirmov_51279__pinl_3911__flat_149, _dlirmov_51276__pinl_3924__flat_149, _dlirmov_51273__pinl_3938__flat_149, _dlirmov_51270__pinl_3963__flat_149, argmax, max, q, p, r, _emlr_55199_l, P) ; 
  }
  else
  { 
    _free_( _hce_6); 
  }
  l__SSA0_2 = ( _hce_6 ? l__SSA0_1 : l ); 
  max__SSA0_2 = ( _hce_6 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _hce_6 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, l__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5149_BlockHoare__Loop_8(...) [ body ]
 ****************************************************************************/
double[2], double, int _MAIN::_dup_5149_BlockHoare__Loop_8( int _iveras_51590 { ,NN } , int _iveras_51589 { ,NN } , double _pinl_3911__flat_149 { ,NN } , double _pinl_3924__flat_149 { ,NN } , double _pinl_3938__flat_149 { ,NN } , double _pinl_3963__flat_149 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5149_BlockHoare__Loop_8 ::  ---
 */
{ 
  int _emal_54511__ivesli_48565 { , NN } ; 
  double _emal_54510__pinl_3880__flat_149 { , NN } ; 
  int _emal_54509__ivesli_48563 { , NN } ; 
  double _emal_54508__pinl_3880__flat_149__SSA5_2 { , NN } ; 
  double[2] _emal_54507__flat_117__SSA5_2 { , NN } ; 
  double _emal_54506__pinl_3951__flat_95 { , NN } ; 
  double _emal_54505__pinl_3926__flat_95 { , NN } ; 
  double _emal_54499__ctz_9875 { , NN } ; 
  bool _emal_54498__pinl_3979__flat_252 { , NN } ; 
  int _emal_54497__pinl_3982__flat_122 { , NN } ; 
  int _emal_54496__ctz_9873 { , NN } ; 
  bool _emal_54495__pinl_3983__flat_197 { , NN } ; 
  int _ivesli_48565 { , NN } ; 
  int _ivesli_48563 { , NN } ; 
  double _ctz_9875 { , NN } ; 
  int _ctz_9873 { , NN } ; 
  double[2] _flat_117__SSA5_2 { , NN } ; 
  double _pinl_3880__flat_149__SSA5_2 { , NN } ; 
  double _pinl_3880__flat_149 { , NN } ; 
  double _pinl_3951__flat_95 { , NN } ; 
  double _pinl_3926__flat_95 { , NN } ; 
  double _pinl_3925__flat_96 { , NN } ; 
  double _pinl_3912__flat_95 { , NN } ; 
  double _pinl_3899__flat_95 { , NN } ; 
  double _pinl_3898__flat_96 { , NN } ; 
  double _pinl_3897__flat_95 { , NN } ; 
  bool _pinl_3979__flat_252 { , NN } ; 
  double _pinl_3978_max__SSA0_1 { , NN } ;  /* declared: double */
  double[2] _pinl_3977_argmax__SSA0_1 { , NN } ;  /* declared: double[2] */
  int _pinl_3982__flat_122 { , NN } ; 
  bool _pinl_3983__flat_197 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  double max__SSA0_3 { , NN } ; 
  int l__SSA0_4 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  bool _hce_5 { , NN } ; 

  _emal_54511__ivesli_48565 = _alloc_( 1, 0, [:int]); 
  _ivesli_48565 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51589), _emal_54511__ivesli_48565); 
  _emal_54510__pinl_3880__flat_149 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149 = _fill_( _idx_sel_( _ivesli_48565, P), _emal_54510__pinl_3880__flat_149); 
  _free_( _ivesli_48565); 
  _emal_54509__ivesli_48563 = _alloc_( 1, 0, [:int]); 
  _ivesli_48563 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51590), _emal_54509__ivesli_48563); 
  _emal_54508__pinl_3880__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
  _pinl_3880__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48563, P), _emal_54508__pinl_3880__flat_149__SSA5_2); 
  _free_( _ivesli_48563); 
  _emal_54507__flat_117__SSA5_2 = _alloc_( 1, 1, [ 2 ]); 
  _flat_117__SSA5_2 = _fill_( [ _pinl_3880__flat_149, _pinl_3880__flat_149__SSA5_2 ], _emal_54507__flat_117__SSA5_2); 
  _emal_54506__pinl_3951__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3951__flat_95 = _fill_( _sub_SxS_( _pinl_3963__flat_149, _pinl_3880__flat_149), _emal_54506__pinl_3951__flat_95); 
  _emal_54505__pinl_3926__flat_95 = _alloc_( 1, 0, [:int]); 
  _pinl_3926__flat_95 = _fill_( _sub_SxS_( _pinl_3938__flat_149, _pinl_3880__flat_149__SSA5_2), _emal_54505__pinl_3926__flat_95); 
  _pinl_3925__flat_96 = _fill_( _mul_SxS_( _pinl_3926__flat_95, _pinl_3951__flat_95), _pinl_3926__flat_95); 
  _free_( _pinl_3951__flat_95); 
  _pinl_3912__flat_95 = _fill_( _sub_SxS_( _pinl_3924__flat_149, _pinl_3880__flat_149__SSA5_2), _pinl_3880__flat_149__SSA5_2); 
  _pinl_3899__flat_95 = _fill_( _sub_SxS_( _pinl_3911__flat_149, _pinl_3880__flat_149), _pinl_3880__flat_149); 
  _pinl_3898__flat_96 = _fill_( _mul_SxS_( _pinl_3899__flat_95, _pinl_3912__flat_95), _pinl_3899__flat_95); 
  _free_( _pinl_3912__flat_95); 
  _pinl_3897__flat_95 = _fill_( _sub_SxS_( _pinl_3898__flat_96, _pinl_3925__flat_96), _pinl_3898__flat_96); 
  _free_( _pinl_3925__flat_96); 
  _emal_54499__ctz_9875 = _alloc_( 1, 0, [:int]); 
  _ctz_9875 = _fill_( _sub_SxS_( _pinl_3897__flat_95, max), _emal_54499__ctz_9875); 
  _emal_54498__pinl_3979__flat_252 = _alloc_( 1, 0, [:int]); 
  _pinl_3979__flat_252 = _fill_( _gt_SxS_( _ctz_9875, 0.0), _emal_54498__pinl_3979__flat_252); 
  _free_( _ctz_9875); 
  _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1 = _MAIN::_dup_5147_set_max__Cond_0( _pinl_3979__flat_252, argmax, _flat_117__SSA5_2, max, _pinl_3897__flat_95) ; 
  _emal_54497__pinl_3982__flat_122 = l; 
  _pinl_3982__flat_122 = _fill_( _add_SxS_( 1, l), _emal_54497__pinl_3982__flat_122); 
  _emal_54496__ctz_9873 = _alloc_( 1, 0, [:int]); 
  _ctz_9873 = _fill_( _sub_SxS_( _pinl_3982__flat_122, r), _emal_54496__ctz_9873); 
  _emal_54495__pinl_3983__flat_197 = _alloc_( 1, 0, [:int]); 
  _pinl_3983__flat_197 = _fill_( _le_SxS_( _ctz_9873, 0), _emal_54495__pinl_3983__flat_197); 
  _free_( _ctz_9873); 
  _hce_5 = _MAIN::_dup_5148_BlockHoare__Cond_7( _pinl_3983__flat_197, q, p, _pinl_3982__flat_122, P) ; 
  if (_hce_5) 
  { 
    _free_( _hce_5); 
    argmax__SSA0_2, max__SSA0_2, l__SSA0_3 = _MAIN::_dup_5149_BlockHoare__Loop_8( _iveras_51590, _iveras_51589, _pinl_3911__flat_149, _pinl_3924__flat_149, _pinl_3938__flat_149, _pinl_3963__flat_149, _pinl_3977_argmax__SSA0_1, _pinl_3978_max__SSA0_1, q, p, r, _pinl_3982__flat_122, P) ; 
  }
  else
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _pinl_3963__flat_149, 1); 
    _dec_rc_( _pinl_3938__flat_149, 1); 
    _dec_rc_( _pinl_3924__flat_149, 1); 
    _dec_rc_( _pinl_3911__flat_149, 1); 
    _dec_rc_( _iveras_51589, 1); 
    _dec_rc_( _iveras_51590, 1); 
    _free_( _hce_5); 
  }
  l__SSA0_4 = ( _hce_5 ? l__SSA0_3 : _pinl_3982__flat_122 ); 
  max__SSA0_3 = ( _hce_5 ? max__SSA0_2 : _pinl_3978_max__SSA0_1 ); 
  argmax__SSA0_3 = ( _hce_5 ? argmax__SSA0_2 : _pinl_3977_argmax__SSA0_1 ); 
  return( argmax__SSA0_3, max__SSA0_3, l__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5148_BlockHoare__Cond_7(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5148_BlockHoare__Cond_7( bool _flat_118 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5148_BlockHoare__Cond_7 ::  ---
 */
{ 
  bool _emal_54532__hce_5__SSA0_1 { , NN } ; 
  int _emal_54531__wlsimp_9684 { , NN } ; 
  int _emal_54530__iveras_51591 { , NN } ; 
  int _emal_54529__ivesli_48569 { , NN } ; 
  double _emal_54528__pinl_3995__flat_149 { , NN } ; 
  int _emal_54527__pinl_3996__eat_768__SSA5_1 { , NN } ; 
  int _emal_54526__iveras_51592 { , NN } ; 
  int _emal_54525__ivesli_48567 { , NN } ; 
  double _emal_54524__pinl_3995__flat_149__SSA5_2 { , NN } ; 
  double _emal_54523__pinl_4078__flat_149 { , NN } ; 
  double _emal_54522__pinl_4066__flat_95 { , NN } ; 
  double _emal_54521__pinl_4053__flat_149 { , NN } ; 
  double _emal_54520__pinl_4041__flat_95 { , NN } ; 
  double _emal_54519__pinl_4040__flat_96 { , NN } ; 
  double _emal_54518__pinl_4039__flat_149 { , NN } ; 
  double _emal_54517__pinl_4027__flat_95 { , NN } ; 
  double _emal_54516__pinl_4026__flat_149 { , NN } ; 
  double _emal_54515__pinl_4014__flat_95 { , NN } ; 
  double _emal_54514__pinl_4013__flat_96 { , NN } ; 
  double _emal_54513__pinl_4012__flat_95 { , NN } ; 
  bool _emal_54512__pinl_4091__flat_251 { , NN } ; 
  int _iveras_51592 { , NN } ; 
  int _iveras_51591 { , NN } ; 
  int _ivesli_48569 { , NN } ; 
  int _ivesli_48567 { , NN } ; 
  double _pinl_3995__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_3996__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9684 { , NN } ; 
  double _pinl_3995__flat_149 { , NN } ; 
  double _pinl_4078__flat_149 { , NN } ; 
  double _pinl_4066__flat_95 { , NN } ; 
  double _pinl_4053__flat_149 { , NN } ; 
  double _pinl_4041__flat_95 { , NN } ; 
  double _pinl_4040__flat_96 { , NN } ; 
  double _pinl_4039__flat_149 { , NN } ; 
  double _pinl_4027__flat_95 { , NN } ; 
  double _pinl_4026__flat_149 { , NN } ; 
  double _pinl_4014__flat_95 { , NN } ; 
  double _pinl_4013__flat_96 { , NN } ; 
  double _pinl_4012__flat_95 { , NN } ; 
  bool _pinl_4091__flat_251 { , NN } ; 
  bool _hce_5__SSA0_2 { , NN } ; 
  bool{0} _hce_5__SSA0_1 { , NN } ; 

  if (_flat_118) 
  { 
    _free_( _flat_118); 
    _emal_54531__wlsimp_9684 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9684 = _fill_( 0, _emal_54531__wlsimp_9684); 
    _emal_54530__iveras_51591 = _alloc_( 1, 0, [:int]); 
    _iveras_51591 = _fill_( 0, _emal_54530__iveras_51591); 
    _ivesli_48569 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51591), _iveras_51591); 
    _emal_54528__pinl_3995__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149 = _fill_( _idx_sel_( _ivesli_48569, P), _emal_54528__pinl_3995__flat_149); 
    _free_( _ivesli_48569); 
    _emal_54527__pinl_3996__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3996__eat_768__SSA5_1 = _fill_( 1, _emal_54527__pinl_3996__eat_768__SSA5_1); 
    _emal_54526__iveras_51592 = _alloc_( 1, 0, [:int]); 
    _iveras_51592 = _fill_( 1, _emal_54526__iveras_51592); 
    _ivesli_48567 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51592), _iveras_51592); 
    _emal_54524__pinl_3995__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3995__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48567, P), _emal_54524__pinl_3995__flat_149__SSA5_2); 
    _free_( _ivesli_48567); 
    _emal_54523__pinl_4078__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4078__flat_149 = _fill_( _idx_sel_( _wlsimp_9684, q), _emal_54523__pinl_4078__flat_149); 
    _pinl_4066__flat_95 = _fill_( _sub_SxS_( _pinl_4078__flat_149, _pinl_3995__flat_149), _pinl_4078__flat_149); 
    _emal_54521__pinl_4053__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4053__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA5_1, p), _emal_54521__pinl_4053__flat_149); 
    _pinl_4041__flat_95 = _fill_( _sub_SxS_( _pinl_4053__flat_149, _pinl_3995__flat_149__SSA5_2), _pinl_4053__flat_149); 
    _pinl_4040__flat_96 = _fill_( _mul_SxS_( _pinl_4041__flat_95, _pinl_4066__flat_95), _pinl_4041__flat_95); 
    _free_( _pinl_4066__flat_95); 
    _emal_54518__pinl_4039__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4039__flat_149 = _fill_( _idx_sel_( _pinl_3996__eat_768__SSA5_1, q), _emal_54518__pinl_4039__flat_149); 
    _free_( _pinl_3996__eat_768__SSA5_1); 
    _pinl_4027__flat_95 = _fill_( _sub_SxS_( _pinl_4039__flat_149, _pinl_3995__flat_149__SSA5_2), _pinl_4039__flat_149); 
    _free_( _pinl_3995__flat_149__SSA5_2); 
    _emal_54516__pinl_4026__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_4026__flat_149 = _fill_( _idx_sel_( _wlsimp_9684, p), _emal_54516__pinl_4026__flat_149); 
    _free_( _wlsimp_9684); 
    _pinl_4014__flat_95 = _fill_( _sub_SxS_( _pinl_4026__flat_149, _pinl_3995__flat_149), _pinl_4026__flat_149); 
    _free_( _pinl_3995__flat_149); 
    _pinl_4013__flat_96 = _fill_( _mul_SxS_( _pinl_4014__flat_95, _pinl_4027__flat_95), _pinl_4014__flat_95); 
    _free_( _pinl_4027__flat_95); 
    _pinl_4012__flat_95 = _fill_( _sub_SxS_( _pinl_4013__flat_96, _pinl_4040__flat_96), _pinl_4013__flat_96); 
    _free_( _pinl_4040__flat_96); 
    _emal_54512__pinl_4091__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_4091__flat_251 = _fill_( _le_SxS_( _pinl_4012__flat_95, 0.0), _emal_54512__pinl_4091__flat_251); 
    _free_( _pinl_4012__flat_95); 
  }
  else
  { 
    _free_( _flat_118); 
    _emal_54532__hce_5__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_5__SSA0_1 = _fill_( false, _emal_54532__hce_5__SSA0_1); 
  }
  _hce_5__SSA0_2 = ( _flat_118 ? _pinl_4091__flat_251 : _hce_5__SSA0_1 ); 
  return( _hce_5__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5147_set_max__Cond_0(...) [ body ]
 ****************************************************************************/
double[2], double _MAIN::_dup_5147_set_max__Cond_0( bool _flat_48 { ,NN } , double[2] argmax { ,NN } , double[2] p { ,NN } , double max { ,NN } , double o { ,NN } )
/*
 *  _dup_5147_set_max__Cond_0 ::  ---
 */
{ 
  double[2] argmax__SSA0_3 { , NN } ;  /* declared: double[2] */
  double max__SSA0_3 { , NN } ;  /* declared: double */

  if (_flat_48) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( argmax, 1); 
    _free_( _flat_48); 
  }
  else
  { 
    _free_( o); 
    _free_( p); 
    _free_( _flat_48); 
  }
  max__SSA0_3 = ( _flat_48 ? o : max ); 
  argmax__SSA0_3 = ( _flat_48 ? p : argmax ); 
  return( argmax__SSA0_3, max__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5146_BlockHoare__Cond_10(...) [ body ]
 ****************************************************************************/
bool _MAIN::_dup_5146_BlockHoare__Cond_10( bool _flat_111 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5146_BlockHoare__Cond_10 ::  ---
 */
{ 
  bool _emal_54553__hce_6__SSA0_1 { , NN } ; 
  int _emal_54552__wlsimp_9687 { , NN } ; 
  int _emal_54551__iveras_51593 { , NN } ; 
  int _emal_54550__ivesli_48573 { , NN } ; 
  double _emal_54549__pinl_3772__flat_149 { , NN } ; 
  int _emal_54548__pinl_3773__eat_768__SSA5_1 { , NN } ; 
  int _emal_54547__iveras_51594 { , NN } ; 
  int _emal_54546__ivesli_48571 { , NN } ; 
  double _emal_54545__pinl_3772__flat_149__SSA5_2 { , NN } ; 
  double _emal_54544__pinl_3855__flat_149 { , NN } ; 
  double _emal_54543__pinl_3843__flat_95 { , NN } ; 
  double _emal_54542__pinl_3830__flat_149 { , NN } ; 
  double _emal_54541__pinl_3818__flat_95 { , NN } ; 
  double _emal_54540__pinl_3817__flat_96 { , NN } ; 
  double _emal_54539__pinl_3816__flat_149 { , NN } ; 
  double _emal_54538__pinl_3804__flat_95 { , NN } ; 
  double _emal_54537__pinl_3803__flat_149 { , NN } ; 
  double _emal_54536__pinl_3791__flat_95 { , NN } ; 
  double _emal_54535__pinl_3790__flat_96 { , NN } ; 
  double _emal_54534__pinl_3789__flat_95 { , NN } ; 
  bool _emal_54533__pinl_3868__flat_251 { , NN } ; 
  int _iveras_51594 { , NN } ; 
  int _iveras_51593 { , NN } ; 
  int _ivesli_48573 { , NN } ; 
  int _ivesli_48571 { , NN } ; 
  double _pinl_3772__flat_149__SSA5_2 { , NN } ; 
  int{1} _pinl_3773__eat_768__SSA5_1 { , NN } ; 
  int{0} _wlsimp_9687 { , NN } ; 
  double _pinl_3772__flat_149 { , NN } ; 
  double _pinl_3855__flat_149 { , NN } ; 
  double _pinl_3843__flat_95 { , NN } ; 
  double _pinl_3830__flat_149 { , NN } ; 
  double _pinl_3818__flat_95 { , NN } ; 
  double _pinl_3817__flat_96 { , NN } ; 
  double _pinl_3816__flat_149 { , NN } ; 
  double _pinl_3804__flat_95 { , NN } ; 
  double _pinl_3803__flat_149 { , NN } ; 
  double _pinl_3791__flat_95 { , NN } ; 
  double _pinl_3790__flat_96 { , NN } ; 
  double _pinl_3789__flat_95 { , NN } ; 
  bool _pinl_3868__flat_251 { , NN } ; 
  bool _hce_6__SSA0_2 { , NN } ; 
  bool{0} _hce_6__SSA0_1 { , NN } ; 

  if (_flat_111) 
  { 
    _free_( _flat_111); 
    _emal_54552__wlsimp_9687 = _alloc_( 1, 0, [:int]); 
    _wlsimp_9687 = _fill_( 0, _emal_54552__wlsimp_9687); 
    _emal_54551__iveras_51593 = _alloc_( 1, 0, [:int]); 
    _iveras_51593 = _fill_( 0, _emal_54551__iveras_51593); 
    _ivesli_48573 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51593), _iveras_51593); 
    _emal_54549__pinl_3772__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149 = _fill_( _idx_sel_( _ivesli_48573, P), _emal_54549__pinl_3772__flat_149); 
    _free_( _ivesli_48573); 
    _emal_54548__pinl_3773__eat_768__SSA5_1 = _alloc_( 1, 0, [:int]); 
    _pinl_3773__eat_768__SSA5_1 = _fill_( 1, _emal_54548__pinl_3773__eat_768__SSA5_1); 
    _emal_54547__iveras_51594 = _alloc_( 1, 0, [:int]); 
    _iveras_51594 = _fill_( 1, _emal_54547__iveras_51594); 
    _ivesli_48571 = _fill_( _idxs2offset_( [ 1000000, 2 ], l, _iveras_51594), _iveras_51594); 
    _emal_54545__pinl_3772__flat_149__SSA5_2 = _alloc_( 1, 0, [:int]); 
    _pinl_3772__flat_149__SSA5_2 = _fill_( _idx_sel_( _ivesli_48571, P), _emal_54545__pinl_3772__flat_149__SSA5_2); 
    _free_( _ivesli_48571); 
    _emal_54544__pinl_3855__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3855__flat_149 = _fill_( _idx_sel_( _wlsimp_9687, q), _emal_54544__pinl_3855__flat_149); 
    _pinl_3843__flat_95 = _fill_( _sub_SxS_( _pinl_3855__flat_149, _pinl_3772__flat_149), _pinl_3855__flat_149); 
    _emal_54542__pinl_3830__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3830__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA5_1, p), _emal_54542__pinl_3830__flat_149); 
    _pinl_3818__flat_95 = _fill_( _sub_SxS_( _pinl_3830__flat_149, _pinl_3772__flat_149__SSA5_2), _pinl_3830__flat_149); 
    _pinl_3817__flat_96 = _fill_( _mul_SxS_( _pinl_3818__flat_95, _pinl_3843__flat_95), _pinl_3818__flat_95); 
    _free_( _pinl_3843__flat_95); 
    _emal_54539__pinl_3816__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3816__flat_149 = _fill_( _idx_sel_( _pinl_3773__eat_768__SSA5_1, q), _emal_54539__pinl_3816__flat_149); 
    _free_( _pinl_3773__eat_768__SSA5_1); 
    _pinl_3804__flat_95 = _fill_( _sub_SxS_( _pinl_3816__flat_149, _pinl_3772__flat_149__SSA5_2), _pinl_3816__flat_149); 
    _free_( _pinl_3772__flat_149__SSA5_2); 
    _emal_54537__pinl_3803__flat_149 = _alloc_( 1, 0, [:int]); 
    _pinl_3803__flat_149 = _fill_( _idx_sel_( _wlsimp_9687, p), _emal_54537__pinl_3803__flat_149); 
    _free_( _wlsimp_9687); 
    _pinl_3791__flat_95 = _fill_( _sub_SxS_( _pinl_3803__flat_149, _pinl_3772__flat_149), _pinl_3803__flat_149); 
    _free_( _pinl_3772__flat_149); 
    _pinl_3790__flat_96 = _fill_( _mul_SxS_( _pinl_3791__flat_95, _pinl_3804__flat_95), _pinl_3791__flat_95); 
    _free_( _pinl_3804__flat_95); 
    _pinl_3789__flat_95 = _fill_( _sub_SxS_( _pinl_3790__flat_96, _pinl_3817__flat_96), _pinl_3790__flat_96); 
    _free_( _pinl_3817__flat_96); 
    _emal_54533__pinl_3868__flat_251 = _alloc_( 1, 0, [:int]); 
    _pinl_3868__flat_251 = _fill_( _le_SxS_( _pinl_3789__flat_95, 0.0), _emal_54533__pinl_3868__flat_251); 
    _free_( _pinl_3789__flat_95); 
  }
  else
  { 
    _free_( _flat_111); 
    _emal_54553__hce_6__SSA0_1 = _alloc_( 1, 0, [:int]); 
    _hce_6__SSA0_1 = _fill_( false, _emal_54553__hce_6__SSA0_1); 
  }
  _hce_6__SSA0_2 = ( _flat_111 ? _pinl_3868__flat_251 : _hce_6__SSA0_1 ); 
  return( _hce_6__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5145_BlockHoare__Cond_25(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5145_BlockHoare__Cond_25( double[2]{0.0...} argmax { ,NN } , double{-17...} max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int{0} startl { ,NN } , int{0} startr { ,NN } , int{0} numl { ,NN } , int{0} numr { ,NN } , bool _flat_59 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5145_BlockHoare__Cond_25 ::  ---
 */
{ 
  int _emal_54554__dlirmov_51262__flat_65 { , NN } ; 
  int{0} _dlirmov_51262__flat_65 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int r__SSA0_2 { , NN } ;  /* declared: int */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  int r__SSA0_1 { , NN } ;  /* declared: int */
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 

  if (_flat_59) 
  { 
    _inc_rc_( p, 1); 
    _inc_rc_( q, 1); 
    _inc_rc_( numr, 1); 
    _inc_rc_( numl, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_59); 
    _emal_54554__dlirmov_51262__flat_65 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51262__flat_65 = _fill_( 0, _emal_54554__dlirmov_51262__flat_65); 
    argmax__SSA0_1, max__SSA0_1, r__SSA0_1, l__SSA0_1, P__SSA0_1 = _MAIN::_dup_5144_BlockHoare__Loop_24( _dlirmov_51262__flat_65, argmax, max, offsetsl, offsetsr, startl, startr, numl, numr, q, p, r, l, P) ; 
  }
  else
  { 
    _free_( _flat_59); 
  }
  P__SSA0_2 = ( _flat_59 ? P__SSA0_1 : P ); 
  l__SSA0_2 = ( _flat_59 ? l__SSA0_1 : l ); 
  r__SSA0_2 = ( _flat_59 ? r__SSA0_1 : r ); 
  max__SSA0_2 = ( _flat_59 ? max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_59 ? argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, r__SSA0_2, l__SSA0_2, P__SSA0_2); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5144_BlockHoare__Loop_24(...) [ body ]
 ****************************************************************************/
double[2], double, int, int, double[1000000,2] _MAIN::_dup_5144_BlockHoare__Loop_24( int{0} _flat_65 { ,NN } , double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int numl { ,NN } , int numr { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5144_BlockHoare__Loop_24 ::  ---
 */
{ 
  int _emal_54573__esd_30707 { , NN } ; 
  bool _emal_54572__pinl_3238__flat_194 { , NN } ; 
  int _emal_54571__esd_30706 { , NN } ; 
  bool _emal_54570__pinl_3360__flat_194 { , NN } ; 
  int _emal_54569__ctz_9881 { , NN } ; 
  bool _emal_54568__pinl_3482__flat_196 { , NN } ; 
  int _emal_54567__esd_10076 { , NN } ; 
  bool _emal_54566__pinl_3483__flat_196 { , NN } ; 
  int _emal_54565__pinl_3748__flat_41 { , NN } ; 
  int _emal_54564__pinl_3749__flat_41 { , NN } ; 
  int _emal_54563__pinl_3750__flat_40 { , NN } ; 
  int _emal_54562__pinl_3751__flat_40 { , NN } ; 
  int _emal_54561__esd_30702 { , NN } ; 
  bool _emal_54560__pinl_3752__flat_194 { , NN } ; 
  int _emal_54559__esd_30701 { , NN } ; 
  bool _emal_54558__pinl_3754__flat_194 { , NN } ; 
  int _emal_54557__pinl_3757__flat_41 { , NN } ; 
  bool _emal_54555__pinl_3758__flat_198 { , NN } ; 
  int _esd_30707 { , NN } ; 
  int _esd_30706 { , NN } ; 
  int _esd_30702 { , NN } ; 
  int _esd_30701 { , NN } ; 
  int _esd_10076 { , NN } ; 
  int _ctz_9881 { , NN } ; 
  int _ctz_9877 { , NN } ; 
  bool _pinl_3238__flat_194 { , NN } ; 
  bool _pinl_3360__flat_194 { , NN } ; 
  bool _pinl_3482__flat_196 { , NN } ; 
  bool _pinl_3483__flat_196 { , NN } ; 
  int _pinl_3748__flat_41 { , NN } ; 
  int _pinl_3749__flat_41 { , NN } ; 
  int _pinl_3750__flat_40 { , NN } ; 
  int _pinl_3751__flat_40 { , NN } ; 
  bool _pinl_3752__flat_194 { , NN } ; 
  bool _pinl_3754__flat_194 { , NN } ; 
  int _pinl_3757__flat_41 { , NN } ; 
  bool _pinl_3758__flat_198 { , NN } ; 
  double[2] argmax__SSA0_4 { , NN } ; 
  double max__SSA0_4 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */
  int l__SSA0_3 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  int l__SSA0_2 { , NN } ;  /* declared: int */
  int r__SSA0_2 { , NN } ;  /* declared: int */
  double max__SSA0_3 { , NN } ; 
  double[2] argmax__SSA0_3 { , NN } ; 
  int r__SSA0_1 { , NN } ;  /* declared: int */
  int l__SSA0_1 { , NN } ;  /* declared: int */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int numr__SSA0_1 { , NN } ; 
  int startr__SSA0_1 { , NN } ; 
  int[64] offsetsr__SSA0_1 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  int numl__SSA0_1 { , NN } ; 
  int startl__SSA0_1 { , NN } ; 
  int[64] offsetsl__SSA0_1 { , NN } ; 
  double max__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_1 { , NN } ; 
  int _hce_7 { , NN } ; 

  _emal_54573__esd_30707 = _alloc_( 1, 0, [:int]); 
  _esd_30707 = _fill_( _neg_S_( numl), _emal_54573__esd_30707); 
  _emal_54572__pinl_3238__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3238__flat_194 = _fill_( _eq_SxS_( _esd_30707, 0), _emal_54572__pinl_3238__flat_194); 
  _free_( _esd_30707); 
  argmax__SSA0_1, max__SSA0_1, offsetsl__SSA0_1, startl__SSA0_1, numl__SSA0_1 = _MAIN::_dup_5134_BlockHoare__Cond_23( argmax, max, offsetsl, startl, numl, _pinl_3238__flat_194, q, p, l, P) ; 
  _emal_54571__esd_30706 = _alloc_( 1, 0, [:int]); 
  _esd_30706 = _fill_( _neg_S_( numr), _emal_54571__esd_30706); 
  _emal_54570__pinl_3360__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3360__flat_194 = _fill_( _eq_SxS_( _esd_30706, 0), _emal_54570__pinl_3360__flat_194); 
  _free_( _esd_30706); 
  argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_1, startr__SSA0_1, numr__SSA0_1 = _MAIN::_dup_5138_BlockHoare__Cond_20( argmax__SSA0_1, max__SSA0_1, offsetsr, startr, numr, _pinl_3360__flat_194, q, p, r, P) ; 
  _emal_54569__ctz_9881 = _alloc_( 1, 0, [:int]); 
  _ctz_9881 = _fill_( _sub_SxS_( numl__SSA0_1, numr__SSA0_1), _emal_54569__ctz_9881); 
  _emal_54568__pinl_3482__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3482__flat_196 = _fill_( _lt_SxS_( _ctz_9881, 0), _emal_54568__pinl_3482__flat_196); 
  _free_( _ctz_9881); 
  _hce_7 = _MAIN::_dup_5139_BlockHoare__Cond_17( numl__SSA0_1, numr__SSA0_1, _pinl_3482__flat_196) ; 
  _emal_54567__esd_10076 = _alloc_( 1, 0, [:int]); 
  _esd_10076 = _fill_( _neg_S_( _hce_7), _emal_54567__esd_10076); 
  _emal_54566__pinl_3483__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3483__flat_196 = _fill_( _lt_SxS_( _esd_10076, 0), _emal_54566__pinl_3483__flat_196); 
  _free_( _esd_10076); 
  P__SSA0_1 = _MAIN::_dup_5141_BlockHoare__Cond_16( offsetsl__SSA0_1, offsetsr__SSA0_1, startl__SSA0_1, startr__SSA0_1, _hce_7, _flat_65, _pinl_3483__flat_196, r, l, P) ; 
  _emal_54565__pinl_3748__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3748__flat_41 = _fill_( _sub_SxS_( numl__SSA0_1, _hce_7), _emal_54565__pinl_3748__flat_41); 
  _emal_54564__pinl_3749__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3749__flat_41 = _fill_( _sub_SxS_( numr__SSA0_1, _hce_7), _emal_54564__pinl_3749__flat_41); 
  _emal_54563__pinl_3750__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3750__flat_40 = _fill_( _add_SxS_( startl__SSA0_1, _hce_7), _emal_54563__pinl_3750__flat_40); 
  _dec_rc_( startl__SSA0_1, 1); 
  _emal_54562__pinl_3751__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3751__flat_40 = _fill_( _add_SxS_( startr__SSA0_1, _hce_7), _emal_54562__pinl_3751__flat_40); 
  _dec_rc_( startr__SSA0_1, 1); 
  _emal_54561__esd_30702 = _alloc_( 1, 0, [:int]); 
  _esd_30702 = _fill_( _sub_SxS_( _hce_7, numl__SSA0_1), _emal_54561__esd_30702); 
  _dec_rc_( numl__SSA0_1, 1); 
  _emal_54560__pinl_3752__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3752__flat_194 = _fill_( _eq_SxS_( _esd_30702, 0), _emal_54560__pinl_3752__flat_194); 
  _free_( _esd_30702); 
  l__SSA0_1 = _MAIN::_dup_5142_BlockHoare__Cond_14( _pinl_3752__flat_194, l) ; 
  _emal_54559__esd_30701 = _alloc_( 1, 0, [:int]); 
  _esd_30701 = _fill_( _sub_SxS_( _hce_7, numr__SSA0_1), _emal_54559__esd_30701); 
  _dec_rc_( numr__SSA0_1, 1); 
  _dec_rc_( _hce_7, 1); 
  _emal_54558__pinl_3754__flat_194 = _alloc_( 1, 0, [:int]); 
  _pinl_3754__flat_194 = _fill_( _eq_SxS_( _esd_30701, 0), _emal_54558__pinl_3754__flat_194); 
  _free_( _esd_30701); 
  r__SSA0_1 = _MAIN::_dup_5143_BlockHoare__Cond_13( _pinl_3754__flat_194, r) ; 
  _emal_54557__pinl_3757__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3757__flat_41 = _fill_( _sub_SxS_( r__SSA0_1, l__SSA0_1), _emal_54557__pinl_3757__flat_41); 
  _ctz_9877 = _fill_( _add_SxS_( -128, _pinl_3757__flat_41), _pinl_3757__flat_41); 
  _emal_54555__pinl_3758__flat_198 = _alloc_( 1, 0, [:int]); 
  _pinl_3758__flat_198 = _fill_( _gt_SxS_( _ctz_9877, 0), _emal_54555__pinl_3758__flat_198); 
  _free_( _ctz_9877); 
  if (_pinl_3758__flat_198) 
  { 
    _free_( _pinl_3758__flat_198); 
    argmax__SSA0_3, max__SSA0_3, r__SSA0_2, l__SSA0_2, P__SSA0_2 = _MAIN::_dup_5144_BlockHoare__Loop_24( _flat_65, argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_1, offsetsr__SSA0_1, _pinl_3750__flat_40, _pinl_3751__flat_40, _pinl_3748__flat_41, _pinl_3749__flat_41, q, p, r__SSA0_1, l__SSA0_1, P__SSA0_1) ; 
  }
  else
  { 
    _dec_rc_( offsetsl__SSA0_1, 1); 
    _dec_rc_( offsetsr__SSA0_1, 1); 
    _dec_rc_( _pinl_3751__flat_40, 1); 
    _dec_rc_( _pinl_3750__flat_40, 1); 
    _dec_rc_( _pinl_3749__flat_41, 1); 
    _dec_rc_( _pinl_3748__flat_41, 1); 
    _dec_rc_( p, 1); 
    _dec_rc_( q, 1); 
    _dec_rc_( _flat_65, 1); 
    _free_( _pinl_3758__flat_198); 
  }
  P__SSA0_3 = ( _pinl_3758__flat_198 ? P__SSA0_2 : P__SSA0_1 ); 
  l__SSA0_3 = ( _pinl_3758__flat_198 ? l__SSA0_2 : l__SSA0_1 ); 
  r__SSA0_3 = ( _pinl_3758__flat_198 ? r__SSA0_2 : r__SSA0_1 ); 
  max__SSA0_4 = ( _pinl_3758__flat_198 ? max__SSA0_3 : max__SSA0_2 ); 
  argmax__SSA0_4 = ( _pinl_3758__flat_198 ? argmax__SSA0_3 : argmax__SSA0_2 ); 
  return( argmax__SSA0_4, max__SSA0_4, r__SSA0_3, l__SSA0_3, P__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5143_BlockHoare__Cond_13(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5143_BlockHoare__Cond_13( bool _flat_102 { ,NN } , int r { ,NN } )
/*
 *  _dup_5143_BlockHoare__Cond_13 ::  ---
 */
{ 
  int _emal_54574__pinl_3755__flat_41 { , NN } ; 
  int _pinl_3755__flat_41 { , NN } ; 
  int r__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_102) 
  { 
    _free_( _flat_102); 
    _emal_54574__pinl_3755__flat_41 = _alloc_( 1, 0, [:int]); 
    _pinl_3755__flat_41 = _fill_( _add_SxS_( -64, r), _emal_54574__pinl_3755__flat_41); 
    _dec_rc_( r, 1); 
  }
  else
  { 
    _free_( _flat_102); 
  }
  r__SSA0_3 = ( _flat_102 ? _pinl_3755__flat_41 : r ); 
  return( r__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5142_BlockHoare__Cond_14(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5142_BlockHoare__Cond_14( bool _flat_99 { ,NN } , int l { ,NN } )
/*
 *  _dup_5142_BlockHoare__Cond_14 ::  ---
 */
{ 
  int _emal_54575__pinl_3753__flat_40 { , NN } ; 
  int _pinl_3753__flat_40 { , NN } ; 
  int l__SSA0_3 { , NN } ;  /* declared: int */

  if (_flat_99) 
  { 
    _free_( _flat_99); 
    _emal_54575__pinl_3753__flat_40 = _alloc_( 1, 0, [:int]); 
    _pinl_3753__flat_40 = _fill_( _add_SxS_( 64, l), _emal_54575__pinl_3753__flat_40); 
    _dec_rc_( l, 1); 
  }
  else
  { 
    _free_( _flat_99); 
  }
  l__SSA0_3 = ( _flat_99 ? _pinl_3753__flat_40 : l ); 
  return( l__SSA0_3); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5141_BlockHoare__Cond_16(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5141_BlockHoare__Cond_16( int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int{0} j { ,NN } , bool _flat_91 { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5141_BlockHoare__Cond_16 ::  ---
 */
{ 
  bool _emrb_55270_val { , NN } ; 
  bool _emrb_55269_mem { , NN } ; 
  double[1000000,2] _emlr_55203_P { , NN } ; 
  double[1000000,2] _emlr_55202_P { , NN } ; 
  int{0} _emlr_55201_j { , NN } ; 
  int _emlr_55200_j { , NN } ; 
  int _emal_54579__dlirmov_51677__iveras_51595 { , NN } ; 
  int _emal_54578__dlirmov_51678__iveras_51596 { , NN } ; 
  int _emal_54577__dlirmov_51679__iveras_51597 { , NN } ; 
  int _emal_54576__dlirmov_51680__iveras_51598 { , NN } ; 
  int _dlirmov_51680__iveras_51598 { , NN } ; 
  int _dlirmov_51679__iveras_51597 { , NN } ; 
  int _dlirmov_51678__iveras_51596 { , NN } ; 
  int _dlirmov_51677__iveras_51595 { , NN } ; 
  double[1000000,2] P__SSA0_2 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */

  if (_flat_91) 
  { 
    _inc_rc_( l, 1); 
    _inc_rc_( r, 1); 
    _inc_rc_( num, 1); 
    _inc_rc_( startr, 1); 
    _inc_rc_( startl, 1); 
    _inc_rc_( offsetsr, 1); 
    _inc_rc_( offsetsl, 1); 
    _free_( _flat_91); 
    _emal_54579__dlirmov_51677__iveras_51595 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51677__iveras_51595 = _fill_( 0, _emal_54579__dlirmov_51677__iveras_51595); 
    _emal_54578__dlirmov_51678__iveras_51596 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51678__iveras_51596 = _fill_( 0, _emal_54578__dlirmov_51678__iveras_51596); 
    _emal_54577__dlirmov_51679__iveras_51597 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51679__iveras_51597 = _fill_( 1, _emal_54577__dlirmov_51679__iveras_51597); 
    _emal_54576__dlirmov_51680__iveras_51598 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51680__iveras_51598 = _fill_( 1, _emal_54576__dlirmov_51680__iveras_51598); 
    _emlr_55202_P = _alloc_or_reuse_( 1, _dim_A_( P), _shape_A_( P), P); 
    _emrb_55269_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55270_val = _fill_( _isreused_( _emlr_55202_P, P), _emrb_55269_mem); 
    _emlr_55203_P = _MAIN::_dup_5141_BlockHoare__Cond_16__ReuseCond_7( _emrb_55270_val, _emlr_55202_P, P) ; 
    _emlr_55200_j = _alloc_( 1, _dim_A_( j), _shape_A_( j)); 
    _emlr_55201_j = _fill_( _copy_( j), _emlr_55200_j); 
    P__SSA0_1 = _MAIN::_dup_5140_BlockHoare__Loop_15( _dlirmov_51680__iveras_51598, _dlirmov_51679__iveras_51597, _dlirmov_51678__iveras_51596, _dlirmov_51677__iveras_51595, offsetsl, offsetsr, startl, startr, num, _emlr_55201_j, r, l, _emlr_55203_P) ; 
  }
  else
  { 
    _free_( _flat_91); 
  }
  P__SSA0_2 = ( _flat_91 ? P__SSA0_1 : P ); 
  return( P__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5141_BlockHoare__Cond_16__ReuseCond_7(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5141_BlockHoare__Cond_16__ReuseCond_7( bool _emrb_55265 { ,NN } , double[1000000,2] _emlr_55202_P { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5141_BlockHoare__Cond_16__ReuseCond_7 ::  ---
 */
{ 
  double[1000000,2] _emrb_55268 { , NN } ; 
  double[1000000,2] _dup_55267__emlr_55203_P { , NN } ; 
  double[1000000,2] _dup_55266__emlr_55203_P { , NN } ; 

  if (_emrb_55265) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55265, 1); 
    _dup_55266__emlr_55203_P = _fill_( _noop_( P), _emlr_55202_P); 
  }
  else
  { 
    _dec_rc_( _emrb_55265, 1); 
    _dup_55267__emlr_55203_P = _fill_( _copy_( P), _emlr_55202_P); 
    _dec_rc_( P, 1); 
  }
  _emrb_55268 = ( _emrb_55265 ? _dup_55266__emlr_55203_P : _dup_55267__emlr_55203_P ); 
  return( _emrb_55268); 
}



/****************************************************************************
 * Loop function with Loop Count -1:
 * _MAIN::_dup_5140_BlockHoare__Loop_15(...) [ body ]
 ****************************************************************************/
double[1000000,2] _MAIN::_dup_5140_BlockHoare__Loop_15( int _iveras_51598 { ,NN } , int _iveras_51597 { ,NN } , int _iveras_51596 { ,NN } , int _iveras_51595 { ,NN } , int[64] offsetsl { ,NN } , int[64] offsetsr { ,NN } , int startl { ,NN } , int startr { ,NN } , int num { ,NN } , int j { ,NN } , int r { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5140_BlockHoare__Loop_15 ::  ---
 */
{ 
  double _emdr_55800 { , NN } ; 
  double _emdr_55799 { , NN } ; 
  double _emdr_55798 { , NN } ; 
  int _emal_54635__ivesli_48594 { , NN } ; 
  int _emal_54634__pinl_3507__flat_68 { , NN } ; 
  int _emal_54633__pinl_3510__flat_41 { , NN } ; 
  int _emal_54632__ivesli_48591 { , NN } ; 
  int _emal_54631__pinl_3522__flat_68 { , NN } ; 
  int _emal_54630__pinl_3525__flat_40 { , NN } ; 
  int _emal_54627__ivesli_48590 { , NN } ; 
  double _emal_54626__pinl_3743__flat_149__SSA4_1 { , NN } ; 
  int _emal_54624__ivesli_48586 { , NN } ; 
  double _emal_54623__pinl_3730__flat_149__SSA4_1 { , NN } ; 
  double _emal_54620__pinl_3743__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54618__pinl_3730__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54616__uprf_9778 { , NN } ; 
  int _emal_54615__pinl_9076_z { , NN } ; 
  double _emal_54611_val { , NN } ; 
  double _emal_54610_val { , NN } ; 
  double[1000000,2] _emal_54609__pinl_3535_P__SSA0_1 { , NN } ; 
  double _emal_54608__pinl_3675__flat_149__SSA4_1 { , NN } ; 
  double _emal_54607__pinl_3662__flat_149__SSA4_1 { , NN } ; 
  double _emal_54605__pinl_3675__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54604__pinl_3662__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _emal_54602__uprf_9775 { , NN } ; 
  int _emal_54601__pinl_9096_z { , NN } ; 
  double _emal_54597_val { , NN } ; 
  double _emal_54596_val { , NN } ; 
  double _emal_54594__pinl_3607__flat_149__SSA4_1 { , NN } ; 
  double _emal_54593__pinl_3594__flat_149__SSA4_1 { , NN } ; 
  double _emal_54591__pinl_3607__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54590__pinl_3594__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _emal_54585_val { , NN } ; 
  double _emal_54584_val { , NN } ; 
  int _emal_54582__pinl_3746__flat_122 { , NN } ; 
  int _emal_54581__ctz_9883 { , NN } ; 
  bool _emal_54580__pinl_3747__flat_196 { , NN } ; 
  int _ivesli_48594 { , NN } ; 
  int _ivesli_48591 { , NN } ; 
  int _ivesli_48590 { , NN } ; 
  int _ivesli_48588 { , NN } ; 
  int _ivesli_48587 { , NN } ; 
  int _ivesli_48586 { , NN } ; 
  int _ivesli_48584 { , NN } ; 
  int _ivesli_48583 { , NN } ; 
  int _ivesli_48579 { , NN } ; 
  int _wlidx_47915__pinl_3539_P__SSA0_5 { , NN } ; 
  int _wlidx_47914__pinl_3537_P__SSA0_3 { , NN } ; 
  int _wlidx_47913__pinl_3535_P__SSA0_1 { , NN } ; 
  int[2] _wlsb_12864 { , NN } ; 
  int[2] _wlsb_12836 { , NN } ; 
  int[2] _wlsb_12808 { , NN } ; 
  int _eat_12437 { , NN } ; 
  int _eat_12436 { , NN } ; 
  int _eat_12435 { , NN } ; 
  int _ctz_9883 { , NN } ; 
  double _pinl_3580__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_3594__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3648__flat_1465__SSA5_2 { , NN } ; 
  double _pinl_3662__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3716__flat_1457__SSA5_2 { , NN } ; 
  double _pinl_3730__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA4_1__SSA5_1 { , NN } ; 
  int _uprf_9778 { , NN } ; 
  int _uprf_9775 { , NN } ; 
  double _pinl_3594__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3607__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3662__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3675__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3730__flat_149__SSA4_1 { , NN } ; 
  double _pinl_3743__flat_149__SSA4_1 { , NN } ; 
  int _pinl_9076_z { , NN } ; 
  int _pinl_9096_z { , NN } ; 
  int _pinl_3507__flat_68 { , NN } ; 
  int _pinl_3510__flat_41 { , NN } ; 
  int _pinl_3522__flat_68 { , NN } ; 
  int _pinl_3525__flat_40 { , NN } ; 
  double _pinl_3716__flat_1457 { , NN } ; 
  int _pinl_3681__eat_766 { , NN } ; 
  double _pinl_3648__flat_1465 { , NN } ; 
  int _pinl_3613__eat_766 { , NN } ; 
  double _pinl_3580__flat_1465 { , NN } ; 
  int _pinl_3545__eat_766 { , NN } ; 
  double[1000000,2] _pinl_3539_P__SSA0_5 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3537_P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] _pinl_3535_P__SSA0_1 { , NN } ;  /* declared: double[1000000,2] */
  int _pinl_3746__flat_122 { , NN } ; 
  bool _pinl_3747__flat_196 { , NN } ; 
  double[1000000,2] P__SSA0_4 { , NN } ;  /* declared: double[1000000,2] */
  double[1000000,2] P__SSA0_3 { , NN } ;  /* declared: double[1000000,2] */

  _emal_54635__ivesli_48594 = _alloc_( 1, 0, [:int]); 
  _ivesli_48594 = _fill_( _add_SxS_( startr, j), _emal_54635__ivesli_48594); 
  _emal_54634__pinl_3507__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3507__flat_68 = _fill_( _idx_sel_( _ivesli_48594, offsetsr), _emal_54634__pinl_3507__flat_68); 
  _free_( _ivesli_48594); 
  _emal_54633__pinl_3510__flat_41 = _alloc_( 1, 0, [:int]); 
  _pinl_3510__flat_41 = _fill_( _sub_SxS_( r, _pinl_3507__flat_68), _emal_54633__pinl_3510__flat_41); 
  _emal_54632__ivesli_48591 = _alloc_( 1, 0, [:int]); 
  _ivesli_48591 = _fill_( _add_SxS_( startl, j), _emal_54632__ivesli_48591); 
  _emal_54631__pinl_3522__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_3522__flat_68 = _fill_( _idx_sel_( _ivesli_48591, offsetsl), _emal_54631__pinl_3522__flat_68); 
  _free_( _ivesli_48591); 
  _emal_54630__pinl_3525__flat_40 = _alloc_( 1, 0, [:int]); 
  _pinl_3525__flat_40 = _fill_( _add_SxS_( _pinl_3522__flat_68, l), _emal_54630__pinl_3525__flat_40); 
  _ivesli_48587 = _fill_( _sub_SxS_( _pinl_3507__flat_68, r), _pinl_3507__flat_68); 
  _ivesli_48588 = _fill_( _neg_S_( _ivesli_48587), _ivesli_48587); 
  _emal_54627__ivesli_48590 = _alloc_( 1, 0, [:int]); 
  _ivesli_48590 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48588, _iveras_51595), _emal_54627__ivesli_48590); 
  _emal_54626__pinl_3743__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48590, P), _emal_54626__pinl_3743__flat_149__SSA4_1); 
  _ivesli_48584 = _fill_( _add_SxS_( l, _pinl_3522__flat_68), _pinl_3522__flat_68); 
  _emal_54624__ivesli_48586 = _alloc_( 1, 0, [:int]); 
  _ivesli_48586 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48584, _iveras_51596), _emal_54624__ivesli_48586); 
  _emal_54623__pinl_3730__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48586, P), _emal_54623__pinl_3730__flat_149__SSA4_1); 
  _pinl_3716__flat_1457 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA4_1, _pinl_3743__flat_149__SSA4_1), _pinl_3730__flat_149__SSA4_1); 
  _free_( _pinl_3743__flat_149__SSA4_1); 
  _ivesli_48583 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48588, _iveras_51597), _ivesli_48588); 
  _emal_54620__pinl_3743__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3743__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48583, P), _emal_54620__pinl_3743__flat_149__SSA4_1__SSA5_1); 
  _ivesli_48579 = _fill_( _idxs2offset_( [ 1000000, 2 ], _ivesli_48584, _iveras_51598), _ivesli_48584); 
  _emal_54618__pinl_3730__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3730__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48579, P), _emal_54618__pinl_3730__flat_149__SSA4_1__SSA5_1); 
  _pinl_3716__flat_1457__SSA5_2 = _fill_( _add_SxS_( _pinl_3730__flat_149__SSA4_1__SSA5_1, _pinl_3743__flat_149__SSA4_1__SSA5_1), _pinl_3730__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3743__flat_149__SSA4_1__SSA5_1); 
  _emal_54616__uprf_9778 = _alloc_( 1, 0, [:int]); 
  _uprf_9778 = _fill_( _add_SxS_( _pinl_3525__flat_40, 1), _emal_54616__uprf_9778); 
  _emal_54615__pinl_9076_z = _alloc_( 1, 0, [:int]); 
  _pinl_9076_z = _fill_( _max_SxS_( _pinl_3525__flat_40, _uprf_9778), _emal_54615__pinl_9076_z); 
  _emal_54609__pinl_3535_P__SSA0_1 = P; 
  _pinl_3681__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12435 = _alloc_( 1, 0, [:int]); 
  _wlidx_47913__pinl_3535_P__SSA0_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3535_P__SSA0_1 = with2 (_wlsb_12864=[_pinl_3681__eat_766, _eat_12435] (IDXS:_wlidx_47913__pinl_3535_P__SSA0_1))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54610_val = _wl_assign_( _pinl_3716__flat_1457, _emal_54609__pinl_3535_P__SSA0_1, _wlsb_12864, _wlidx_47913__pinl_3535_P__SSA0_1); 
        } : _emal_54610_val ; ,
      op_1 =
        { 
          _emal_54611_val = _wl_assign_( _pinl_3716__flat_1457__SSA5_2, _emal_54609__pinl_3535_P__SSA0_1, _wlsb_12864, _wlidx_47913__pinl_3535_P__SSA0_1); 
        } : _emal_54611_val ; ,
      op_2 =
        { 
          _emdr_55798 = _noop_( _wlsb_12864); 
        } : _emdr_55798 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_9778, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_9778), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_9778, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_9778), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9076_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9076_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( P , _emal_54609__pinl_3535_P__SSA0_1 ,IDX(_wlidx_47913__pinl_3535_P__SSA0_1)); 
  _free_( _eat_12435); 
  _free_( _pinl_3681__eat_766); 
  _free_( _pinl_3716__flat_1457); 
  _free_( _pinl_3716__flat_1457__SSA5_2); 
  _free_( _wlidx_47913__pinl_3535_P__SSA0_1); 
  _emal_54608__pinl_3675__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48590, _pinl_3535_P__SSA0_1), _emal_54608__pinl_3675__flat_149__SSA4_1); 
  _emal_54607__pinl_3662__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48586, _pinl_3535_P__SSA0_1), _emal_54607__pinl_3662__flat_149__SSA4_1); 
  _pinl_3648__flat_1465 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA4_1, _pinl_3675__flat_149__SSA4_1), _pinl_3662__flat_149__SSA4_1); 
  _free_( _pinl_3675__flat_149__SSA4_1); 
  _emal_54605__pinl_3675__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3675__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48583, _pinl_3535_P__SSA0_1), _emal_54605__pinl_3675__flat_149__SSA4_1__SSA5_1); 
  _emal_54604__pinl_3662__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3662__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48579, _pinl_3535_P__SSA0_1), _emal_54604__pinl_3662__flat_149__SSA4_1__SSA5_1); 
  _pinl_3648__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_3662__flat_149__SSA4_1__SSA5_1, _pinl_3675__flat_149__SSA4_1__SSA5_1), _pinl_3662__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3675__flat_149__SSA4_1__SSA5_1); 
  _emal_54602__uprf_9775 = _alloc_( 1, 0, [:int]); 
  _uprf_9775 = _fill_( _add_SxS_( _pinl_3510__flat_41, 1), _emal_54602__uprf_9775); 
  _emal_54601__pinl_9096_z = _alloc_( 1, 0, [:int]); 
  _pinl_9096_z = _fill_( _max_SxS_( _pinl_3510__flat_41, _uprf_9775), _emal_54601__pinl_9096_z); 
  _pinl_3613__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12436 = _alloc_( 1, 0, [:int]); 
  _wlidx_47914__pinl_3537_P__SSA0_3 = _alloc_( 1, 0, [:int]); 
  _pinl_3537_P__SSA0_3 = with2 (_wlsb_12836=[_pinl_3613__eat_766, _eat_12436] (IDXS:_wlidx_47914__pinl_3537_P__SSA0_3))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54596_val = _wl_assign_( _pinl_3648__flat_1465, _pinl_3535_P__SSA0_1, _wlsb_12836, _wlidx_47914__pinl_3537_P__SSA0_3); 
        } : _emal_54596_val ; ,
      op_1 =
        { 
          _emal_54597_val = _wl_assign_( _pinl_3648__flat_1465__SSA5_2, _pinl_3535_P__SSA0_1, _wlsb_12836, _wlidx_47914__pinl_3537_P__SSA0_3); 
        } : _emal_54597_val ; ,
      op_2 =
        { 
          _emdr_55799 = _noop_( _wlsb_12836); 
        } : _emdr_55799 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3510__flat_41, 0 ] -> [ _uprf_9775, 1 ]
       */
      (_pinl_3510__flat_41 => _uprf_9775), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3510__flat_41, 1 ] -> [ _uprf_9775, 2 ]
       */
      (_pinl_3510__flat_41 => _uprf_9775), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3510__flat_41, 2 ]
       */
      (0 => _pinl_3510__flat_41), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9096_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9096_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3535_P__SSA0_1 , _pinl_3535_P__SSA0_1 ,IDX(_wlidx_47914__pinl_3537_P__SSA0_3)); 
  _free_( _pinl_9096_z); 
  _free_( _uprf_9775); 
  _free_( _pinl_3510__flat_41); 
  _free_( _eat_12436); 
  _free_( _pinl_3613__eat_766); 
  _free_( _pinl_3648__flat_1465); 
  _free_( _pinl_3648__flat_1465__SSA5_2); 
  _free_( _wlidx_47914__pinl_3537_P__SSA0_3); 
  _emal_54594__pinl_3607__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48590, _pinl_3537_P__SSA0_3), _emal_54594__pinl_3607__flat_149__SSA4_1); 
  _free_( _ivesli_48590); 
  _emal_54593__pinl_3594__flat_149__SSA4_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA4_1 = _fill_( _idx_sel_( _ivesli_48586, _pinl_3537_P__SSA0_3), _emal_54593__pinl_3594__flat_149__SSA4_1); 
  _free_( _ivesli_48586); 
  _pinl_3580__flat_1465 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA4_1, _pinl_3607__flat_149__SSA4_1), _pinl_3594__flat_149__SSA4_1); 
  _free_( _pinl_3607__flat_149__SSA4_1); 
  _emal_54591__pinl_3607__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3607__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48583, _pinl_3537_P__SSA0_3), _emal_54591__pinl_3607__flat_149__SSA4_1__SSA5_1); 
  _free_( _ivesli_48583); 
  _emal_54590__pinl_3594__flat_149__SSA4_1__SSA5_1 = _alloc_( 1, 0, [:int]); 
  _pinl_3594__flat_149__SSA4_1__SSA5_1 = _fill_( _idx_sel_( _ivesli_48579, _pinl_3537_P__SSA0_3), _emal_54590__pinl_3594__flat_149__SSA4_1__SSA5_1); 
  _free_( _ivesli_48579); 
  _pinl_3580__flat_1465__SSA5_2 = _fill_( _sub_SxS_( _pinl_3594__flat_149__SSA4_1__SSA5_1, _pinl_3607__flat_149__SSA4_1__SSA5_1), _pinl_3594__flat_149__SSA4_1__SSA5_1); 
  _free_( _pinl_3607__flat_149__SSA4_1__SSA5_1); 
  _pinl_3545__eat_766 = _alloc_( 1, 0, [:int]); 
  _eat_12437 = _alloc_( 1, 0, [:int]); 
  _wlidx_47915__pinl_3539_P__SSA0_5 = _alloc_( 1, 0, [:int]); 
  _pinl_3539_P__SSA0_5 = with2 (_wlsb_12808=[_pinl_3545__eat_766, _eat_12437] (IDXS:_wlidx_47915__pinl_3539_P__SSA0_5))
      /********** operators: **********/
      op_0 =
        { 
          _emal_54584_val = _wl_assign_( _pinl_3580__flat_1465, _pinl_3537_P__SSA0_3, _wlsb_12808, _wlidx_47915__pinl_3539_P__SSA0_5); 
        } : _emal_54584_val ; ,
      op_1 =
        { 
          _emal_54585_val = _wl_assign_( _pinl_3580__flat_1465__SSA5_2, _pinl_3537_P__SSA0_3, _wlsb_12808, _wlidx_47915__pinl_3539_P__SSA0_5); 
        } : _emal_54585_val ; ,
      op_2 =
        { 
          _emdr_55800 = _noop_( _wlsb_12808); 
        } : _emdr_55800 ; 
      /********** (var.) segment 0: **********
       * index domain: [ _pinl_3525__flat_40, 0 ] -> [ _uprf_9778, 1 ]
       */
      (_pinl_3525__flat_40 => _uprf_9778), step0[0] 1
        (0 --> 1):
          (0 -> 1), step0[1] 1
            (0 --> 1): op_0
      /********** (var.) segment 1: **********
       * index domain: [ _pinl_3525__flat_40, 1 ] -> [ _uprf_9778, 2 ]
       */
      (_pinl_3525__flat_40 => _uprf_9778), step0[0] 1
        (0 --> 1):
          (1 -> 2), step0[1] 1
            (0 --> 1): op_1
      /********** (var.) segment 2: **********
       * index domain: [ 0, 0 ] -> [ _pinl_3525__flat_40, 2 ]
       */
      (0 => _pinl_3525__flat_40), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** (var.) segment 3: **********
       * index domain: [ _pinl_9076_z, 0 ] -> [ 1000000, 2 ]
       */
      (_pinl_9076_z => 1000000), step0[0] 1
        (0 --> 1):
          (0 -> 2), step0[1] 1
            (0 --> 1): op_2
      /********** conexpr: **********/
      modarray( _pinl_3537_P__SSA0_3 , _pinl_3537_P__SSA0_3 ,IDX(_wlidx_47915__pinl_3539_P__SSA0_5)); 
  _free_( _pinl_9076_z); 
  _free_( _uprf_9778); 
  _free_( _pinl_3525__flat_40); 
  _free_( _eat_12437); 
  _free_( _pinl_3545__eat_766); 
  _free_( _pinl_3580__flat_1465); 
  _free_( _pinl_3580__flat_1465__SSA5_2); 
  _free_( _wlidx_47915__pinl_3539_P__SSA0_5); 
  _emal_54582__pinl_3746__flat_122 = j; 
  _pinl_3746__flat_122 = _fill_( _add_SxS_( 1, j), _emal_54582__pinl_3746__flat_122); 
  _emal_54581__ctz_9883 = _alloc_( 1, 0, [:int]); 
  _ctz_9883 = _fill_( _sub_SxS_( _pinl_3746__flat_122, num), _emal_54581__ctz_9883); 
  _emal_54580__pinl_3747__flat_196 = _alloc_( 1, 0, [:int]); 
  _pinl_3747__flat_196 = _fill_( _lt_SxS_( _ctz_9883, 0), _emal_54580__pinl_3747__flat_196); 
  _free_( _ctz_9883); 
  if (_pinl_3747__flat_196) 
  { 
    _free_( _pinl_3747__flat_196); 
    P__SSA0_3 = _MAIN::_dup_5140_BlockHoare__Loop_15( _iveras_51598, _iveras_51597, _iveras_51596, _iveras_51595, offsetsl, offsetsr, startl, startr, num, _pinl_3746__flat_122, r, l, _pinl_3539_P__SSA0_5) ; 
  }
  else
  { 
    _free_( _pinl_3746__flat_122); 
    _dec_rc_( l, 1); 
    _dec_rc_( r, 1); 
    _dec_rc_( num, 1); 
    _dec_rc_( startr, 1); 
    _dec_rc_( startl, 1); 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _iveras_51595, 1); 
    _dec_rc_( _iveras_51596, 1); 
    _dec_rc_( _iveras_51597, 1); 
    _dec_rc_( _iveras_51598, 1); 
    _free_( _pinl_3747__flat_196); 
  }
  P__SSA0_4 = ( _pinl_3747__flat_196 ? P__SSA0_3 : _pinl_3539_P__SSA0_5 ); 
  return( P__SSA0_4); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5139_BlockHoare__Cond_17(...) [ body ]
 ****************************************************************************/
int _MAIN::_dup_5139_BlockHoare__Cond_17( int numl { ,NN } , int numr { ,NN } , bool _flat_90 { ,NN } )
/*
 *  _dup_5139_BlockHoare__Cond_17 ::  ---
 */
{ 
  int _hce_7__SSA0_2 { , NN } ; 

  if (_flat_90) 
  { 
    _inc_rc_( numl, 1); 
    _free_( _flat_90); 
  }
  else
  { 
    _inc_rc_( numr, 1); 
    _free_( _flat_90); 
  }
  _hce_7__SSA0_2 = ( _flat_90 ? numl : numr ); 
  return( _hce_7__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5138_BlockHoare__Cond_20(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5138_BlockHoare__Cond_20( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsr { ,NN } , int startr { ,NN } , int numr { ,NN } , bool _flat_77 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int r { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5138_BlockHoare__Cond_20 ::  ---
 */
{ 
  bool _emrb_55263_val { , NN } ; 
  bool _emrb_55262_mem { , NN } ; 
  int{0} _emlr_55209_startr__SSA0_1 { , NN } ; 
  int _emlr_55208_startr__SSA0_1 { , NN } ; 
  int _emlr_55207_numr { , NN } ; 
  int _emlr_55206_numr { , NN } ; 
  int[64] _emlr_55205_offsetsr { , NN } ; 
  int[64] _emlr_55204_offsetsr { , NN } ; 
  int _emal_54643_startr__SSA0_1 { , NN } ; 
  int _emal_54642__ivesplit_27335 { , NN } ; 
  double _emal_54641__pinl_9484__ls_9384 { , NN } ; 
  double _emal_54640__pinl_9485__ls_9385 { , NN } ; 
  double _emal_54639__pinl_9480__ls_9374 { , NN } ; 
  double _emal_54638__pinl_9481__ls_9375 { , NN } ; 
  int _emal_54637__dlirmov_51675__iveras_51555 { , NN } ; 
  int _emal_54636__dlirmov_51676__iveras_51556 { , NN } ; 
  int _dlirmov_51676__iveras_51556 { , NN } ; 
  int _dlirmov_51675__iveras_51555 { , NN } ; 
  int{1} _ivesplit_27335 { , NN } ; 
  double _pinl_9485__ls_9385 { , NN } ; 
  double _pinl_9484__ls_9384 { , NN } ; 
  double _pinl_9481__ls_9375 { , NN } ; 
  double _pinl_9480__ls_9374 { , NN } ; 
  int _pinl_9477_numr__SSA0_1 { , NN } ; 
  int[64] _pinl_9476_offsetsr__SSA0_1 { , NN } ; 
  double _pinl_9475_max__SSA0_1 { , NN } ; 
  double[2] _pinl_9474_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsr__SSA0_2 { , NN } ; 
  int startr__SSA0_2 { , NN } ; 
  int numr__SSA0_2 { , NN } ; 
  int{0} startr__SSA0_1 { , NN } ; 

  if (_flat_77) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( r, 1); 
    _dec_rc_( startr, 1); 
    _free_( _flat_77); 
    _emal_54643_startr__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startr__SSA0_1 = _fill_( 0, _emal_54643_startr__SSA0_1); 
    _emal_54642__ivesplit_27335 = _alloc_( 1, 0, [:int]); 
    _ivesplit_27335 = _fill_( 1, _emal_54642__ivesplit_27335); 
    _emal_54641__pinl_9484__ls_9384 = _alloc_( 1, 0, [:int]); 
    _pinl_9484__ls_9384 = _fill_( _idx_sel_( _ivesplit_27335, q), _emal_54641__pinl_9484__ls_9384); 
    _emal_54640__pinl_9485__ls_9385 = _alloc_( 1, 0, [:int]); 
    _pinl_9485__ls_9385 = _fill_( _idx_sel_( startr__SSA0_1, q), _emal_54640__pinl_9485__ls_9385); 
    _emal_54639__pinl_9480__ls_9374 = _alloc_( 1, 0, [:int]); 
    _pinl_9480__ls_9374 = _fill_( _idx_sel_( _ivesplit_27335, p), _emal_54639__pinl_9480__ls_9374); 
    _free_( _ivesplit_27335); 
    _emal_54638__pinl_9481__ls_9375 = _alloc_( 1, 0, [:int]); 
    _pinl_9481__ls_9375 = _fill_( _idx_sel_( startr__SSA0_1, p), _emal_54638__pinl_9481__ls_9375); 
    _emal_54637__dlirmov_51675__iveras_51555 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51675__iveras_51555 = _fill_( 0, _emal_54637__dlirmov_51675__iveras_51555); 
    _emal_54636__dlirmov_51676__iveras_51556 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51676__iveras_51556 = _fill_( 1, _emal_54636__dlirmov_51676__iveras_51556); 
    _emlr_55208_startr__SSA0_1 = _alloc_( 1, _dim_A_( startr__SSA0_1), _shape_A_( startr__SSA0_1)); 
    _emlr_55209_startr__SSA0_1 = _fill_( _copy_( startr__SSA0_1), _emlr_55208_startr__SSA0_1); 
    _emlr_55206_numr = _alloc_( 1, _dim_A_( numr), _shape_A_( numr)); 
    _emlr_55207_numr = _fill_( _copy_( numr), _emlr_55206_numr); 
    _dec_rc_( numr, 1); 
    _emlr_55204_offsetsr = _alloc_or_reuse_( 1, _dim_A_( offsetsr), _shape_A_( offsetsr), offsetsr); 
    _emrb_55262_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55263_val = _fill_( _isreused_( _emlr_55204_offsetsr, offsetsr), _emrb_55262_mem); 
    _emlr_55205_offsetsr = _MAIN::_dup_5138_BlockHoare__Cond_20__ReuseCond_6( _emrb_55263_val, _emlr_55204_offsetsr, offsetsr) ; 
    _pinl_9474_argmax__SSA0_1, _pinl_9475_max__SSA0_1, _pinl_9476_offsetsr__SSA0_1, _pinl_9477_numr__SSA0_1 = _MAIN::_dup_9487_BlockHoare__Loop_18( _dlirmov_51676__iveras_51556, _dlirmov_51675__iveras_51555, argmax, max, _emlr_55205_offsetsr, _emlr_55207_numr, _emlr_55209_startr__SSA0_1, _pinl_9485__ls_9385, _pinl_9484__ls_9384, _pinl_9481__ls_9375, _pinl_9480__ls_9374, r, P) ; 
  }
  else
  { 
    _free_( _flat_77); 
  }
  numr__SSA0_2 = ( _flat_77 ? _pinl_9477_numr__SSA0_1 : numr ); 
  startr__SSA0_2 = ( _flat_77 ? startr__SSA0_1 : startr ); 
  offsetsr__SSA0_2 = ( _flat_77 ? _pinl_9476_offsetsr__SSA0_1 : offsetsr ); 
  max__SSA0_2 = ( _flat_77 ? _pinl_9475_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_77 ? _pinl_9474_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsr__SSA0_2, startr__SSA0_2, numr__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5138_BlockHoare__Cond_20__ReuseCond_6(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5138_BlockHoare__Cond_20__ReuseCond_6( bool _emrb_55258 { ,NN } , int[64] _emlr_55204_offsetsr { ,NN } , int[64] offsetsr { ,NN } )
/*
 *  _dup_5138_BlockHoare__Cond_20__ReuseCond_6 ::  ---
 */
{ 
  int[64] _emrb_55261 { , NN } ; 
  int[64] _dup_55260__emlr_55205_offsetsr { , NN } ; 
  int[64] _dup_55259__emlr_55205_offsetsr { , NN } ; 

  if (_emrb_55258) 
  { 
    _dec_rc_( offsetsr, 1); 
    _dec_rc_( _emrb_55258, 1); 
    _dup_55259__emlr_55205_offsetsr = _fill_( _noop_( offsetsr), _emlr_55204_offsetsr); 
  }
  else
  { 
    _dec_rc_( _emrb_55258, 1); 
    _dup_55260__emlr_55205_offsetsr = _fill_( _copy_( offsetsr), _emlr_55204_offsetsr); 
    _dec_rc_( offsetsr, 1); 
  }
  _emrb_55261 = ( _emrb_55258 ? _dup_55259__emlr_55205_offsetsr : _dup_55260__emlr_55205_offsetsr ); 
  return( _emrb_55261); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5134_BlockHoare__Cond_23(...) [ body ]
 ****************************************************************************/
double[2], double, int[64], int, int _MAIN::_dup_5134_BlockHoare__Cond_23( double[2] argmax { ,NN } , double max { ,NN } , int[64] offsetsl { ,NN } , int startl { ,NN } , int numl { ,NN } , bool _flat_64 { ,NN } , double[2] q { ,NN } , double[2] p { ,NN } , int l { ,NN } , double[1000000,2] P { ,NN } )
/*
 *  _dup_5134_BlockHoare__Cond_23 ::  ---
 */
{ 
  bool _emrb_55256_val { , NN } ; 
  bool _emrb_55255_mem { , NN } ; 
  int{0} _emlr_55215_startl__SSA0_1 { , NN } ; 
  int _emlr_55214_startl__SSA0_1 { , NN } ; 
  int _emlr_55213_numl { , NN } ; 
  int _emlr_55212_numl { , NN } ; 
  int[64] _emlr_55211_offsetsl { , NN } ; 
  int[64] _emlr_55210_offsetsl { , NN } ; 
  int _emal_54651_startl__SSA0_1 { , NN } ; 
  int _emal_54650__ivesplit_27343 { , NN } ; 
  double _emal_54649__pinl_9470__ls_9404 { , NN } ; 
  double _emal_54648__pinl_9471__ls_9405 { , NN } ; 
  double _emal_54647__pinl_9466__ls_9394 { , NN } ; 
  double _emal_54646__pinl_9467__ls_9395 { , NN } ; 
  int _emal_54645__dlirmov_51673__iveras_51557 { , NN } ; 
  int _emal_54644__dlirmov_51674__iveras_51558 { , NN } ; 
  int _dlirmov_51674__iveras_51558 { , NN } ; 
  int _dlirmov_51673__iveras_51557 { , NN } ; 
  int{1} _ivesplit_27343 { , NN } ; 
  double _pinl_9471__ls_9405 { , NN } ; 
  double _pinl_9470__ls_9404 { , NN } ; 
  double _pinl_9467__ls_9395 { , NN } ; 
  double _pinl_9466__ls_9394 { , NN } ; 
  int _pinl_9463_numl__SSA0_1 { , NN } ; 
  int[64] _pinl_9462_offsetsl__SSA0_1 { , NN } ; 
  double _pinl_9461_max__SSA0_1 { , NN } ; 
  double[2] _pinl_9460_argmax__SSA0_1 { , NN } ; 
  double[2] argmax__SSA0_2 { , NN } ; 
  double max__SSA0_2 { , NN } ; 
  int[64] offsetsl__SSA0_2 { , NN } ; 
  int startl__SSA0_2 { , NN } ; 
  int numl__SSA0_2 { , NN } ; 
  int{0} startl__SSA0_1 { , NN } ; 

  if (_flat_64) 
  { 
    _inc_rc_( P, 1); 
    _inc_rc_( l, 1); 
    _dec_rc_( startl, 1); 
    _free_( _flat_64); 
    _emal_54651_startl__SSA0_1 = _alloc_( 1, 0, [:int]); 
    startl__SSA0_1 = _fill_( 0, _emal_54651_startl__SSA0_1); 
    _emal_54650__ivesplit_27343 = _alloc_( 1, 0, [:int]); 
    _ivesplit_27343 = _fill_( 1, _emal_54650__ivesplit_27343); 
    _emal_54649__pinl_9470__ls_9404 = _alloc_( 1, 0, [:int]); 
    _pinl_9470__ls_9404 = _fill_( _idx_sel_( _ivesplit_27343, q), _emal_54649__pinl_9470__ls_9404); 
    _emal_54648__pinl_9471__ls_9405 = _alloc_( 1, 0, [:int]); 
    _pinl_9471__ls_9405 = _fill_( _idx_sel_( startl__SSA0_1, q), _emal_54648__pinl_9471__ls_9405); 
    _emal_54647__pinl_9466__ls_9394 = _alloc_( 1, 0, [:int]); 
    _pinl_9466__ls_9394 = _fill_( _idx_sel_( _ivesplit_27343, p), _emal_54647__pinl_9466__ls_9394); 
    _free_( _ivesplit_27343); 
    _emal_54646__pinl_9467__ls_9395 = _alloc_( 1, 0, [:int]); 
    _pinl_9467__ls_9395 = _fill_( _idx_sel_( startl__SSA0_1, p), _emal_54646__pinl_9467__ls_9395); 
    _emal_54645__dlirmov_51673__iveras_51557 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51673__iveras_51557 = _fill_( 0, _emal_54645__dlirmov_51673__iveras_51557); 
    _emal_54644__dlirmov_51674__iveras_51558 = _alloc_( 1, 0, [:int]); 
    _dlirmov_51674__iveras_51558 = _fill_( 1, _emal_54644__dlirmov_51674__iveras_51558); 
    _emlr_55214_startl__SSA0_1 = _alloc_( 1, _dim_A_( startl__SSA0_1), _shape_A_( startl__SSA0_1)); 
    _emlr_55215_startl__SSA0_1 = _fill_( _copy_( startl__SSA0_1), _emlr_55214_startl__SSA0_1); 
    _emlr_55212_numl = _alloc_( 1, _dim_A_( numl), _shape_A_( numl)); 
    _emlr_55213_numl = _fill_( _copy_( numl), _emlr_55212_numl); 
    _dec_rc_( numl, 1); 
    _emlr_55210_offsetsl = _alloc_or_reuse_( 1, _dim_A_( offsetsl), _shape_A_( offsetsl), offsetsl); 
    _emrb_55255_mem = _alloc_( 1, 0, [:int]); 
    _emrb_55256_val = _fill_( _isreused_( _emlr_55210_offsetsl, offsetsl), _emrb_55255_mem); 
    _emlr_55211_offsetsl = _MAIN::_dup_5134_BlockHoare__Cond_23__ReuseCond_5( _emrb_55256_val, _emlr_55210_offsetsl, offsetsl) ; 
    _pinl_9460_argmax__SSA0_1, _pinl_9461_max__SSA0_1, _pinl_9462_offsetsl__SSA0_1, _pinl_9463_numl__SSA0_1 = _MAIN::_dup_9473_BlockHoare__Loop_21( _dlirmov_51674__iveras_51558, _dlirmov_51673__iveras_51557, argmax, max, _emlr_55211_offsetsl, _emlr_55213_numl, _emlr_55215_startl__SSA0_1, _pinl_9471__ls_9405, _pinl_9470__ls_9404, _pinl_9467__ls_9395, _pinl_9466__ls_9394, l, P) ; 
  }
  else
  { 
    _free_( _flat_64); 
  }
  numl__SSA0_2 = ( _flat_64 ? _pinl_9463_numl__SSA0_1 : numl ); 
  startl__SSA0_2 = ( _flat_64 ? startl__SSA0_1 : startl ); 
  offsetsl__SSA0_2 = ( _flat_64 ? _pinl_9462_offsetsl__SSA0_1 : offsetsl ); 
  max__SSA0_2 = ( _flat_64 ? _pinl_9461_max__SSA0_1 : max ); 
  argmax__SSA0_2 = ( _flat_64 ? _pinl_9460_argmax__SSA0_1 : argmax ); 
  return( argmax__SSA0_2, max__SSA0_2, offsetsl__SSA0_2, startl__SSA0_2, numl__SSA0_2); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::_dup_5134_BlockHoare__Cond_23__ReuseCond_5(...) [ body ]
 ****************************************************************************/
int[64] _MAIN::_dup_5134_BlockHoare__Cond_23__ReuseCond_5( bool _emrb_55251 { ,NN } , int[64] _emlr_55210_offsetsl { ,NN } , int[64] offsetsl { ,NN } )
/*
 *  _dup_5134_BlockHoare__Cond_23__ReuseCond_5 ::  ---
 */
{ 
  int[64] _emrb_55254 { , NN } ; 
  int[64] _dup_55253__emlr_55211_offsetsl { , NN } ; 
  int[64] _dup_55252__emlr_55211_offsetsl { , NN } ; 

  if (_emrb_55251) 
  { 
    _dec_rc_( offsetsl, 1); 
    _dec_rc_( _emrb_55251, 1); 
    _dup_55252__emlr_55211_offsetsl = _fill_( _noop_( offsetsl), _emlr_55210_offsetsl); 
  }
  else
  { 
    _dec_rc_( _emrb_55251, 1); 
    _dup_55253__emlr_55211_offsetsl = _fill_( _copy_( offsetsl), _emlr_55210_offsetsl); 
    _dec_rc_( offsetsl, 1); 
  }
  _emrb_55254 = ( _emrb_55251 ? _dup_55252__emlr_55211_offsetsl : _dup_55253__emlr_55211_offsetsl ); 
  return( _emrb_55254); 
}



/****************************************************************************
 * _MAIN::main(...) [ body ]
 ****************************************************************************/
hidden *, hidden *, hidden *, hidden *, hidden *, hidden *, int{0} _MAIN::main( hidden *_rso_661_stdin { ,NN } , hidden *_rso_660_TheBenchmarkObject { ,NN } , hidden *_rso_659_TheMTClock { ,NN } , hidden *_rso_658_TheTerminal { ,NN } , hidden *_rso_657_stdout { ,NN } , hidden *_rso_656_TheWorld { ,NN } )
/*
 *  main ::  ---
 */
{ 
  bool _emrb_55249_val { , NN } ; 
  bool _emrb_55248_mem { , NN } ; 
  int _emal_54665__isaa_27825__rso_656_TheWorld { , NN } ; 
  int[.] _emal_54664__isaa_27865_P { , NN } ; 
  int _emal_54663__ivesli_48598 { , NN } ; 
  int _emal_54662__pinl_5426__flat_68 { , NN } ; 
  int[2] _emal_54660__flat_608 { , NN } ; 
  double[.,.] _emal_54659_P__SSA0_1 { , NN } ; 
  int _emal_54658__flat_624 { , NN } ; 
  int _emal_54657__flat_623 { , NN } ; 
  char[6] _emal_54656__flat_616 { , NN } ; 
  int[2] _emal_54655__isaa_27888_hull { , NN } ; 
  double _emal_54654__pinl_5431__flat_96 { , NN } ; 
  int _emal_54653__flat_646 { , NN } ; 
  char[18] _emal_54652__flat_627 { , NN } ; 
  int _ivesli_48598 { , NN } ; 
  int[2] _isaa_27888_hull { , NN } ; 
  int[.] _isaa_27865_P { , NN } ; 
  int{0} _isaa_27825__rso_656_TheWorld { , NN } ; 
  int _pinl_5426__flat_68 { , NN } ; 
  int _pinl_5429__flat_43 { , NN } ; 
  double _pinl_5431__flat_96 { , NN } ; 
  hidden _rso_657_stdout__SSA0_3 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_658_TheTerminal__SSA0_3 { , NN } ;  /* declared: Terminal::Terminal */
  hidden i_bench__SSA0_3 { , NN } ; 
  hidden _rso_660_TheBenchmarkObject__SSA0_5 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden _rso_657_stdout__SSA0_2 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_658_TheTerminal__SSA0_2 { , NN } ;  /* declared: Terminal::Terminal */
  hidden i_bench__SSA0_2 { , NN } ; 
  hidden _rso_659_TheMTClock__SSA0_3 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_660_TheBenchmarkObject__SSA0_4 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden i_bench__SSA0_1 { , NN } ; 
  hidden _rso_659_TheMTClock__SSA0_2 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_660_TheBenchmarkObject__SSA0_3 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden _rso_660_TheBenchmarkObject__SSA0_2 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  double[.,.] P__SSA0_1 { , NN } ; 
  hidden _rso_661_stdin__SSA0_2 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_661_stdin__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_657_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_658_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_659_TheMTClock__SSA0_1 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_660_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden _rso_656_TheWorld__SSA0_1 { , NN } ;  /* declared: World::World */
  enclosed(String::string) _flat_626 { , NN } ; 
  char[18]{T,h...} _flat_627 { , NN } ; 
  int{17} _flat_646 { , NN } ; 
  enclosed(String::string) unit { , NN } ; 
  double time { , NN } ; 
  double[.,.] hull { , NN } ; 
  hidden i_bench { , NN } ; 
  enclosed(String::string) _flat_615 { , NN } ; 
  char[6]{b,e...} _flat_616 { , NN } ; 
  int{5} _flat_623 { , NN } ; 
  int{1} _flat_624 { , NN } ; 
  int[2] _flat_608 { , NN } ; 
  double[*] P { , NN } ; 

  _emal_54665__isaa_27825__rso_656_TheWorld = _alloc_( 1, 0, [:int]); 
  _isaa_27825__rso_656_TheWorld = _fill_( 0, _emal_54665__isaa_27825__rso_656_TheWorld); 
  _rso_656_TheWorld__SSA0_1, _rso_660_TheBenchmarkObject__SSA0_1, _rso_659_TheMTClock__SSA0_1, _rso_658_TheTerminal__SSA0_1, _rso_657_stdout__SSA0_1, _rso_661_stdin__SSA0_1 = _MAIN:_INIT::init( _rso_656_TheWorld, _rso_660_TheBenchmarkObject, _rso_659_TheMTClock, _rso_658_TheTerminal, _rso_657_stdout, _rso_661_stdin) ; 
  _rso_661_stdin__SSA0_2, P = FibreIO::FibreScanDoubleArray( _rso_661_stdin__SSA0_1) ; 
  _emal_54664__isaa_27865_P = _alloc_( 1, 1, _shape_A_( _shape_A_( P))); 
  _isaa_27865_P = _fill_( _shape_A_( P), _emal_54664__isaa_27865_P); 
  _emal_54663__ivesli_48598 = _alloc_( 1, 0, [:int]); 
  _ivesli_48598 = _fill_( 0, _emal_54663__ivesli_48598); 
  _emal_54662__pinl_5426__flat_68 = _alloc_( 1, 0, [:int]); 
  _pinl_5426__flat_68 = _fill_( _idx_sel_( _ivesli_48598, _isaa_27865_P), _emal_54662__pinl_5426__flat_68); 
  _free_( _isaa_27865_P); 
  _free_( _ivesli_48598); 
  _pinl_5429__flat_43 = _fill_( _div_SxS_( _pinl_5426__flat_68, 2), _pinl_5426__flat_68); 
  _emal_54660__flat_608 = _alloc_( 1, 1, [ 2 ]); 
  _flat_608 = _fill_( [ _pinl_5429__flat_43, 2 ], _emal_54660__flat_608); 
  _free_( _pinl_5429__flat_43); 
  _emal_54659_P__SSA0_1 = _alloc_or_reshape_( 1, 2, _shape_A_( _reshape_VxA_( _flat_608, P)), P); 
  _free_( _flat_608); 
  _emrb_55248_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55249_val = _fill_( _isreused_( _emal_54659_P__SSA0_1, P), _emrb_55248_mem); 
  P__SSA0_1 = _MAIN::main__ReuseCond_4( _emrb_55249_val, P, _emal_54659_P__SSA0_1) ; 
  _emal_54658__flat_624 = _alloc_( 1, 0, [:int]); 
  _flat_624 = _fill_( 1, _emal_54658__flat_624); 
  _emal_54657__flat_623 = _alloc_( 1, 0, [:int]); 
  _flat_623 = _fill_( 5, _emal_54657__flat_623); 
  _emal_54656__flat_616 = _alloc_( 1, 1, [ 6 ]); 
  _flat_616 = _fill_( [ 'b', 'e', 'n', 'c', 'h', '\0' ], _emal_54656__flat_616); 
  _flat_615 = String::to_string( _flat_616, _flat_623) ; 
  _dec_rc_( _flat_623, 1); 
  _rso_660_TheBenchmarkObject__SSA0_2, i_bench = Benchmarking::getInterval( _rso_660_TheBenchmarkObject__SSA0_1, _flat_615, _flat_624) ; 
  _rso_660_TheBenchmarkObject__SSA0_3, _rso_659_TheMTClock__SSA0_2, i_bench__SSA0_1 = Benchmarking::start( _rso_660_TheBenchmarkObject__SSA0_2, _rso_659_TheMTClock__SSA0_1, i_bench) ; 
  hull = wrapper:_MAIN::QuickHull( P__SSA0_1) ; 
  _emal_54655__isaa_27888_hull = _alloc_( 1, 1, [ 2 ]); 
  _isaa_27888_hull = _fill_( _shape_A_( hull), _emal_54655__isaa_27888_hull); 
  _free_( hull); 
  _rso_660_TheBenchmarkObject__SSA0_4, _rso_659_TheMTClock__SSA0_3, i_bench__SSA0_2 = Benchmarking::end( _rso_660_TheBenchmarkObject__SSA0_3, _rso_659_TheMTClock__SSA0_2, i_bench__SSA0_1) ; 
  _rso_658_TheTerminal__SSA0_2, _rso_657_stdout__SSA0_2 = _MAIN:StdIO::print( _rso_658_TheTerminal__SSA0_1, _rso_657_stdout__SSA0_1, _isaa_27888_hull) ; 
  _rso_660_TheBenchmarkObject__SSA0_5, i_bench__SSA0_3, time, unit = Benchmarking::returnResultUnit( _rso_660_TheBenchmarkObject__SSA0_4, i_bench__SSA0_2) ; 
  _dec_rc_( unit, 1); 
  _dec_rc_( i_bench__SSA0_3, 1); 
  _emal_54654__pinl_5431__flat_96 = _alloc_( 1, 0, [:int]); 
  _pinl_5431__flat_96 = _fill_( _mul_SxS_( 1000.0, time), _emal_54654__pinl_5431__flat_96); 
  _dec_rc_( time, 1); 
  _emal_54653__flat_646 = _alloc_( 1, 0, [:int]); 
  _flat_646 = _fill_( 17, _emal_54653__flat_646); 
  _emal_54652__flat_627 = _alloc_( 1, 1, [ 18 ]); 
  _flat_627 = _fill_( [ 'T', 'h', 'i', 's', ' ', 't', 'o', 'o', 'k', ' ', '%', 'l', 'f', ' ', 'm', 's', '\n', '\0' ], _emal_54652__flat_627); 
  _flat_626 = String::to_string( _flat_627, _flat_646) ; 
  _dec_rc_( _flat_646, 1); 
  _rso_658_TheTerminal__SSA0_3, _rso_657_stdout__SSA0_3 = StdIO::printf( _rso_658_TheTerminal__SSA0_2, _rso_657_stdout__SSA0_2, _flat_626, _pinl_5431__flat_96) ; 
  _dec_rc_( _pinl_5431__flat_96, 1); 
  return( _rso_661_stdin__SSA0_2, _rso_660_TheBenchmarkObject__SSA0_5, _rso_659_TheMTClock__SSA0_3, _rso_658_TheTerminal__SSA0_3, _rso_657_stdout__SSA0_3, _rso_656_TheWorld__SSA0_1, _isaa_27825__rso_656_TheWorld); 
}



/****************************************************************************
 * Cond function:
 * _MAIN::main__ReuseCond_4(...) [ body ]
 ****************************************************************************/
double[.,.] _MAIN::main__ReuseCond_4( bool _emrb_55244 { ,NN } , double[*] P { ,NN } , double[.,.] _emal_54659_P__SSA0_1 { ,NN } )
/*
 *  main__ReuseCond_4 ::  ---
 */
{ 
  double[.,.] _emrb_55247 { , NN } ; 
  double[.,.] _dup_55246_P__SSA0_1 { , NN } ; 
  double[.,.] _dup_55245_P__SSA0_1 { , NN } ; 

  if (_emrb_55244) 
  { 
    _dec_rc_( P, 1); 
    _dec_rc_( _emrb_55244, 1); 
    _dup_55245_P__SSA0_1 = _fill_( _noop_( P), _emal_54659_P__SSA0_1); 
  }
  else
  { 
    _dec_rc_( _emrb_55244, 1); 
    _dup_55246_P__SSA0_1 = _fill_( _copy_( P), _emal_54659_P__SSA0_1); 
    _dec_rc_( P, 1); 
  }
  _emrb_55247 = ( _emrb_55244 ? _dup_55245_P__SSA0_1 : _dup_55246_P__SSA0_1 ); 
  return( _emrb_55247); 
}



/****************************************************************************
 * _MAIN:_INIT::init(...) [ body ]
 ****************************************************************************/
hidden *, hidden *, hidden *, hidden *, hidden *, hidden * _MAIN:_INIT::init( hidden *_rso_667_TheWorld { ,NN } , hidden *_rso_666_TheBenchmarkObject { ,NN } , hidden *_rso_665_TheMTClock { ,NN } , hidden *_rso_664_TheTerminal { ,NN } , hidden *_rso_663_stdout { ,NN } , hidden *_rso_662_stdin { ,NN } )
/*
 *  init ::  ---
 */
{ 
  hidden _rso_662_stdin__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_664_TheTerminal__SSA0_3 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_663_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_664_TheTerminal__SSA0_2 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_664_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_667_TheWorld__SSA0_4 { , NN } ;  /* declared: World::World */
  hidden _rso_665_TheMTClock__SSA0_1 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_667_TheWorld__SSA0_3 { , NN } ;  /* declared: World::World */
  hidden _rso_666_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden _rso_667_TheWorld__SSA0_2 { , NN } ;  /* declared: World::World */
  hidden _rso_667_TheWorld__SSA0_1 { , NN } ;  /* declared: World::World */

  _rso_667_TheWorld__SSA0_1 = World:_INIT::init_TheWorld( _rso_667_TheWorld) ; 
  _rso_667_TheWorld__SSA0_2, _rso_666_TheBenchmarkObject__SSA0_1 = C99Benchmarking:_INIT::init_TheBenchmarkObject( _rso_667_TheWorld__SSA0_1, _rso_666_TheBenchmarkObject) ; 
  _rso_667_TheWorld__SSA0_3, _rso_665_TheMTClock__SSA0_1 = MTClock:_INIT::init_TheMTClock( _rso_667_TheWorld__SSA0_2, _rso_665_TheMTClock) ; 
  _rso_667_TheWorld__SSA0_4, _rso_664_TheTerminal__SSA0_1 = Terminal:_INIT::init_TheTerminal( _rso_667_TheWorld__SSA0_3, _rso_664_TheTerminal) ; 
  _rso_664_TheTerminal__SSA0_2, _rso_663_stdout__SSA0_1 = TermFile:_INIT::init_stdout( _rso_664_TheTerminal__SSA0_1, _rso_663_stdout) ; 
  _rso_664_TheTerminal__SSA0_3, _rso_662_stdin__SSA0_1 = TermFile:_INIT::init_stdin( _rso_664_TheTerminal__SSA0_2, _rso_662_stdin) ; 
  return( _rso_667_TheWorld__SSA0_4, _rso_666_TheBenchmarkObject__SSA0_1, _rso_665_TheMTClock__SSA0_1, _rso_664_TheTerminal__SSA0_3, _rso_663_stdout__SSA0_1, _rso_662_stdin__SSA0_1); 
}



/****************************************************************************
 * Benchmarking::getInterval(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * Benchmarking::getInterval( hidden *_rso_67_TheBenchmarkObject { ,NN } , enclosed(String::string) interval_name { ,NN } , int interval_number { ,NN } )
/*
 *  getInterval ::  ---
 */
{ 
  hidden _rso_67_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  hidden _oan_6 { , NN } ; 

  _rso_67_TheBenchmarkObject__SSA0_1, _oan_6 = C99Benchmarking::getInterval( _rso_67_TheBenchmarkObject, interval_name, interval_number) ; 
  return( _rso_67_TheBenchmarkObject__SSA0_1, _oan_6); 
}



/****************************************************************************
 * Benchmarking::start(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden *, hidden * Benchmarking::start( hidden *_rso_41_TheBenchmarkObject { ,NN } , hidden *_rso_40_TheMTClock { ,NN } , hidden *interval { ,NN } )
/*
 *  start ::  ---
 */
{ 
  hidden interval__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::Interval */
  hidden _rso_40_TheMTClock__SSA0_1 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_41_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */

  _rso_41_TheBenchmarkObject__SSA0_1, _rso_40_TheMTClock__SSA0_1, interval__SSA0_1 = C99Benchmarking::start( _rso_41_TheBenchmarkObject, _rso_40_TheMTClock, interval) ; 
  return( _rso_41_TheBenchmarkObject__SSA0_1, _rso_40_TheMTClock__SSA0_1, interval__SSA0_1); 
}



/****************************************************************************
 * Benchmarking::end(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden *, hidden * Benchmarking::end( hidden *_rso_65_TheBenchmarkObject { ,NN } , hidden *_rso_64_TheMTClock { ,NN } , hidden *interval { ,NN } )
/*
 *  end ::  ---
 */
{ 
  hidden interval__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::Interval */
  hidden _rso_64_TheMTClock__SSA0_1 { , NN } ;  /* declared: MTClock::MTClock */
  hidden _rso_65_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */

  _rso_65_TheBenchmarkObject__SSA0_1, _rso_64_TheMTClock__SSA0_1, interval__SSA0_1 = C99Benchmarking::end( _rso_65_TheBenchmarkObject, _rso_64_TheMTClock, interval) ; 
  return( _rso_65_TheBenchmarkObject__SSA0_1, _rso_64_TheMTClock__SSA0_1, interval__SSA0_1); 
}



/****************************************************************************
 * ArrayIO::print(...) [ body ]
 ****************************************************************************/
inline
hidden * ArrayIO::print( hidden *_rso_185_stdout { ,NN } , int[+] arr { ,NN } )
/*
 *  print ::  ---
 */
{ 
  int _emal_54667__isaa_28029_arr { , NN } ; 
  int[.] _emal_54666__isaa_28030_arr { , NN } ; 
  int[.] _isaa_28030_arr { , NN } ; 
  int _isaa_28029_arr { , NN } ; 
  hidden _rso_185_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */

  _emal_54667__isaa_28029_arr = _alloc_( 1, 0, [:int]); 
  _isaa_28029_arr = _fill_( _dim_A_( arr), _emal_54667__isaa_28029_arr); 
  _emal_54666__isaa_28030_arr = _alloc_( 1, 1, _shape_A_( _shape_A_( arr))); 
  _isaa_28030_arr = _fill_( _shape_A_( arr), _emal_54666__isaa_28030_arr); 
  _rso_185_stdout__SSA0_1 = ArrayIO::printarray( _rso_185_stdout, _isaa_28029_arr, _isaa_28030_arr, arr) ; 
  _dec_rc_( arr, 1); 
  _dec_rc_( _isaa_28030_arr, 1); 
  _dec_rc_( _isaa_28029_arr, 1); 
  return( _rso_185_stdout__SSA0_1); 
}



/****************************************************************************
 * Benchmarking::returnResultUnit(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden *, double, enclosed(String::string) Benchmarking::returnResultUnit( hidden *_rso_42_TheBenchmarkObject { ,NN } , hidden *int1 { ,NN } )
/*
 *  returnResultUnit ::  ---
 */
{ 
  hidden int1__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::Interval */
  hidden _rso_42_TheBenchmarkObject__SSA0_1 { , NN } ;  /* declared: C99Benchmarking::C99Benchmarking */
  double _oan_3 { , NN } ; 
  enclosed(String::string) _oan_4 { , NN } ; 

  _rso_42_TheBenchmarkObject__SSA0_1, int1__SSA0_1, _oan_3, _oan_4 = C99Benchmarking::returnResultUnit( _rso_42_TheBenchmarkObject, int1) ; 
  return( _rso_42_TheBenchmarkObject__SSA0_1, int1__SSA0_1, _oan_3, _oan_4); 
}



/****************************************************************************
 * StdIO::printf(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * StdIO::printf( hidden *_rso_417_TheTerminal { ,NN } , hidden *_rso_416_stdout { ,NN } , enclosed(String::string) FORMAT { ,NN } , ...)
/*
 *  printf ::  ---
 */
{ 
  hidden _rso_416_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_417_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */

  _rso_417_TheTerminal__SSA0_1, _rso_416_stdout__SSA0_1 = TermFile::printf( _rso_417_TheTerminal, _rso_416_stdout, FORMAT) ; 
  _dec_rc_( FORMAT, 1); 
  return( _rso_417_TheTerminal__SSA0_1, _rso_416_stdout__SSA0_1); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong[*] sacprelude_d::sel( int[.] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54680__isaa_28073_array { , NN } ; 
  int[1] _emal_54679__isaa_28076_idx { , NN } ; 
  int _emal_54678__flat_121 { , NN } ; 
  int _emal_54677__flat_119 { , NN } ; 
  int[.] _emal_54676_new_shape { , NN } ; 
  int[.] _emal_54675__flat_125 { , NN } ; 
  ulonglong _emal_54674__flat_124 { , NN } ; 
  ulonglong{0} _emal_54673_val { , NN } ; 
  ulonglong _emal_54672_val { , NN } ; 
  int[.] _emal_54671_new_idx { , NN } ; 
  int _emal_54670__ivesli_48599 { , NN } ; 
  ulonglong _emal_54669__flat_127 { , NN } ; 
  ulonglong[*] _emal_54668_res { , NN } ; 
  int _ivesli_48599 { , NN } ; 
  int _wlidx_47916_res { , NN } ; 
  int[1] _isaa_28076_idx { , NN } ; 
  int[.] _isaa_28073_array { , NN } ; 
  ulonglong[*] res { , NN } ; 
  ulonglong _flat_127 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulonglong{0} _flat_124 { , NN } ; 
  int[.] _flat_125 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_119 { , NN } ; 
  int{0} _flat_121 { , NN } ; 

  _emal_54680__isaa_28073_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28073_array = _fill_( _shape_A_( array), _emal_54680__isaa_28073_array); 
  _emal_54679__isaa_28076_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28076_idx = _fill_( _shape_A_( idx), _emal_54679__isaa_28076_idx); 
  _emal_54678__flat_121 = _alloc_( 1, 0, [:int]); 
  _flat_121 = _fill_( 0, _emal_54678__flat_121); 
  _emal_54677__flat_119 = _alloc_( 1, 0, [:int]); 
  _flat_119 = _fill_( _idx_sel_( _flat_121, _isaa_28076_idx), _emal_54677__flat_119); 
  _free_( _isaa_28076_idx); 
  _free_( _flat_121); 
  _emal_54676_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_119, _isaa_28073_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_119, _isaa_28073_array), _emal_54676_new_shape); 
  _free_( _flat_119); 
  _emal_54675__flat_125 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_125 = _fill_( _mul_SxV_( 0, new_shape), _emal_54675__flat_125); 
  _emal_54674__flat_124 = _alloc_( 1, 0, [:int]); 
  _flat_124 = _fill_( 0ULL, _emal_54674__flat_124); 
  _emal_54668_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_125)); 
  _wlidx_47916_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_125 <= iv (IDXS:_wlidx_47916_res) < new_shape)
        { 
          _emal_54671_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54671_new_idx); 
          _emal_54670__ivesli_48599 = _alloc_( 1, 0, [:int]); 
          _ivesli_48599 = _fill_( _vect2offset_( _isaa_28073_array, new_idx), _emal_54670__ivesli_48599); 
          _free_( new_idx); 
          _emal_54669__flat_127 = _alloc_( 1, 0, [:int]); 
          _flat_127 = _fill_( _idx_sel_( _ivesli_48599, array), _emal_54669__flat_127); 
          _free_( _ivesli_48599); 
          _emal_54672_val = _wl_assign_( _flat_127, _emal_54668_res, iv, _wlidx_47916_res); 
          _free_( _flat_127); 
        } : _emal_54672_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47916_res) ):
        { 
          _emal_54673_val = _wl_assign_( _flat_124, _emal_54668_res, iv, _wlidx_47916_res); 
        } : _emal_54673_val ; 
         } :
      genarray( new_shape, _flat_124, _emal_54668_res, IDX(_wlidx_47916_res)); 
  _free_( new_shape); 
  _free_( _flat_125); 
  _free_( _flat_124); 
  _free_( iv); 
  _free_( _isaa_28073_array); 
  _free_( _wlidx_47916_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong[*] sacprelude_d::sel( int[.] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54693__isaa_28105_array { , NN } ; 
  int[1] _emal_54692__isaa_28108_idx { , NN } ; 
  int _emal_54691__flat_112 { , NN } ; 
  int _emal_54690__flat_110 { , NN } ; 
  int[.] _emal_54689_new_shape { , NN } ; 
  int[.] _emal_54688__flat_116 { , NN } ; 
  ulong _emal_54687__flat_115 { , NN } ; 
  ulong{0} _emal_54686_val { , NN } ; 
  ulong _emal_54685_val { , NN } ; 
  int[.] _emal_54684_new_idx { , NN } ; 
  int _emal_54683__ivesli_48600 { , NN } ; 
  ulong _emal_54682__flat_118 { , NN } ; 
  ulong[*] _emal_54681_res { , NN } ; 
  int _ivesli_48600 { , NN } ; 
  int _wlidx_47917_res { , NN } ; 
  int[1] _isaa_28108_idx { , NN } ; 
  int[.] _isaa_28105_array { , NN } ; 
  ulong[*] res { , NN } ; 
  ulong _flat_118 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulong{0} _flat_115 { , NN } ; 
  int[.] _flat_116 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_110 { , NN } ; 
  int{0} _flat_112 { , NN } ; 

  _emal_54693__isaa_28105_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28105_array = _fill_( _shape_A_( array), _emal_54693__isaa_28105_array); 
  _emal_54692__isaa_28108_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28108_idx = _fill_( _shape_A_( idx), _emal_54692__isaa_28108_idx); 
  _emal_54691__flat_112 = _alloc_( 1, 0, [:int]); 
  _flat_112 = _fill_( 0, _emal_54691__flat_112); 
  _emal_54690__flat_110 = _alloc_( 1, 0, [:int]); 
  _flat_110 = _fill_( _idx_sel_( _flat_112, _isaa_28108_idx), _emal_54690__flat_110); 
  _free_( _isaa_28108_idx); 
  _free_( _flat_112); 
  _emal_54689_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_110, _isaa_28105_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_110, _isaa_28105_array), _emal_54689_new_shape); 
  _free_( _flat_110); 
  _emal_54688__flat_116 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_116 = _fill_( _mul_SxV_( 0, new_shape), _emal_54688__flat_116); 
  _emal_54687__flat_115 = _alloc_( 1, 0, [:int]); 
  _flat_115 = _fill_( 0ul, _emal_54687__flat_115); 
  _emal_54681_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_116)); 
  _wlidx_47917_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_116 <= iv (IDXS:_wlidx_47917_res) < new_shape)
        { 
          _emal_54684_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54684_new_idx); 
          _emal_54683__ivesli_48600 = _alloc_( 1, 0, [:int]); 
          _ivesli_48600 = _fill_( _vect2offset_( _isaa_28105_array, new_idx), _emal_54683__ivesli_48600); 
          _free_( new_idx); 
          _emal_54682__flat_118 = _alloc_( 1, 0, [:int]); 
          _flat_118 = _fill_( _idx_sel_( _ivesli_48600, array), _emal_54682__flat_118); 
          _free_( _ivesli_48600); 
          _emal_54685_val = _wl_assign_( _flat_118, _emal_54681_res, iv, _wlidx_47917_res); 
          _free_( _flat_118); 
        } : _emal_54685_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47917_res) ):
        { 
          _emal_54686_val = _wl_assign_( _flat_115, _emal_54681_res, iv, _wlidx_47917_res); 
        } : _emal_54686_val ; 
         } :
      genarray( new_shape, _flat_115, _emal_54681_res, IDX(_wlidx_47917_res)); 
  _free_( new_shape); 
  _free_( _flat_116); 
  _free_( _flat_115); 
  _free_( iv); 
  _free_( _isaa_28105_array); 
  _free_( _wlidx_47917_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint[*] sacprelude_d::sel( int[.] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54706__isaa_28137_array { , NN } ; 
  int[1] _emal_54705__isaa_28140_idx { , NN } ; 
  int _emal_54704__flat_103 { , NN } ; 
  int _emal_54703__flat_101 { , NN } ; 
  int[.] _emal_54702_new_shape { , NN } ; 
  int[.] _emal_54701__flat_107 { , NN } ; 
  uint _emal_54700__flat_106 { , NN } ; 
  uint{0} _emal_54699_val { , NN } ; 
  uint _emal_54698_val { , NN } ; 
  int[.] _emal_54697_new_idx { , NN } ; 
  int _emal_54696__ivesli_48601 { , NN } ; 
  uint _emal_54695__flat_109 { , NN } ; 
  uint[*] _emal_54694_res { , NN } ; 
  int _ivesli_48601 { , NN } ; 
  int _wlidx_47918_res { , NN } ; 
  int[1] _isaa_28140_idx { , NN } ; 
  int[.] _isaa_28137_array { , NN } ; 
  uint[*] res { , NN } ; 
  uint _flat_109 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  uint{0} _flat_106 { , NN } ; 
  int[.] _flat_107 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_101 { , NN } ; 
  int{0} _flat_103 { , NN } ; 

  _emal_54706__isaa_28137_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28137_array = _fill_( _shape_A_( array), _emal_54706__isaa_28137_array); 
  _emal_54705__isaa_28140_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28140_idx = _fill_( _shape_A_( idx), _emal_54705__isaa_28140_idx); 
  _emal_54704__flat_103 = _alloc_( 1, 0, [:int]); 
  _flat_103 = _fill_( 0, _emal_54704__flat_103); 
  _emal_54703__flat_101 = _alloc_( 1, 0, [:int]); 
  _flat_101 = _fill_( _idx_sel_( _flat_103, _isaa_28140_idx), _emal_54703__flat_101); 
  _free_( _isaa_28140_idx); 
  _free_( _flat_103); 
  _emal_54702_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_101, _isaa_28137_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_101, _isaa_28137_array), _emal_54702_new_shape); 
  _free_( _flat_101); 
  _emal_54701__flat_107 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_107 = _fill_( _mul_SxV_( 0, new_shape), _emal_54701__flat_107); 
  _emal_54700__flat_106 = _alloc_( 1, 0, [:int]); 
  _flat_106 = _fill_( 0ui, _emal_54700__flat_106); 
  _emal_54694_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_107)); 
  _wlidx_47918_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_107 <= iv (IDXS:_wlidx_47918_res) < new_shape)
        { 
          _emal_54697_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54697_new_idx); 
          _emal_54696__ivesli_48601 = _alloc_( 1, 0, [:int]); 
          _ivesli_48601 = _fill_( _vect2offset_( _isaa_28137_array, new_idx), _emal_54696__ivesli_48601); 
          _free_( new_idx); 
          _emal_54695__flat_109 = _alloc_( 1, 0, [:int]); 
          _flat_109 = _fill_( _idx_sel_( _ivesli_48601, array), _emal_54695__flat_109); 
          _free_( _ivesli_48601); 
          _emal_54698_val = _wl_assign_( _flat_109, _emal_54694_res, iv, _wlidx_47918_res); 
          _free_( _flat_109); 
        } : _emal_54698_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47918_res) ):
        { 
          _emal_54699_val = _wl_assign_( _flat_106, _emal_54694_res, iv, _wlidx_47918_res); 
        } : _emal_54699_val ; 
         } :
      genarray( new_shape, _flat_106, _emal_54694_res, IDX(_wlidx_47918_res)); 
  _free_( new_shape); 
  _free_( _flat_107); 
  _free_( _flat_106); 
  _free_( iv); 
  _free_( _isaa_28137_array); 
  _free_( _wlidx_47918_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort[*] sacprelude_d::sel( int[.] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54719__isaa_28169_array { , NN } ; 
  int[1] _emal_54718__isaa_28172_idx { , NN } ; 
  int _emal_54717__flat_94 { , NN } ; 
  int _emal_54716__flat_92 { , NN } ; 
  int[.] _emal_54715_new_shape { , NN } ; 
  int[.] _emal_54714__flat_98 { , NN } ; 
  ushort _emal_54713__flat_97 { , NN } ; 
  ushort{0} _emal_54712_val { , NN } ; 
  ushort _emal_54711_val { , NN } ; 
  int[.] _emal_54710_new_idx { , NN } ; 
  int _emal_54709__ivesli_48602 { , NN } ; 
  ushort _emal_54708__flat_100 { , NN } ; 
  ushort[*] _emal_54707_res { , NN } ; 
  int _ivesli_48602 { , NN } ; 
  int _wlidx_47919_res { , NN } ; 
  int[1] _isaa_28172_idx { , NN } ; 
  int[.] _isaa_28169_array { , NN } ; 
  ushort[*] res { , NN } ; 
  ushort _flat_100 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ushort{0} _flat_97 { , NN } ; 
  int[.] _flat_98 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_92 { , NN } ; 
  int{0} _flat_94 { , NN } ; 

  _emal_54719__isaa_28169_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28169_array = _fill_( _shape_A_( array), _emal_54719__isaa_28169_array); 
  _emal_54718__isaa_28172_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28172_idx = _fill_( _shape_A_( idx), _emal_54718__isaa_28172_idx); 
  _emal_54717__flat_94 = _alloc_( 1, 0, [:int]); 
  _flat_94 = _fill_( 0, _emal_54717__flat_94); 
  _emal_54716__flat_92 = _alloc_( 1, 0, [:int]); 
  _flat_92 = _fill_( _idx_sel_( _flat_94, _isaa_28172_idx), _emal_54716__flat_92); 
  _free_( _isaa_28172_idx); 
  _free_( _flat_94); 
  _emal_54715_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_92, _isaa_28169_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_92, _isaa_28169_array), _emal_54715_new_shape); 
  _free_( _flat_92); 
  _emal_54714__flat_98 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_98 = _fill_( _mul_SxV_( 0, new_shape), _emal_54714__flat_98); 
  _emal_54713__flat_97 = _alloc_( 1, 0, [:int]); 
  _flat_97 = _fill_( 0us, _emal_54713__flat_97); 
  _emal_54707_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_98)); 
  _wlidx_47919_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_98 <= iv (IDXS:_wlidx_47919_res) < new_shape)
        { 
          _emal_54710_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54710_new_idx); 
          _emal_54709__ivesli_48602 = _alloc_( 1, 0, [:int]); 
          _ivesli_48602 = _fill_( _vect2offset_( _isaa_28169_array, new_idx), _emal_54709__ivesli_48602); 
          _free_( new_idx); 
          _emal_54708__flat_100 = _alloc_( 1, 0, [:int]); 
          _flat_100 = _fill_( _idx_sel_( _ivesli_48602, array), _emal_54708__flat_100); 
          _free_( _ivesli_48602); 
          _emal_54711_val = _wl_assign_( _flat_100, _emal_54707_res, iv, _wlidx_47919_res); 
          _free_( _flat_100); 
        } : _emal_54711_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47919_res) ):
        { 
          _emal_54712_val = _wl_assign_( _flat_97, _emal_54707_res, iv, _wlidx_47919_res); 
        } : _emal_54712_val ; 
         } :
      genarray( new_shape, _flat_97, _emal_54707_res, IDX(_wlidx_47919_res)); 
  _free_( new_shape); 
  _free_( _flat_98); 
  _free_( _flat_97); 
  _free_( iv); 
  _free_( _isaa_28169_array); 
  _free_( _wlidx_47919_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte[*] sacprelude_d::sel( int[.] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54732__isaa_28201_array { , NN } ; 
  int[1] _emal_54731__isaa_28204_idx { , NN } ; 
  int _emal_54730__flat_85 { , NN } ; 
  int _emal_54729__flat_83 { , NN } ; 
  int[.] _emal_54728_new_shape { , NN } ; 
  int[.] _emal_54727__flat_89 { , NN } ; 
  ubyte _emal_54726__flat_88 { , NN } ; 
  ubyte{} _emal_54725_val { , NN } ; 
  ubyte _emal_54724_val { , NN } ; 
  int[.] _emal_54723_new_idx { , NN } ; 
  int _emal_54722__ivesli_48603 { , NN } ; 
  ubyte _emal_54721__flat_91 { , NN } ; 
  ubyte[*] _emal_54720_res { , NN } ; 
  int _ivesli_48603 { , NN } ; 
  int _wlidx_47920_res { , NN } ; 
  int[1] _isaa_28204_idx { , NN } ; 
  int[.] _isaa_28201_array { , NN } ; 
  ubyte[*] res { , NN } ; 
  ubyte _flat_91 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ubyte{} _flat_88 { , NN } ; 
  int[.] _flat_89 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_83 { , NN } ; 
  int{0} _flat_85 { , NN } ; 

  _emal_54732__isaa_28201_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28201_array = _fill_( _shape_A_( array), _emal_54732__isaa_28201_array); 
  _emal_54731__isaa_28204_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28204_idx = _fill_( _shape_A_( idx), _emal_54731__isaa_28204_idx); 
  _emal_54730__flat_85 = _alloc_( 1, 0, [:int]); 
  _flat_85 = _fill_( 0, _emal_54730__flat_85); 
  _emal_54729__flat_83 = _alloc_( 1, 0, [:int]); 
  _flat_83 = _fill_( _idx_sel_( _flat_85, _isaa_28204_idx), _emal_54729__flat_83); 
  _free_( _isaa_28204_idx); 
  _free_( _flat_85); 
  _emal_54728_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_83, _isaa_28201_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_83, _isaa_28201_array), _emal_54728_new_shape); 
  _free_( _flat_83); 
  _emal_54727__flat_89 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_89 = _fill_( _mul_SxV_( 0, new_shape), _emal_54727__flat_89); 
  _emal_54726__flat_88 = _alloc_( 1, 0, [:int]); 
  _flat_88 = _fill_( 0ub, _emal_54726__flat_88); 
  _emal_54720_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_89)); 
  _wlidx_47920_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_89 <= iv (IDXS:_wlidx_47920_res) < new_shape)
        { 
          _emal_54723_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54723_new_idx); 
          _emal_54722__ivesli_48603 = _alloc_( 1, 0, [:int]); 
          _ivesli_48603 = _fill_( _vect2offset_( _isaa_28201_array, new_idx), _emal_54722__ivesli_48603); 
          _free_( new_idx); 
          _emal_54721__flat_91 = _alloc_( 1, 0, [:int]); 
          _flat_91 = _fill_( _idx_sel_( _ivesli_48603, array), _emal_54721__flat_91); 
          _free_( _ivesli_48603); 
          _emal_54724_val = _wl_assign_( _flat_91, _emal_54720_res, iv, _wlidx_47920_res); 
          _free_( _flat_91); 
        } : _emal_54724_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47920_res) ):
        { 
          _emal_54725_val = _wl_assign_( _flat_88, _emal_54720_res, iv, _wlidx_47920_res); 
        } : _emal_54725_val ; 
         } :
      genarray( new_shape, _flat_88, _emal_54720_res, IDX(_wlidx_47920_res)); 
  _free_( new_shape); 
  _free_( _flat_89); 
  _free_( _flat_88); 
  _free_( iv); 
  _free_( _isaa_28201_array); 
  _free_( _wlidx_47920_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong[*] sacprelude_d::sel( int[.] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54745__isaa_28233_array { , NN } ; 
  int[1] _emal_54744__isaa_28236_idx { , NN } ; 
  int _emal_54743__flat_76 { , NN } ; 
  int _emal_54742__flat_74 { , NN } ; 
  int[.] _emal_54741_new_shape { , NN } ; 
  int[.] _emal_54740__flat_80 { , NN } ; 
  longlong _emal_54739__flat_79 { , NN } ; 
  longlong{0} _emal_54738_val { , NN } ; 
  longlong _emal_54737_val { , NN } ; 
  int[.] _emal_54736_new_idx { , NN } ; 
  int _emal_54735__ivesli_48604 { , NN } ; 
  longlong _emal_54734__flat_82 { , NN } ; 
  longlong[*] _emal_54733_res { , NN } ; 
  int _ivesli_48604 { , NN } ; 
  int _wlidx_47921_res { , NN } ; 
  int[1] _isaa_28236_idx { , NN } ; 
  int[.] _isaa_28233_array { , NN } ; 
  longlong[*] res { , NN } ; 
  longlong _flat_82 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  longlong{0} _flat_79 { , NN } ; 
  int[.] _flat_80 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_74 { , NN } ; 
  int{0} _flat_76 { , NN } ; 

  _emal_54745__isaa_28233_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28233_array = _fill_( _shape_A_( array), _emal_54745__isaa_28233_array); 
  _emal_54744__isaa_28236_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28236_idx = _fill_( _shape_A_( idx), _emal_54744__isaa_28236_idx); 
  _emal_54743__flat_76 = _alloc_( 1, 0, [:int]); 
  _flat_76 = _fill_( 0, _emal_54743__flat_76); 
  _emal_54742__flat_74 = _alloc_( 1, 0, [:int]); 
  _flat_74 = _fill_( _idx_sel_( _flat_76, _isaa_28236_idx), _emal_54742__flat_74); 
  _free_( _isaa_28236_idx); 
  _free_( _flat_76); 
  _emal_54741_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_74, _isaa_28233_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_74, _isaa_28233_array), _emal_54741_new_shape); 
  _free_( _flat_74); 
  _emal_54740__flat_80 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_80 = _fill_( _mul_SxV_( 0, new_shape), _emal_54740__flat_80); 
  _emal_54739__flat_79 = _alloc_( 1, 0, [:int]); 
  _flat_79 = _fill_( 0LL, _emal_54739__flat_79); 
  _emal_54733_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_80)); 
  _wlidx_47921_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_80 <= iv (IDXS:_wlidx_47921_res) < new_shape)
        { 
          _emal_54736_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54736_new_idx); 
          _emal_54735__ivesli_48604 = _alloc_( 1, 0, [:int]); 
          _ivesli_48604 = _fill_( _vect2offset_( _isaa_28233_array, new_idx), _emal_54735__ivesli_48604); 
          _free_( new_idx); 
          _emal_54734__flat_82 = _alloc_( 1, 0, [:int]); 
          _flat_82 = _fill_( _idx_sel_( _ivesli_48604, array), _emal_54734__flat_82); 
          _free_( _ivesli_48604); 
          _emal_54737_val = _wl_assign_( _flat_82, _emal_54733_res, iv, _wlidx_47921_res); 
          _free_( _flat_82); 
        } : _emal_54737_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47921_res) ):
        { 
          _emal_54738_val = _wl_assign_( _flat_79, _emal_54733_res, iv, _wlidx_47921_res); 
        } : _emal_54738_val ; 
         } :
      genarray( new_shape, _flat_79, _emal_54733_res, IDX(_wlidx_47921_res)); 
  _free_( new_shape); 
  _free_( _flat_80); 
  _free_( _flat_79); 
  _free_( iv); 
  _free_( _isaa_28233_array); 
  _free_( _wlidx_47921_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long[*] sacprelude_d::sel( int[.] idx { ,NN } , long[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54758__isaa_28265_array { , NN } ; 
  int[1] _emal_54757__isaa_28268_idx { , NN } ; 
  int _emal_54756__flat_67 { , NN } ; 
  int _emal_54755__flat_65 { , NN } ; 
  int[.] _emal_54754_new_shape { , NN } ; 
  int[.] _emal_54753__flat_71 { , NN } ; 
  long _emal_54752__flat_70 { , NN } ; 
  long{0} _emal_54751_val { , NN } ; 
  long _emal_54750_val { , NN } ; 
  int[.] _emal_54749_new_idx { , NN } ; 
  int _emal_54748__ivesli_48605 { , NN } ; 
  long _emal_54747__flat_73 { , NN } ; 
  long[*] _emal_54746_res { , NN } ; 
  int _ivesli_48605 { , NN } ; 
  int _wlidx_47922_res { , NN } ; 
  int[1] _isaa_28268_idx { , NN } ; 
  int[.] _isaa_28265_array { , NN } ; 
  long[*] res { , NN } ; 
  long _flat_73 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  long{0} _flat_70 { , NN } ; 
  int[.] _flat_71 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_65 { , NN } ; 
  int{0} _flat_67 { , NN } ; 

  _emal_54758__isaa_28265_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28265_array = _fill_( _shape_A_( array), _emal_54758__isaa_28265_array); 
  _emal_54757__isaa_28268_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28268_idx = _fill_( _shape_A_( idx), _emal_54757__isaa_28268_idx); 
  _emal_54756__flat_67 = _alloc_( 1, 0, [:int]); 
  _flat_67 = _fill_( 0, _emal_54756__flat_67); 
  _emal_54755__flat_65 = _alloc_( 1, 0, [:int]); 
  _flat_65 = _fill_( _idx_sel_( _flat_67, _isaa_28268_idx), _emal_54755__flat_65); 
  _free_( _isaa_28268_idx); 
  _free_( _flat_67); 
  _emal_54754_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_65, _isaa_28265_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_65, _isaa_28265_array), _emal_54754_new_shape); 
  _free_( _flat_65); 
  _emal_54753__flat_71 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_71 = _fill_( _mul_SxV_( 0, new_shape), _emal_54753__flat_71); 
  _emal_54752__flat_70 = _alloc_( 1, 0, [:int]); 
  _flat_70 = _fill_( 0l, _emal_54752__flat_70); 
  _emal_54746_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_71)); 
  _wlidx_47922_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_71 <= iv (IDXS:_wlidx_47922_res) < new_shape)
        { 
          _emal_54749_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54749_new_idx); 
          _emal_54748__ivesli_48605 = _alloc_( 1, 0, [:int]); 
          _ivesli_48605 = _fill_( _vect2offset_( _isaa_28265_array, new_idx), _emal_54748__ivesli_48605); 
          _free_( new_idx); 
          _emal_54747__flat_73 = _alloc_( 1, 0, [:int]); 
          _flat_73 = _fill_( _idx_sel_( _ivesli_48605, array), _emal_54747__flat_73); 
          _free_( _ivesli_48605); 
          _emal_54750_val = _wl_assign_( _flat_73, _emal_54746_res, iv, _wlidx_47922_res); 
          _free_( _flat_73); 
        } : _emal_54750_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47922_res) ):
        { 
          _emal_54751_val = _wl_assign_( _flat_70, _emal_54746_res, iv, _wlidx_47922_res); 
        } : _emal_54751_val ; 
         } :
      genarray( new_shape, _flat_70, _emal_54746_res, IDX(_wlidx_47922_res)); 
  _free_( new_shape); 
  _free_( _flat_71); 
  _free_( _flat_70); 
  _free_( iv); 
  _free_( _isaa_28265_array); 
  _free_( _wlidx_47922_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short[*] sacprelude_d::sel( int[.] idx { ,NN } , short[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54771__isaa_28297_array { , NN } ; 
  int[1] _emal_54770__isaa_28300_idx { , NN } ; 
  int _emal_54769__flat_58 { , NN } ; 
  int _emal_54768__flat_56 { , NN } ; 
  int[.] _emal_54767_new_shape { , NN } ; 
  int[.] _emal_54766__flat_62 { , NN } ; 
  short _emal_54765__flat_61 { , NN } ; 
  short{0} _emal_54764_val { , NN } ; 
  short _emal_54763_val { , NN } ; 
  int[.] _emal_54762_new_idx { , NN } ; 
  int _emal_54761__ivesli_48606 { , NN } ; 
  short _emal_54760__flat_64 { , NN } ; 
  short[*] _emal_54759_res { , NN } ; 
  int _ivesli_48606 { , NN } ; 
  int _wlidx_47923_res { , NN } ; 
  int[1] _isaa_28300_idx { , NN } ; 
  int[.] _isaa_28297_array { , NN } ; 
  short[*] res { , NN } ; 
  short _flat_64 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  short{0} _flat_61 { , NN } ; 
  int[.] _flat_62 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_56 { , NN } ; 
  int{0} _flat_58 { , NN } ; 

  _emal_54771__isaa_28297_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28297_array = _fill_( _shape_A_( array), _emal_54771__isaa_28297_array); 
  _emal_54770__isaa_28300_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28300_idx = _fill_( _shape_A_( idx), _emal_54770__isaa_28300_idx); 
  _emal_54769__flat_58 = _alloc_( 1, 0, [:int]); 
  _flat_58 = _fill_( 0, _emal_54769__flat_58); 
  _emal_54768__flat_56 = _alloc_( 1, 0, [:int]); 
  _flat_56 = _fill_( _idx_sel_( _flat_58, _isaa_28300_idx), _emal_54768__flat_56); 
  _free_( _isaa_28300_idx); 
  _free_( _flat_58); 
  _emal_54767_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_56, _isaa_28297_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_56, _isaa_28297_array), _emal_54767_new_shape); 
  _free_( _flat_56); 
  _emal_54766__flat_62 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_62 = _fill_( _mul_SxV_( 0, new_shape), _emal_54766__flat_62); 
  _emal_54765__flat_61 = _alloc_( 1, 0, [:int]); 
  _flat_61 = _fill_( 0s, _emal_54765__flat_61); 
  _emal_54759_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_62)); 
  _wlidx_47923_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_62 <= iv (IDXS:_wlidx_47923_res) < new_shape)
        { 
          _emal_54762_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54762_new_idx); 
          _emal_54761__ivesli_48606 = _alloc_( 1, 0, [:int]); 
          _ivesli_48606 = _fill_( _vect2offset_( _isaa_28297_array, new_idx), _emal_54761__ivesli_48606); 
          _free_( new_idx); 
          _emal_54760__flat_64 = _alloc_( 1, 0, [:int]); 
          _flat_64 = _fill_( _idx_sel_( _ivesli_48606, array), _emal_54760__flat_64); 
          _free_( _ivesli_48606); 
          _emal_54763_val = _wl_assign_( _flat_64, _emal_54759_res, iv, _wlidx_47923_res); 
          _free_( _flat_64); 
        } : _emal_54763_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47923_res) ):
        { 
          _emal_54764_val = _wl_assign_( _flat_61, _emal_54759_res, iv, _wlidx_47923_res); 
        } : _emal_54764_val ; 
         } :
      genarray( new_shape, _flat_61, _emal_54759_res, IDX(_wlidx_47923_res)); 
  _free_( new_shape); 
  _free_( _flat_62); 
  _free_( _flat_61); 
  _free_( iv); 
  _free_( _isaa_28297_array); 
  _free_( _wlidx_47923_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte[*] sacprelude_d::sel( int[.] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54784__isaa_28329_array { , NN } ; 
  int[1] _emal_54783__isaa_28332_idx { , NN } ; 
  int _emal_54782__flat_49 { , NN } ; 
  int _emal_54781__flat_47 { , NN } ; 
  int[.] _emal_54780_new_shape { , NN } ; 
  int[.] _emal_54779__flat_53 { , NN } ; 
  byte _emal_54778__flat_52 { , NN } ; 
  byte{} _emal_54777_val { , NN } ; 
  byte _emal_54776_val { , NN } ; 
  int[.] _emal_54775_new_idx { , NN } ; 
  int _emal_54774__ivesli_48607 { , NN } ; 
  byte _emal_54773__flat_55 { , NN } ; 
  byte[*] _emal_54772_res { , NN } ; 
  int _ivesli_48607 { , NN } ; 
  int _wlidx_47924_res { , NN } ; 
  int[1] _isaa_28332_idx { , NN } ; 
  int[.] _isaa_28329_array { , NN } ; 
  byte[*] res { , NN } ; 
  byte _flat_55 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  byte{} _flat_52 { , NN } ; 
  int[.] _flat_53 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_47 { , NN } ; 
  int{0} _flat_49 { , NN } ; 

  _emal_54784__isaa_28329_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28329_array = _fill_( _shape_A_( array), _emal_54784__isaa_28329_array); 
  _emal_54783__isaa_28332_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28332_idx = _fill_( _shape_A_( idx), _emal_54783__isaa_28332_idx); 
  _emal_54782__flat_49 = _alloc_( 1, 0, [:int]); 
  _flat_49 = _fill_( 0, _emal_54782__flat_49); 
  _emal_54781__flat_47 = _alloc_( 1, 0, [:int]); 
  _flat_47 = _fill_( _idx_sel_( _flat_49, _isaa_28332_idx), _emal_54781__flat_47); 
  _free_( _isaa_28332_idx); 
  _free_( _flat_49); 
  _emal_54780_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_47, _isaa_28329_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_47, _isaa_28329_array), _emal_54780_new_shape); 
  _free_( _flat_47); 
  _emal_54779__flat_53 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_53 = _fill_( _mul_SxV_( 0, new_shape), _emal_54779__flat_53); 
  _emal_54778__flat_52 = _alloc_( 1, 0, [:int]); 
  _flat_52 = _fill_( 0b, _emal_54778__flat_52); 
  _emal_54772_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_53)); 
  _wlidx_47924_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_53 <= iv (IDXS:_wlidx_47924_res) < new_shape)
        { 
          _emal_54775_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54775_new_idx); 
          _emal_54774__ivesli_48607 = _alloc_( 1, 0, [:int]); 
          _ivesli_48607 = _fill_( _vect2offset_( _isaa_28329_array, new_idx), _emal_54774__ivesli_48607); 
          _free_( new_idx); 
          _emal_54773__flat_55 = _alloc_( 1, 0, [:int]); 
          _flat_55 = _fill_( _idx_sel_( _ivesli_48607, array), _emal_54773__flat_55); 
          _free_( _ivesli_48607); 
          _emal_54776_val = _wl_assign_( _flat_55, _emal_54772_res, iv, _wlidx_47924_res); 
          _free_( _flat_55); 
        } : _emal_54776_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47924_res) ):
        { 
          _emal_54777_val = _wl_assign_( _flat_52, _emal_54772_res, iv, _wlidx_47924_res); 
        } : _emal_54777_val ; 
         } :
      genarray( new_shape, _flat_52, _emal_54772_res, IDX(_wlidx_47924_res)); 
  _free_( new_shape); 
  _free_( _flat_53); 
  _free_( _flat_52); 
  _free_( iv); 
  _free_( _isaa_28329_array); 
  _free_( _wlidx_47924_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char[*] sacprelude_d::sel( int[.] idx { ,NN } , char[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54797__isaa_28361_array { , NN } ; 
  int[1] _emal_54796__isaa_28364_idx { , NN } ; 
  int _emal_54795__flat_40 { , NN } ; 
  int _emal_54794__flat_38 { , NN } ; 
  int[.] _emal_54793_new_shape { , NN } ; 
  int[.] _emal_54792__flat_44 { , NN } ; 
  char _emal_54791__flat_43 { , NN } ; 
  char{ } _emal_54790_val { , NN } ; 
  char _emal_54789_val { , NN } ; 
  int[.] _emal_54788_new_idx { , NN } ; 
  int _emal_54787__ivesli_48608 { , NN } ; 
  char _emal_54786__flat_46 { , NN } ; 
  char[*] _emal_54785_res { , NN } ; 
  int _ivesli_48608 { , NN } ; 
  int _wlidx_47925_res { , NN } ; 
  int[1] _isaa_28364_idx { , NN } ; 
  int[.] _isaa_28361_array { , NN } ; 
  char[*] res { , NN } ; 
  char _flat_46 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  char{ } _flat_43 { , NN } ; 
  int[.] _flat_44 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_38 { , NN } ; 
  int{0} _flat_40 { , NN } ; 

  _emal_54797__isaa_28361_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28361_array = _fill_( _shape_A_( array), _emal_54797__isaa_28361_array); 
  _emal_54796__isaa_28364_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28364_idx = _fill_( _shape_A_( idx), _emal_54796__isaa_28364_idx); 
  _emal_54795__flat_40 = _alloc_( 1, 0, [:int]); 
  _flat_40 = _fill_( 0, _emal_54795__flat_40); 
  _emal_54794__flat_38 = _alloc_( 1, 0, [:int]); 
  _flat_38 = _fill_( _idx_sel_( _flat_40, _isaa_28364_idx), _emal_54794__flat_38); 
  _free_( _isaa_28364_idx); 
  _free_( _flat_40); 
  _emal_54793_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_38, _isaa_28361_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_38, _isaa_28361_array), _emal_54793_new_shape); 
  _free_( _flat_38); 
  _emal_54792__flat_44 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_44 = _fill_( _mul_SxV_( 0, new_shape), _emal_54792__flat_44); 
  _emal_54791__flat_43 = _alloc_( 1, 0, [:int]); 
  _flat_43 = _fill_( ' ', _emal_54791__flat_43); 
  _emal_54785_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_44)); 
  _wlidx_47925_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_44 <= iv (IDXS:_wlidx_47925_res) < new_shape)
        { 
          _emal_54788_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54788_new_idx); 
          _emal_54787__ivesli_48608 = _alloc_( 1, 0, [:int]); 
          _ivesli_48608 = _fill_( _vect2offset_( _isaa_28361_array, new_idx), _emal_54787__ivesli_48608); 
          _free_( new_idx); 
          _emal_54786__flat_46 = _alloc_( 1, 0, [:int]); 
          _flat_46 = _fill_( _idx_sel_( _ivesli_48608, array), _emal_54786__flat_46); 
          _free_( _ivesli_48608); 
          _emal_54789_val = _wl_assign_( _flat_46, _emal_54785_res, iv, _wlidx_47925_res); 
          _free_( _flat_46); 
        } : _emal_54789_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47925_res) ):
        { 
          _emal_54790_val = _wl_assign_( _flat_43, _emal_54785_res, iv, _wlidx_47925_res); 
        } : _emal_54790_val ; 
         } :
      genarray( new_shape, _flat_43, _emal_54785_res, IDX(_wlidx_47925_res)); 
  _free_( new_shape); 
  _free_( _flat_44); 
  _free_( _flat_43); 
  _free_( iv); 
  _free_( _isaa_28361_array); 
  _free_( _wlidx_47925_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[*] sacprelude_d::sel( int[.] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54810__isaa_28393_array { , NN } ; 
  int[1] _emal_54809__isaa_28396_idx { , NN } ; 
  int _emal_54808__flat_31 { , NN } ; 
  int _emal_54807__flat_29 { , NN } ; 
  int[.] _emal_54806_new_shape { , NN } ; 
  int[.] _emal_54805__flat_35 { , NN } ; 
  bool _emal_54804__flat_34 { , NN } ; 
  bool{0} _emal_54803_val { , NN } ; 
  bool _emal_54802_val { , NN } ; 
  int[.] _emal_54801_new_idx { , NN } ; 
  int _emal_54800__ivesli_48609 { , NN } ; 
  bool _emal_54799__flat_37 { , NN } ; 
  bool[*] _emal_54798_res { , NN } ; 
  int _ivesli_48609 { , NN } ; 
  int _wlidx_47926_res { , NN } ; 
  int[1] _isaa_28396_idx { , NN } ; 
  int[.] _isaa_28393_array { , NN } ; 
  bool[*] res { , NN } ; 
  bool _flat_37 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  bool{0} _flat_34 { , NN } ; 
  int[.] _flat_35 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_29 { , NN } ; 
  int{0} _flat_31 { , NN } ; 

  _emal_54810__isaa_28393_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28393_array = _fill_( _shape_A_( array), _emal_54810__isaa_28393_array); 
  _emal_54809__isaa_28396_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28396_idx = _fill_( _shape_A_( idx), _emal_54809__isaa_28396_idx); 
  _emal_54808__flat_31 = _alloc_( 1, 0, [:int]); 
  _flat_31 = _fill_( 0, _emal_54808__flat_31); 
  _emal_54807__flat_29 = _alloc_( 1, 0, [:int]); 
  _flat_29 = _fill_( _idx_sel_( _flat_31, _isaa_28396_idx), _emal_54807__flat_29); 
  _free_( _isaa_28396_idx); 
  _free_( _flat_31); 
  _emal_54806_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_29, _isaa_28393_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_29, _isaa_28393_array), _emal_54806_new_shape); 
  _free_( _flat_29); 
  _emal_54805__flat_35 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_35 = _fill_( _mul_SxV_( 0, new_shape), _emal_54805__flat_35); 
  _emal_54804__flat_34 = _alloc_( 1, 0, [:int]); 
  _flat_34 = _fill_( false, _emal_54804__flat_34); 
  _emal_54798_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_35)); 
  _wlidx_47926_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_35 <= iv (IDXS:_wlidx_47926_res) < new_shape)
        { 
          _emal_54801_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54801_new_idx); 
          _emal_54800__ivesli_48609 = _alloc_( 1, 0, [:int]); 
          _ivesli_48609 = _fill_( _vect2offset_( _isaa_28393_array, new_idx), _emal_54800__ivesli_48609); 
          _free_( new_idx); 
          _emal_54799__flat_37 = _alloc_( 1, 0, [:int]); 
          _flat_37 = _fill_( _idx_sel_( _ivesli_48609, array), _emal_54799__flat_37); 
          _free_( _ivesli_48609); 
          _emal_54802_val = _wl_assign_( _flat_37, _emal_54798_res, iv, _wlidx_47926_res); 
          _free_( _flat_37); 
        } : _emal_54802_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47926_res) ):
        { 
          _emal_54803_val = _wl_assign_( _flat_34, _emal_54798_res, iv, _wlidx_47926_res); 
        } : _emal_54803_val ; 
         } :
      genarray( new_shape, _flat_34, _emal_54798_res, IDX(_wlidx_47926_res)); 
  _free_( new_shape); 
  _free_( _flat_35); 
  _free_( _flat_34); 
  _free_( iv); 
  _free_( _isaa_28393_array); 
  _free_( _wlidx_47926_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double[*] sacprelude_d::sel( int[.] idx { ,NN } , double[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54823__isaa_28425_array { , NN } ; 
  int[1] _emal_54822__isaa_28428_idx { , NN } ; 
  int _emal_54821__flat_22 { , NN } ; 
  int _emal_54820__flat_20 { , NN } ; 
  int[.] _emal_54819_new_shape { , NN } ; 
  int[.] _emal_54818__flat_26 { , NN } ; 
  double _emal_54817__flat_25 { , NN } ; 
  double{0.0...} _emal_54816_val { , NN } ; 
  double _emal_54815_val { , NN } ; 
  int[.] _emal_54814_new_idx { , NN } ; 
  int _emal_54813__ivesli_48610 { , NN } ; 
  double _emal_54812__flat_28 { , NN } ; 
  double[*] _emal_54811_res { , NN } ; 
  int _ivesli_48610 { , NN } ; 
  int _wlidx_47927_res { , NN } ; 
  int[1] _isaa_28428_idx { , NN } ; 
  int[.] _isaa_28425_array { , NN } ; 
  double[*] res { , NN } ; 
  double _flat_28 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  double{0.0...} _flat_25 { , NN } ; 
  int[.] _flat_26 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_20 { , NN } ; 
  int{0} _flat_22 { , NN } ; 

  _emal_54823__isaa_28425_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28425_array = _fill_( _shape_A_( array), _emal_54823__isaa_28425_array); 
  _emal_54822__isaa_28428_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28428_idx = _fill_( _shape_A_( idx), _emal_54822__isaa_28428_idx); 
  _emal_54821__flat_22 = _alloc_( 1, 0, [:int]); 
  _flat_22 = _fill_( 0, _emal_54821__flat_22); 
  _emal_54820__flat_20 = _alloc_( 1, 0, [:int]); 
  _flat_20 = _fill_( _idx_sel_( _flat_22, _isaa_28428_idx), _emal_54820__flat_20); 
  _free_( _isaa_28428_idx); 
  _free_( _flat_22); 
  _emal_54819_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_20, _isaa_28425_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_20, _isaa_28425_array), _emal_54819_new_shape); 
  _free_( _flat_20); 
  _emal_54818__flat_26 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_26 = _fill_( _mul_SxV_( 0, new_shape), _emal_54818__flat_26); 
  _emal_54817__flat_25 = _alloc_( 1, 0, [:int]); 
  _flat_25 = _fill_( 0.0, _emal_54817__flat_25); 
  _emal_54811_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_26)); 
  _wlidx_47927_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_26 <= iv (IDXS:_wlidx_47927_res) < new_shape)
        { 
          _emal_54814_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54814_new_idx); 
          _emal_54813__ivesli_48610 = _alloc_( 1, 0, [:int]); 
          _ivesli_48610 = _fill_( _vect2offset_( _isaa_28425_array, new_idx), _emal_54813__ivesli_48610); 
          _free_( new_idx); 
          _emal_54812__flat_28 = _alloc_( 1, 0, [:int]); 
          _flat_28 = _fill_( _idx_sel_( _ivesli_48610, array), _emal_54812__flat_28); 
          _free_( _ivesli_48610); 
          _emal_54815_val = _wl_assign_( _flat_28, _emal_54811_res, iv, _wlidx_47927_res); 
          _free_( _flat_28); 
        } : _emal_54815_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47927_res) ):
        { 
          _emal_54816_val = _wl_assign_( _flat_25, _emal_54811_res, iv, _wlidx_47927_res); 
        } : _emal_54816_val ; 
         } :
      genarray( new_shape, _flat_25, _emal_54811_res, IDX(_wlidx_47927_res)); 
  _free_( new_shape); 
  _free_( _flat_26); 
  _free_( _flat_25); 
  _free_( iv); 
  _free_( _isaa_28425_array); 
  _free_( _wlidx_47927_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float[*] sacprelude_d::sel( int[.] idx { ,NN } , float[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54836__isaa_28457_array { , NN } ; 
  int[1] _emal_54835__isaa_28460_idx { , NN } ; 
  int _emal_54834__flat_13 { , NN } ; 
  int _emal_54833__flat_11 { , NN } ; 
  int[.] _emal_54832_new_shape { , NN } ; 
  int[.] _emal_54831__flat_17 { , NN } ; 
  float _emal_54830__flat_16 { , NN } ; 
  float{0.0...} _emal_54829_val { , NN } ; 
  float _emal_54828_val { , NN } ; 
  int[.] _emal_54827_new_idx { , NN } ; 
  int _emal_54826__ivesli_48611 { , NN } ; 
  float _emal_54825__flat_19 { , NN } ; 
  float[*] _emal_54824_res { , NN } ; 
  int _ivesli_48611 { , NN } ; 
  int _wlidx_47928_res { , NN } ; 
  int[1] _isaa_28460_idx { , NN } ; 
  int[.] _isaa_28457_array { , NN } ; 
  float[*] res { , NN } ; 
  float _flat_19 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  float{0.0...} _flat_16 { , NN } ; 
  int[.] _flat_17 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_11 { , NN } ; 
  int{0} _flat_13 { , NN } ; 

  _emal_54836__isaa_28457_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28457_array = _fill_( _shape_A_( array), _emal_54836__isaa_28457_array); 
  _emal_54835__isaa_28460_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28460_idx = _fill_( _shape_A_( idx), _emal_54835__isaa_28460_idx); 
  _emal_54834__flat_13 = _alloc_( 1, 0, [:int]); 
  _flat_13 = _fill_( 0, _emal_54834__flat_13); 
  _emal_54833__flat_11 = _alloc_( 1, 0, [:int]); 
  _flat_11 = _fill_( _idx_sel_( _flat_13, _isaa_28460_idx), _emal_54833__flat_11); 
  _free_( _isaa_28460_idx); 
  _free_( _flat_13); 
  _emal_54832_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_11, _isaa_28457_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_11, _isaa_28457_array), _emal_54832_new_shape); 
  _free_( _flat_11); 
  _emal_54831__flat_17 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_17 = _fill_( _mul_SxV_( 0, new_shape), _emal_54831__flat_17); 
  _emal_54830__flat_16 = _alloc_( 1, 0, [:int]); 
  _flat_16 = _fill_( 0.0f, _emal_54830__flat_16); 
  _emal_54824_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_17)); 
  _wlidx_47928_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_17 <= iv (IDXS:_wlidx_47928_res) < new_shape)
        { 
          _emal_54827_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54827_new_idx); 
          _emal_54826__ivesli_48611 = _alloc_( 1, 0, [:int]); 
          _ivesli_48611 = _fill_( _vect2offset_( _isaa_28457_array, new_idx), _emal_54826__ivesli_48611); 
          _free_( new_idx); 
          _emal_54825__flat_19 = _alloc_( 1, 0, [:int]); 
          _flat_19 = _fill_( _idx_sel_( _ivesli_48611, array), _emal_54825__flat_19); 
          _free_( _ivesli_48611); 
          _emal_54828_val = _wl_assign_( _flat_19, _emal_54824_res, iv, _wlidx_47928_res); 
          _free_( _flat_19); 
        } : _emal_54828_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47928_res) ):
        { 
          _emal_54829_val = _wl_assign_( _flat_16, _emal_54824_res, iv, _wlidx_47928_res); 
        } : _emal_54829_val ; 
         } :
      genarray( new_shape, _flat_16, _emal_54824_res, IDX(_wlidx_47928_res)); 
  _free_( new_shape); 
  _free_( _flat_17); 
  _free_( _flat_16); 
  _free_( iv); 
  _free_( _isaa_28457_array); 
  _free_( _wlidx_47928_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[*] sacprelude_d::sel( int[.] idx { ,NN } , int[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int[.] _emal_54848__isaa_28489_array { , NN } ; 
  int[1] _emal_54847__isaa_28492_idx { , NN } ; 
  int _emal_54846__flat_4 { , NN } ; 
  int _emal_54845__flat_2 { , NN } ; 
  int[.] _emal_54844_new_shape { , NN } ; 
  int[.] _emal_54843__flat_8 { , NN } ; 
  int{0} _emal_54842_val { , NN } ; 
  int _emal_54841_val { , NN } ; 
  int[.] _emal_54840_new_idx { , NN } ; 
  int _emal_54839__ivesli_48612 { , NN } ; 
  int _emal_54838__flat_10 { , NN } ; 
  int[*] _emal_54837_res { , NN } ; 
  int _ivesli_48612 { , NN } ; 
  int _wlidx_47929_res { , NN } ; 
  int[1] _isaa_28492_idx { , NN } ; 
  int[.] _isaa_28489_array { , NN } ; 
  int[*] res { , NN } ; 
  int _flat_10 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  int[.] _flat_8 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_2 { , NN } ; 
  int{0} _flat_4 { , NN } ; 

  _emal_54848__isaa_28489_array = _alloc_( 1, 1, _shape_A_( _shape_A_( array))); 
  _isaa_28489_array = _fill_( _shape_A_( array), _emal_54848__isaa_28489_array); 
  _emal_54847__isaa_28492_idx = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28492_idx = _fill_( _shape_A_( idx), _emal_54847__isaa_28492_idx); 
  _emal_54846__flat_4 = _alloc_( 1, 0, [:int]); 
  _flat_4 = _fill_( 0, _emal_54846__flat_4); 
  _emal_54845__flat_2 = _alloc_( 1, 0, [:int]); 
  _flat_2 = _fill_( _idx_sel_( _flat_4, _isaa_28492_idx), _emal_54845__flat_2); 
  _free_( _isaa_28492_idx); 
  _emal_54844_new_shape = _alloc_( 1, 1, _shape_A_( _drop_SxV_( _flat_2, _isaa_28489_array))); 
  new_shape = _fill_( _drop_SxV_( _flat_2, _isaa_28489_array), _emal_54844_new_shape); 
  _free_( _flat_2); 
  _emal_54843__flat_8 = _alloc_( 1, 1, _shape_A_( new_shape)); 
  _flat_8 = _fill_( _mul_SxV_( 0, new_shape), _emal_54843__flat_8); 
  _emal_54837_res = _alloc_( 1, _add_SxS_( _sel_VxA_( 0, _shape_A_( new_shape)), 0), _cat_VxV_( new_shape, [:int])); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_8)); 
  _wlidx_47929_res = _alloc_( 1, 0, [:int]); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_8 <= iv (IDXS:_wlidx_47929_res) < new_shape)
        { 
          _emal_54840_new_idx = _alloc_( 1, 1, _shape_A_( _cat_VxV_( idx, iv))); 
          new_idx = _fill_( _cat_VxV_( idx, iv), _emal_54840_new_idx); 
          _emal_54839__ivesli_48612 = _alloc_( 1, 0, [:int]); 
          _ivesli_48612 = _fill_( _vect2offset_( _isaa_28489_array, new_idx), _emal_54839__ivesli_48612); 
          _free_( new_idx); 
          _emal_54838__flat_10 = _alloc_( 1, 0, [:int]); 
          _flat_10 = _fill_( _idx_sel_( _ivesli_48612, array), _emal_54838__flat_10); 
          _free_( _ivesli_48612); 
          _emal_54841_val = _wl_assign_( _flat_10, _emal_54837_res, iv, _wlidx_47929_res); 
          _free_( _flat_10); 
        } : _emal_54841_val ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_47929_res) ):
        { 
          _emal_54842_val = _wl_assign_( _flat_4, _emal_54837_res, iv, _wlidx_47929_res); 
        } : _emal_54842_val ; 
         } :
      genarray( new_shape, _flat_4, _emal_54837_res, IDX(_wlidx_47929_res)); 
  _free_( new_shape); 
  _free_( _flat_8); 
  _free_( _flat_4); 
  _free_( iv); 
  _free_( _isaa_28489_array); 
  _free_( _wlidx_47929_res); 
  _dec_rc_( array, 1); 
  _dec_rc_( idx, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( ulonglong[*] A { ,NN } , ulonglong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54858__isaa_28521_B { , NN } ; 
  int[.] _emal_54857__isaa_28524_A { , NN } ; 
  int[.] _emal_54856__flat_404 { , NN } ; 
  bool _emal_54855__flat_403 { , NN } ; 
  int _emal_54854__ivesli_48614 { , NN } ; 
  ulonglong _emal_54853__flat_410 { , NN } ; 
  int _emal_54852__ivesli_48613 { , NN } ; 
  ulonglong _emal_54851__flat_409 { , NN } ; 
  bool _emal_54850__flat_408 { , NN } ; 
  bool _ufiv_51697__pinl_5434__flat_298 { , NN } ; 
  int _ivesli_48614 { , NN } ; 
  int _ivesli_48613 { , NN } ; 
  int[.] _isaa_28524_A { , NN } ; 
  int[.] _isaa_28521_B { , NN } ; 
  bool _pinl_5434__flat_298 { , NN } ; 
  bool _ea_2723_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_408 { , NN } ; 
  ulonglong _flat_409 { , NN } ; 
  ulonglong _flat_410 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_403 { , NN } ; 
  int[.] _flat_404 { , NN } ; 

  _emal_54858__isaa_28521_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28521_B = _fill_( _shape_A_( B), _emal_54858__isaa_28521_B); 
  _emal_54857__isaa_28524_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28524_A = _fill_( _shape_A_( A), _emal_54857__isaa_28524_A); 
  _emal_54856__flat_404 = _alloc_( 1, 1, _shape_A_( _isaa_28524_A)); 
  _flat_404 = _fill_( _mul_SxV_( 0, _isaa_28524_A), _emal_54856__flat_404); 
  _emal_54855__flat_403 = _alloc_( 1, 0, [:int]); 
  _flat_403 = _fill_( true, _emal_54855__flat_403); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_404)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_404 <= iv < _isaa_28524_A)
        { 
          _ea_2723_res = _accu_( iv, _flat_403); 
          _emal_54854__ivesli_48614 = _alloc_( 1, 0, [:int]); 
          _ivesli_48614 = _fill_( _vect2offset_( _isaa_28521_B, iv), _emal_54854__ivesli_48614); 
          _emal_54853__flat_410 = _alloc_( 1, 0, [:int]); 
          _flat_410 = _fill_( _idx_sel_( _ivesli_48614, B), _emal_54853__flat_410); 
          _free_( _ivesli_48614); 
          _emal_54852__ivesli_48613 = _alloc_( 1, 0, [:int]); 
          _ivesli_48613 = _fill_( _vect2offset_( _isaa_28524_A, iv), _emal_54852__ivesli_48613); 
          _emal_54851__flat_409 = _alloc_( 1, 0, [:int]); 
          _flat_409 = _fill_( _idx_sel_( _ivesli_48613, A), _emal_54851__flat_409); 
          _free_( _ivesli_48613); 
          _emal_54850__flat_408 = _alloc_( 1, 0, [:int]); 
          _flat_408 = _fill_( _eq_SxS_( _flat_409, _flat_410), _emal_54850__flat_408); 
          _free_( _flat_410); 
          _free_( _flat_409); 
          _pinl_5434__flat_298 = _fill_( _and_SxS_( _ea_2723_res, _flat_408), _flat_408); 
          _dec_rc_( _ea_2723_res, 1); 
          _ufiv_51697__pinl_5434__flat_298 = _unshare_( _pinl_5434__flat_298, iv); 
        } : _ufiv_51697__pinl_5434__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_403); 
  _free_( _flat_404); 
  _free_( iv); 
  _free_( _isaa_28521_B); 
  _free_( _isaa_28524_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( ulong[*] A { ,NN } , ulong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54868__isaa_28531_B { , NN } ; 
  int[.] _emal_54867__isaa_28534_A { , NN } ; 
  int[.] _emal_54866__flat_396 { , NN } ; 
  bool _emal_54865__flat_395 { , NN } ; 
  int _emal_54864__ivesli_48616 { , NN } ; 
  ulong _emal_54863__flat_402 { , NN } ; 
  int _emal_54862__ivesli_48615 { , NN } ; 
  ulong _emal_54861__flat_401 { , NN } ; 
  bool _emal_54860__flat_400 { , NN } ; 
  bool _ufiv_51698__pinl_5435__flat_298 { , NN } ; 
  int _ivesli_48616 { , NN } ; 
  int _ivesli_48615 { , NN } ; 
  int[.] _isaa_28534_A { , NN } ; 
  int[.] _isaa_28531_B { , NN } ; 
  bool _pinl_5435__flat_298 { , NN } ; 
  bool _ea_2725_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_400 { , NN } ; 
  ulong _flat_401 { , NN } ; 
  ulong _flat_402 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_395 { , NN } ; 
  int[.] _flat_396 { , NN } ; 

  _emal_54868__isaa_28531_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28531_B = _fill_( _shape_A_( B), _emal_54868__isaa_28531_B); 
  _emal_54867__isaa_28534_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28534_A = _fill_( _shape_A_( A), _emal_54867__isaa_28534_A); 
  _emal_54866__flat_396 = _alloc_( 1, 1, _shape_A_( _isaa_28534_A)); 
  _flat_396 = _fill_( _mul_SxV_( 0, _isaa_28534_A), _emal_54866__flat_396); 
  _emal_54865__flat_395 = _alloc_( 1, 0, [:int]); 
  _flat_395 = _fill_( true, _emal_54865__flat_395); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_396)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_396 <= iv < _isaa_28534_A)
        { 
          _ea_2725_res = _accu_( iv, _flat_395); 
          _emal_54864__ivesli_48616 = _alloc_( 1, 0, [:int]); 
          _ivesli_48616 = _fill_( _vect2offset_( _isaa_28531_B, iv), _emal_54864__ivesli_48616); 
          _emal_54863__flat_402 = _alloc_( 1, 0, [:int]); 
          _flat_402 = _fill_( _idx_sel_( _ivesli_48616, B), _emal_54863__flat_402); 
          _free_( _ivesli_48616); 
          _emal_54862__ivesli_48615 = _alloc_( 1, 0, [:int]); 
          _ivesli_48615 = _fill_( _vect2offset_( _isaa_28534_A, iv), _emal_54862__ivesli_48615); 
          _emal_54861__flat_401 = _alloc_( 1, 0, [:int]); 
          _flat_401 = _fill_( _idx_sel_( _ivesli_48615, A), _emal_54861__flat_401); 
          _free_( _ivesli_48615); 
          _emal_54860__flat_400 = _alloc_( 1, 0, [:int]); 
          _flat_400 = _fill_( _eq_SxS_( _flat_401, _flat_402), _emal_54860__flat_400); 
          _free_( _flat_402); 
          _free_( _flat_401); 
          _pinl_5435__flat_298 = _fill_( _and_SxS_( _ea_2725_res, _flat_400), _flat_400); 
          _dec_rc_( _ea_2725_res, 1); 
          _ufiv_51698__pinl_5435__flat_298 = _unshare_( _pinl_5435__flat_298, iv); 
        } : _ufiv_51698__pinl_5435__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_395); 
  _free_( _flat_396); 
  _free_( iv); 
  _free_( _isaa_28531_B); 
  _free_( _isaa_28534_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( uint[*] A { ,NN } , uint[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54878__isaa_28541_B { , NN } ; 
  int[.] _emal_54877__isaa_28544_A { , NN } ; 
  int[.] _emal_54876__flat_388 { , NN } ; 
  bool _emal_54875__flat_387 { , NN } ; 
  int _emal_54874__ivesli_48618 { , NN } ; 
  uint _emal_54873__flat_394 { , NN } ; 
  int _emal_54872__ivesli_48617 { , NN } ; 
  uint _emal_54871__flat_393 { , NN } ; 
  bool _emal_54870__flat_392 { , NN } ; 
  bool _ufiv_51699__pinl_5436__flat_298 { , NN } ; 
  int _ivesli_48618 { , NN } ; 
  int _ivesli_48617 { , NN } ; 
  int[.] _isaa_28544_A { , NN } ; 
  int[.] _isaa_28541_B { , NN } ; 
  bool _pinl_5436__flat_298 { , NN } ; 
  bool _ea_2727_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_392 { , NN } ; 
  uint _flat_393 { , NN } ; 
  uint _flat_394 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_387 { , NN } ; 
  int[.] _flat_388 { , NN } ; 

  _emal_54878__isaa_28541_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28541_B = _fill_( _shape_A_( B), _emal_54878__isaa_28541_B); 
  _emal_54877__isaa_28544_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28544_A = _fill_( _shape_A_( A), _emal_54877__isaa_28544_A); 
  _emal_54876__flat_388 = _alloc_( 1, 1, _shape_A_( _isaa_28544_A)); 
  _flat_388 = _fill_( _mul_SxV_( 0, _isaa_28544_A), _emal_54876__flat_388); 
  _emal_54875__flat_387 = _alloc_( 1, 0, [:int]); 
  _flat_387 = _fill_( true, _emal_54875__flat_387); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_388)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_388 <= iv < _isaa_28544_A)
        { 
          _ea_2727_res = _accu_( iv, _flat_387); 
          _emal_54874__ivesli_48618 = _alloc_( 1, 0, [:int]); 
          _ivesli_48618 = _fill_( _vect2offset_( _isaa_28541_B, iv), _emal_54874__ivesli_48618); 
          _emal_54873__flat_394 = _alloc_( 1, 0, [:int]); 
          _flat_394 = _fill_( _idx_sel_( _ivesli_48618, B), _emal_54873__flat_394); 
          _free_( _ivesli_48618); 
          _emal_54872__ivesli_48617 = _alloc_( 1, 0, [:int]); 
          _ivesli_48617 = _fill_( _vect2offset_( _isaa_28544_A, iv), _emal_54872__ivesli_48617); 
          _emal_54871__flat_393 = _alloc_( 1, 0, [:int]); 
          _flat_393 = _fill_( _idx_sel_( _ivesli_48617, A), _emal_54871__flat_393); 
          _free_( _ivesli_48617); 
          _emal_54870__flat_392 = _alloc_( 1, 0, [:int]); 
          _flat_392 = _fill_( _eq_SxS_( _flat_393, _flat_394), _emal_54870__flat_392); 
          _free_( _flat_394); 
          _free_( _flat_393); 
          _pinl_5436__flat_298 = _fill_( _and_SxS_( _ea_2727_res, _flat_392), _flat_392); 
          _dec_rc_( _ea_2727_res, 1); 
          _ufiv_51699__pinl_5436__flat_298 = _unshare_( _pinl_5436__flat_298, iv); 
        } : _ufiv_51699__pinl_5436__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_387); 
  _free_( _flat_388); 
  _free_( iv); 
  _free_( _isaa_28541_B); 
  _free_( _isaa_28544_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( ushort[*] A { ,NN } , ushort[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54888__isaa_28551_B { , NN } ; 
  int[.] _emal_54887__isaa_28554_A { , NN } ; 
  int[.] _emal_54886__flat_380 { , NN } ; 
  bool _emal_54885__flat_379 { , NN } ; 
  int _emal_54884__ivesli_48620 { , NN } ; 
  ushort _emal_54883__flat_386 { , NN } ; 
  int _emal_54882__ivesli_48619 { , NN } ; 
  ushort _emal_54881__flat_385 { , NN } ; 
  bool _emal_54880__flat_384 { , NN } ; 
  bool _ufiv_51700__pinl_5437__flat_298 { , NN } ; 
  int _ivesli_48620 { , NN } ; 
  int _ivesli_48619 { , NN } ; 
  int[.] _isaa_28554_A { , NN } ; 
  int[.] _isaa_28551_B { , NN } ; 
  bool _pinl_5437__flat_298 { , NN } ; 
  bool _ea_2729_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_384 { , NN } ; 
  ushort _flat_385 { , NN } ; 
  ushort _flat_386 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_379 { , NN } ; 
  int[.] _flat_380 { , NN } ; 

  _emal_54888__isaa_28551_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28551_B = _fill_( _shape_A_( B), _emal_54888__isaa_28551_B); 
  _emal_54887__isaa_28554_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28554_A = _fill_( _shape_A_( A), _emal_54887__isaa_28554_A); 
  _emal_54886__flat_380 = _alloc_( 1, 1, _shape_A_( _isaa_28554_A)); 
  _flat_380 = _fill_( _mul_SxV_( 0, _isaa_28554_A), _emal_54886__flat_380); 
  _emal_54885__flat_379 = _alloc_( 1, 0, [:int]); 
  _flat_379 = _fill_( true, _emal_54885__flat_379); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_380)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_380 <= iv < _isaa_28554_A)
        { 
          _ea_2729_res = _accu_( iv, _flat_379); 
          _emal_54884__ivesli_48620 = _alloc_( 1, 0, [:int]); 
          _ivesli_48620 = _fill_( _vect2offset_( _isaa_28551_B, iv), _emal_54884__ivesli_48620); 
          _emal_54883__flat_386 = _alloc_( 1, 0, [:int]); 
          _flat_386 = _fill_( _idx_sel_( _ivesli_48620, B), _emal_54883__flat_386); 
          _free_( _ivesli_48620); 
          _emal_54882__ivesli_48619 = _alloc_( 1, 0, [:int]); 
          _ivesli_48619 = _fill_( _vect2offset_( _isaa_28554_A, iv), _emal_54882__ivesli_48619); 
          _emal_54881__flat_385 = _alloc_( 1, 0, [:int]); 
          _flat_385 = _fill_( _idx_sel_( _ivesli_48619, A), _emal_54881__flat_385); 
          _free_( _ivesli_48619); 
          _emal_54880__flat_384 = _alloc_( 1, 0, [:int]); 
          _flat_384 = _fill_( _eq_SxS_( _flat_385, _flat_386), _emal_54880__flat_384); 
          _free_( _flat_386); 
          _free_( _flat_385); 
          _pinl_5437__flat_298 = _fill_( _and_SxS_( _ea_2729_res, _flat_384), _flat_384); 
          _dec_rc_( _ea_2729_res, 1); 
          _ufiv_51700__pinl_5437__flat_298 = _unshare_( _pinl_5437__flat_298, iv); 
        } : _ufiv_51700__pinl_5437__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_379); 
  _free_( _flat_380); 
  _free_( iv); 
  _free_( _isaa_28551_B); 
  _free_( _isaa_28554_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( ubyte[*] A { ,NN } , ubyte[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54898__isaa_28561_B { , NN } ; 
  int[.] _emal_54897__isaa_28564_A { , NN } ; 
  int[.] _emal_54896__flat_372 { , NN } ; 
  bool _emal_54895__flat_371 { , NN } ; 
  int _emal_54894__ivesli_48622 { , NN } ; 
  ubyte _emal_54893__flat_378 { , NN } ; 
  int _emal_54892__ivesli_48621 { , NN } ; 
  ubyte _emal_54891__flat_377 { , NN } ; 
  bool _emal_54890__flat_376 { , NN } ; 
  bool _ufiv_51701__pinl_5438__flat_298 { , NN } ; 
  int _ivesli_48622 { , NN } ; 
  int _ivesli_48621 { , NN } ; 
  int[.] _isaa_28564_A { , NN } ; 
  int[.] _isaa_28561_B { , NN } ; 
  bool _pinl_5438__flat_298 { , NN } ; 
  bool _ea_2731_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_376 { , NN } ; 
  ubyte _flat_377 { , NN } ; 
  ubyte _flat_378 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_371 { , NN } ; 
  int[.] _flat_372 { , NN } ; 

  _emal_54898__isaa_28561_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28561_B = _fill_( _shape_A_( B), _emal_54898__isaa_28561_B); 
  _emal_54897__isaa_28564_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28564_A = _fill_( _shape_A_( A), _emal_54897__isaa_28564_A); 
  _emal_54896__flat_372 = _alloc_( 1, 1, _shape_A_( _isaa_28564_A)); 
  _flat_372 = _fill_( _mul_SxV_( 0, _isaa_28564_A), _emal_54896__flat_372); 
  _emal_54895__flat_371 = _alloc_( 1, 0, [:int]); 
  _flat_371 = _fill_( true, _emal_54895__flat_371); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_372)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_372 <= iv < _isaa_28564_A)
        { 
          _ea_2731_res = _accu_( iv, _flat_371); 
          _emal_54894__ivesli_48622 = _alloc_( 1, 0, [:int]); 
          _ivesli_48622 = _fill_( _vect2offset_( _isaa_28561_B, iv), _emal_54894__ivesli_48622); 
          _emal_54893__flat_378 = _alloc_( 1, 0, [:int]); 
          _flat_378 = _fill_( _idx_sel_( _ivesli_48622, B), _emal_54893__flat_378); 
          _free_( _ivesli_48622); 
          _emal_54892__ivesli_48621 = _alloc_( 1, 0, [:int]); 
          _ivesli_48621 = _fill_( _vect2offset_( _isaa_28564_A, iv), _emal_54892__ivesli_48621); 
          _emal_54891__flat_377 = _alloc_( 1, 0, [:int]); 
          _flat_377 = _fill_( _idx_sel_( _ivesli_48621, A), _emal_54891__flat_377); 
          _free_( _ivesli_48621); 
          _emal_54890__flat_376 = _alloc_( 1, 0, [:int]); 
          _flat_376 = _fill_( _eq_SxS_( _flat_377, _flat_378), _emal_54890__flat_376); 
          _free_( _flat_378); 
          _free_( _flat_377); 
          _pinl_5438__flat_298 = _fill_( _and_SxS_( _ea_2731_res, _flat_376), _flat_376); 
          _dec_rc_( _ea_2731_res, 1); 
          _ufiv_51701__pinl_5438__flat_298 = _unshare_( _pinl_5438__flat_298, iv); 
        } : _ufiv_51701__pinl_5438__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_371); 
  _free_( _flat_372); 
  _free_( iv); 
  _free_( _isaa_28561_B); 
  _free_( _isaa_28564_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( longlong[*] A { ,NN } , longlong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54909__isaa_28571_B { , NN } ; 
  int[.] _emal_54908__isaa_28574_A { , NN } ; 
  int[.] _emal_54907__flat_364 { , NN } ; 
  bool _emal_54906__flat_363 { , NN } ; 
  int _emal_54905__ivesli_48624 { , NN } ; 
  longlong _emal_54904__flat_370 { , NN } ; 
  int _emal_54903__ivesli_48623 { , NN } ; 
  longlong _emal_54902__flat_369 { , NN } ; 
  bool _emal_54900__flat_368 { , NN } ; 
  bool _ufiv_51702__pinl_5439__flat_298 { , NN } ; 
  int _ivesli_48624 { , NN } ; 
  int _ivesli_48623 { , NN } ; 
  int[.] _isaa_28574_A { , NN } ; 
  int[.] _isaa_28571_B { , NN } ; 
  longlong _ctz_10278 { , NN } ; 
  bool _pinl_5439__flat_298 { , NN } ; 
  bool _ea_2733_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_368 { , NN } ; 
  longlong _flat_369 { , NN } ; 
  longlong _flat_370 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_363 { , NN } ; 
  int[.] _flat_364 { , NN } ; 

  _emal_54909__isaa_28571_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28571_B = _fill_( _shape_A_( B), _emal_54909__isaa_28571_B); 
  _emal_54908__isaa_28574_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28574_A = _fill_( _shape_A_( A), _emal_54908__isaa_28574_A); 
  _emal_54907__flat_364 = _alloc_( 1, 1, _shape_A_( _isaa_28574_A)); 
  _flat_364 = _fill_( _mul_SxV_( 0, _isaa_28574_A), _emal_54907__flat_364); 
  _emal_54906__flat_363 = _alloc_( 1, 0, [:int]); 
  _flat_363 = _fill_( true, _emal_54906__flat_363); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_364)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_364 <= iv < _isaa_28574_A)
        { 
          _ea_2733_res = _accu_( iv, _flat_363); 
          _emal_54905__ivesli_48624 = _alloc_( 1, 0, [:int]); 
          _ivesli_48624 = _fill_( _vect2offset_( _isaa_28571_B, iv), _emal_54905__ivesli_48624); 
          _emal_54904__flat_370 = _alloc_( 1, 0, [:int]); 
          _flat_370 = _fill_( _idx_sel_( _ivesli_48624, B), _emal_54904__flat_370); 
          _free_( _ivesli_48624); 
          _emal_54903__ivesli_48623 = _alloc_( 1, 0, [:int]); 
          _ivesli_48623 = _fill_( _vect2offset_( _isaa_28574_A, iv), _emal_54903__ivesli_48623); 
          _emal_54902__flat_369 = _alloc_( 1, 0, [:int]); 
          _flat_369 = _fill_( _idx_sel_( _ivesli_48623, A), _emal_54902__flat_369); 
          _free_( _ivesli_48623); 
          _ctz_10278 = _fill_( _sub_SxS_( _flat_369, _flat_370), _flat_369); 
          _free_( _flat_370); 
          _emal_54900__flat_368 = _alloc_( 1, 0, [:int]); 
          _flat_368 = _fill_( _eq_SxS_( _ctz_10278, 0LL), _emal_54900__flat_368); 
          _free_( _ctz_10278); 
          _pinl_5439__flat_298 = _fill_( _and_SxS_( _ea_2733_res, _flat_368), _flat_368); 
          _dec_rc_( _ea_2733_res, 1); 
          _ufiv_51702__pinl_5439__flat_298 = _unshare_( _pinl_5439__flat_298, iv); 
        } : _ufiv_51702__pinl_5439__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_363); 
  _free_( _flat_364); 
  _free_( iv); 
  _free_( _isaa_28571_B); 
  _free_( _isaa_28574_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( long[*] A { ,NN } , long[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54920__isaa_28583_B { , NN } ; 
  int[.] _emal_54919__isaa_28586_A { , NN } ; 
  int[.] _emal_54918__flat_356 { , NN } ; 
  bool _emal_54917__flat_355 { , NN } ; 
  int _emal_54916__ivesli_48626 { , NN } ; 
  long _emal_54915__flat_362 { , NN } ; 
  int _emal_54914__ivesli_48625 { , NN } ; 
  long _emal_54913__flat_361 { , NN } ; 
  bool _emal_54911__flat_360 { , NN } ; 
  bool _ufiv_51703__pinl_5440__flat_298 { , NN } ; 
  int _ivesli_48626 { , NN } ; 
  int _ivesli_48625 { , NN } ; 
  int[.] _isaa_28586_A { , NN } ; 
  int[.] _isaa_28583_B { , NN } ; 
  long _ctz_10282 { , NN } ; 
  bool _pinl_5440__flat_298 { , NN } ; 
  bool _ea_2735_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_360 { , NN } ; 
  long _flat_361 { , NN } ; 
  long _flat_362 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_355 { , NN } ; 
  int[.] _flat_356 { , NN } ; 

  _emal_54920__isaa_28583_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28583_B = _fill_( _shape_A_( B), _emal_54920__isaa_28583_B); 
  _emal_54919__isaa_28586_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28586_A = _fill_( _shape_A_( A), _emal_54919__isaa_28586_A); 
  _emal_54918__flat_356 = _alloc_( 1, 1, _shape_A_( _isaa_28586_A)); 
  _flat_356 = _fill_( _mul_SxV_( 0, _isaa_28586_A), _emal_54918__flat_356); 
  _emal_54917__flat_355 = _alloc_( 1, 0, [:int]); 
  _flat_355 = _fill_( true, _emal_54917__flat_355); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_356)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_356 <= iv < _isaa_28586_A)
        { 
          _ea_2735_res = _accu_( iv, _flat_355); 
          _emal_54916__ivesli_48626 = _alloc_( 1, 0, [:int]); 
          _ivesli_48626 = _fill_( _vect2offset_( _isaa_28583_B, iv), _emal_54916__ivesli_48626); 
          _emal_54915__flat_362 = _alloc_( 1, 0, [:int]); 
          _flat_362 = _fill_( _idx_sel_( _ivesli_48626, B), _emal_54915__flat_362); 
          _free_( _ivesli_48626); 
          _emal_54914__ivesli_48625 = _alloc_( 1, 0, [:int]); 
          _ivesli_48625 = _fill_( _vect2offset_( _isaa_28586_A, iv), _emal_54914__ivesli_48625); 
          _emal_54913__flat_361 = _alloc_( 1, 0, [:int]); 
          _flat_361 = _fill_( _idx_sel_( _ivesli_48625, A), _emal_54913__flat_361); 
          _free_( _ivesli_48625); 
          _ctz_10282 = _fill_( _sub_SxS_( _flat_361, _flat_362), _flat_361); 
          _free_( _flat_362); 
          _emal_54911__flat_360 = _alloc_( 1, 0, [:int]); 
          _flat_360 = _fill_( _eq_SxS_( _ctz_10282, 0l), _emal_54911__flat_360); 
          _free_( _ctz_10282); 
          _pinl_5440__flat_298 = _fill_( _and_SxS_( _ea_2735_res, _flat_360), _flat_360); 
          _dec_rc_( _ea_2735_res, 1); 
          _ufiv_51703__pinl_5440__flat_298 = _unshare_( _pinl_5440__flat_298, iv); 
        } : _ufiv_51703__pinl_5440__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_355); 
  _free_( _flat_356); 
  _free_( iv); 
  _free_( _isaa_28583_B); 
  _free_( _isaa_28586_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( short[*] A { ,NN } , short[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54931__isaa_28595_B { , NN } ; 
  int[.] _emal_54930__isaa_28598_A { , NN } ; 
  int[.] _emal_54929__flat_348 { , NN } ; 
  bool _emal_54928__flat_347 { , NN } ; 
  int _emal_54927__ivesli_48628 { , NN } ; 
  short _emal_54926__flat_354 { , NN } ; 
  int _emal_54925__ivesli_48627 { , NN } ; 
  short _emal_54924__flat_353 { , NN } ; 
  bool _emal_54922__flat_352 { , NN } ; 
  bool _ufiv_51704__pinl_5441__flat_298 { , NN } ; 
  int _ivesli_48628 { , NN } ; 
  int _ivesli_48627 { , NN } ; 
  int[.] _isaa_28598_A { , NN } ; 
  int[.] _isaa_28595_B { , NN } ; 
  short _ctz_10286 { , NN } ; 
  bool _pinl_5441__flat_298 { , NN } ; 
  bool _ea_2737_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_352 { , NN } ; 
  short _flat_353 { , NN } ; 
  short _flat_354 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_347 { , NN } ; 
  int[.] _flat_348 { , NN } ; 

  _emal_54931__isaa_28595_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28595_B = _fill_( _shape_A_( B), _emal_54931__isaa_28595_B); 
  _emal_54930__isaa_28598_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28598_A = _fill_( _shape_A_( A), _emal_54930__isaa_28598_A); 
  _emal_54929__flat_348 = _alloc_( 1, 1, _shape_A_( _isaa_28598_A)); 
  _flat_348 = _fill_( _mul_SxV_( 0, _isaa_28598_A), _emal_54929__flat_348); 
  _emal_54928__flat_347 = _alloc_( 1, 0, [:int]); 
  _flat_347 = _fill_( true, _emal_54928__flat_347); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_348)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_348 <= iv < _isaa_28598_A)
        { 
          _ea_2737_res = _accu_( iv, _flat_347); 
          _emal_54927__ivesli_48628 = _alloc_( 1, 0, [:int]); 
          _ivesli_48628 = _fill_( _vect2offset_( _isaa_28595_B, iv), _emal_54927__ivesli_48628); 
          _emal_54926__flat_354 = _alloc_( 1, 0, [:int]); 
          _flat_354 = _fill_( _idx_sel_( _ivesli_48628, B), _emal_54926__flat_354); 
          _free_( _ivesli_48628); 
          _emal_54925__ivesli_48627 = _alloc_( 1, 0, [:int]); 
          _ivesli_48627 = _fill_( _vect2offset_( _isaa_28598_A, iv), _emal_54925__ivesli_48627); 
          _emal_54924__flat_353 = _alloc_( 1, 0, [:int]); 
          _flat_353 = _fill_( _idx_sel_( _ivesli_48627, A), _emal_54924__flat_353); 
          _free_( _ivesli_48627); 
          _ctz_10286 = _fill_( _sub_SxS_( _flat_353, _flat_354), _flat_353); 
          _free_( _flat_354); 
          _emal_54922__flat_352 = _alloc_( 1, 0, [:int]); 
          _flat_352 = _fill_( _eq_SxS_( _ctz_10286, 0s), _emal_54922__flat_352); 
          _free_( _ctz_10286); 
          _pinl_5441__flat_298 = _fill_( _and_SxS_( _ea_2737_res, _flat_352), _flat_352); 
          _dec_rc_( _ea_2737_res, 1); 
          _ufiv_51704__pinl_5441__flat_298 = _unshare_( _pinl_5441__flat_298, iv); 
        } : _ufiv_51704__pinl_5441__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_347); 
  _free_( _flat_348); 
  _free_( iv); 
  _free_( _isaa_28595_B); 
  _free_( _isaa_28598_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( byte[*] A { ,NN } , byte[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54942__isaa_28607_B { , NN } ; 
  int[.] _emal_54941__isaa_28610_A { , NN } ; 
  int[.] _emal_54940__flat_340 { , NN } ; 
  bool _emal_54939__flat_339 { , NN } ; 
  int _emal_54938__ivesli_48630 { , NN } ; 
  byte _emal_54937__flat_346 { , NN } ; 
  int _emal_54936__ivesli_48629 { , NN } ; 
  byte _emal_54935__flat_345 { , NN } ; 
  bool _emal_54933__flat_344 { , NN } ; 
  bool _ufiv_51705__pinl_5442__flat_298 { , NN } ; 
  int _ivesli_48630 { , NN } ; 
  int _ivesli_48629 { , NN } ; 
  int[.] _isaa_28610_A { , NN } ; 
  int[.] _isaa_28607_B { , NN } ; 
  byte _ctz_10290 { , NN } ; 
  bool _pinl_5442__flat_298 { , NN } ; 
  bool _ea_2739_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_344 { , NN } ; 
  byte _flat_345 { , NN } ; 
  byte _flat_346 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_339 { , NN } ; 
  int[.] _flat_340 { , NN } ; 

  _emal_54942__isaa_28607_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28607_B = _fill_( _shape_A_( B), _emal_54942__isaa_28607_B); 
  _emal_54941__isaa_28610_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28610_A = _fill_( _shape_A_( A), _emal_54941__isaa_28610_A); 
  _emal_54940__flat_340 = _alloc_( 1, 1, _shape_A_( _isaa_28610_A)); 
  _flat_340 = _fill_( _mul_SxV_( 0, _isaa_28610_A), _emal_54940__flat_340); 
  _emal_54939__flat_339 = _alloc_( 1, 0, [:int]); 
  _flat_339 = _fill_( true, _emal_54939__flat_339); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_340)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_340 <= iv < _isaa_28610_A)
        { 
          _ea_2739_res = _accu_( iv, _flat_339); 
          _emal_54938__ivesli_48630 = _alloc_( 1, 0, [:int]); 
          _ivesli_48630 = _fill_( _vect2offset_( _isaa_28607_B, iv), _emal_54938__ivesli_48630); 
          _emal_54937__flat_346 = _alloc_( 1, 0, [:int]); 
          _flat_346 = _fill_( _idx_sel_( _ivesli_48630, B), _emal_54937__flat_346); 
          _free_( _ivesli_48630); 
          _emal_54936__ivesli_48629 = _alloc_( 1, 0, [:int]); 
          _ivesli_48629 = _fill_( _vect2offset_( _isaa_28610_A, iv), _emal_54936__ivesli_48629); 
          _emal_54935__flat_345 = _alloc_( 1, 0, [:int]); 
          _flat_345 = _fill_( _idx_sel_( _ivesli_48629, A), _emal_54935__flat_345); 
          _free_( _ivesli_48629); 
          _ctz_10290 = _fill_( _sub_SxS_( _flat_345, _flat_346), _flat_345); 
          _free_( _flat_346); 
          _emal_54933__flat_344 = _alloc_( 1, 0, [:int]); 
          _flat_344 = _fill_( _eq_SxS_( _ctz_10290, 0b), _emal_54933__flat_344); 
          _free_( _ctz_10290); 
          _pinl_5442__flat_298 = _fill_( _and_SxS_( _ea_2739_res, _flat_344), _flat_344); 
          _dec_rc_( _ea_2739_res, 1); 
          _ufiv_51705__pinl_5442__flat_298 = _unshare_( _pinl_5442__flat_298, iv); 
        } : _ufiv_51705__pinl_5442__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_339); 
  _free_( _flat_340); 
  _free_( iv); 
  _free_( _isaa_28607_B); 
  _free_( _isaa_28610_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( char[*] A { ,NN } , char[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54952__isaa_28619_B { , NN } ; 
  int[.] _emal_54951__isaa_28622_A { , NN } ; 
  int[.] _emal_54950__flat_332 { , NN } ; 
  bool _emal_54949__flat_331 { , NN } ; 
  int _emal_54948__ivesli_48632 { , NN } ; 
  char _emal_54947__flat_338 { , NN } ; 
  int _emal_54946__ivesli_48631 { , NN } ; 
  char _emal_54945__flat_337 { , NN } ; 
  bool _emal_54944__flat_336 { , NN } ; 
  bool _ufiv_51706__pinl_5443__flat_298 { , NN } ; 
  int _ivesli_48632 { , NN } ; 
  int _ivesli_48631 { , NN } ; 
  int[.] _isaa_28622_A { , NN } ; 
  int[.] _isaa_28619_B { , NN } ; 
  bool _pinl_5443__flat_298 { , NN } ; 
  bool _ea_2741_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_336 { , NN } ; 
  char _flat_337 { , NN } ; 
  char _flat_338 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_331 { , NN } ; 
  int[.] _flat_332 { , NN } ; 

  _emal_54952__isaa_28619_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28619_B = _fill_( _shape_A_( B), _emal_54952__isaa_28619_B); 
  _emal_54951__isaa_28622_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28622_A = _fill_( _shape_A_( A), _emal_54951__isaa_28622_A); 
  _emal_54950__flat_332 = _alloc_( 1, 1, _shape_A_( _isaa_28622_A)); 
  _flat_332 = _fill_( _mul_SxV_( 0, _isaa_28622_A), _emal_54950__flat_332); 
  _emal_54949__flat_331 = _alloc_( 1, 0, [:int]); 
  _flat_331 = _fill_( true, _emal_54949__flat_331); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_332)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_332 <= iv < _isaa_28622_A)
        { 
          _ea_2741_res = _accu_( iv, _flat_331); 
          _emal_54948__ivesli_48632 = _alloc_( 1, 0, [:int]); 
          _ivesli_48632 = _fill_( _vect2offset_( _isaa_28619_B, iv), _emal_54948__ivesli_48632); 
          _emal_54947__flat_338 = _alloc_( 1, 0, [:int]); 
          _flat_338 = _fill_( _idx_sel_( _ivesli_48632, B), _emal_54947__flat_338); 
          _free_( _ivesli_48632); 
          _emal_54946__ivesli_48631 = _alloc_( 1, 0, [:int]); 
          _ivesli_48631 = _fill_( _vect2offset_( _isaa_28622_A, iv), _emal_54946__ivesli_48631); 
          _emal_54945__flat_337 = _alloc_( 1, 0, [:int]); 
          _flat_337 = _fill_( _idx_sel_( _ivesli_48631, A), _emal_54945__flat_337); 
          _free_( _ivesli_48631); 
          _emal_54944__flat_336 = _alloc_( 1, 0, [:int]); 
          _flat_336 = _fill_( _eq_SxS_( _flat_337, _flat_338), _emal_54944__flat_336); 
          _free_( _flat_338); 
          _free_( _flat_337); 
          _pinl_5443__flat_298 = _fill_( _and_SxS_( _ea_2741_res, _flat_336), _flat_336); 
          _dec_rc_( _ea_2741_res, 1); 
          _ufiv_51706__pinl_5443__flat_298 = _unshare_( _pinl_5443__flat_298, iv); 
        } : _ufiv_51706__pinl_5443__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_331); 
  _free_( _flat_332); 
  _free_( iv); 
  _free_( _isaa_28619_B); 
  _free_( _isaa_28622_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( bool[*] A { ,NN } , bool[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54962__isaa_28629_B { , NN } ; 
  int[.] _emal_54961__isaa_28632_A { , NN } ; 
  int[.] _emal_54960__flat_324 { , NN } ; 
  bool _emal_54959__flat_323 { , NN } ; 
  int _emal_54958__ivesli_48634 { , NN } ; 
  bool _emal_54957__flat_330 { , NN } ; 
  int _emal_54956__ivesli_48633 { , NN } ; 
  bool _emal_54955__flat_329 { , NN } ; 
  bool _ufiv_51707__pinl_5444__flat_298 { , NN } ; 
  int _ivesli_48634 { , NN } ; 
  int _ivesli_48633 { , NN } ; 
  int[.] _isaa_28632_A { , NN } ; 
  int[.] _isaa_28629_B { , NN } ; 
  bool _pinl_5444__flat_298 { , NN } ; 
  bool _ea_2743_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_328 { , NN } ; 
  bool _flat_329 { , NN } ; 
  bool _flat_330 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_323 { , NN } ; 
  int[.] _flat_324 { , NN } ; 

  _emal_54962__isaa_28629_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28629_B = _fill_( _shape_A_( B), _emal_54962__isaa_28629_B); 
  _emal_54961__isaa_28632_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28632_A = _fill_( _shape_A_( A), _emal_54961__isaa_28632_A); 
  _emal_54960__flat_324 = _alloc_( 1, 1, _shape_A_( _isaa_28632_A)); 
  _flat_324 = _fill_( _mul_SxV_( 0, _isaa_28632_A), _emal_54960__flat_324); 
  _emal_54959__flat_323 = _alloc_( 1, 0, [:int]); 
  _flat_323 = _fill_( true, _emal_54959__flat_323); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_324)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_324 <= iv < _isaa_28632_A)
        { 
          _ea_2743_res = _accu_( iv, _flat_323); 
          _emal_54958__ivesli_48634 = _alloc_( 1, 0, [:int]); 
          _ivesli_48634 = _fill_( _vect2offset_( _isaa_28629_B, iv), _emal_54958__ivesli_48634); 
          _emal_54957__flat_330 = _alloc_( 1, 0, [:int]); 
          _flat_330 = _fill_( _idx_sel_( _ivesli_48634, B), _emal_54957__flat_330); 
          _free_( _ivesli_48634); 
          _emal_54956__ivesli_48633 = _alloc_( 1, 0, [:int]); 
          _ivesli_48633 = _fill_( _vect2offset_( _isaa_28632_A, iv), _emal_54956__ivesli_48633); 
          _emal_54955__flat_329 = _alloc_( 1, 0, [:int]); 
          _flat_329 = _fill_( _idx_sel_( _ivesli_48633, A), _emal_54955__flat_329); 
          _free_( _ivesli_48633); 
          _flat_328 = _fill_( _eq_SxS_( _flat_329, _flat_330), _flat_329); 
          _free_( _flat_330); 
          _pinl_5444__flat_298 = _fill_( _and_SxS_( _ea_2743_res, _flat_328), _flat_328); 
          _dec_rc_( _ea_2743_res, 1); 
          _ufiv_51707__pinl_5444__flat_298 = _unshare_( _pinl_5444__flat_298, iv); 
        } : _ufiv_51707__pinl_5444__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_323); 
  _free_( _flat_324); 
  _free_( iv); 
  _free_( _isaa_28629_B); 
  _free_( _isaa_28632_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( double[*] A { ,NN } , double[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54973__isaa_28639_B { , NN } ; 
  int[.] _emal_54972__isaa_28642_A { , NN } ; 
  int[.] _emal_54971__flat_316 { , NN } ; 
  bool _emal_54970__flat_315 { , NN } ; 
  int _emal_54969__ivesli_48636 { , NN } ; 
  double _emal_54968__flat_322 { , NN } ; 
  int _emal_54967__ivesli_48635 { , NN } ; 
  double _emal_54966__flat_321 { , NN } ; 
  bool _emal_54964__flat_320 { , NN } ; 
  bool _ufiv_51708__pinl_5445__flat_298 { , NN } ; 
  int _ivesli_48636 { , NN } ; 
  int _ivesli_48635 { , NN } ; 
  int[.] _isaa_28642_A { , NN } ; 
  int[.] _isaa_28639_B { , NN } ; 
  double _ctz_10294 { , NN } ; 
  bool _pinl_5445__flat_298 { , NN } ; 
  bool _ea_2745_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_320 { , NN } ; 
  double _flat_321 { , NN } ; 
  double _flat_322 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_315 { , NN } ; 
  int[.] _flat_316 { , NN } ; 

  _emal_54973__isaa_28639_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28639_B = _fill_( _shape_A_( B), _emal_54973__isaa_28639_B); 
  _emal_54972__isaa_28642_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28642_A = _fill_( _shape_A_( A), _emal_54972__isaa_28642_A); 
  _emal_54971__flat_316 = _alloc_( 1, 1, _shape_A_( _isaa_28642_A)); 
  _flat_316 = _fill_( _mul_SxV_( 0, _isaa_28642_A), _emal_54971__flat_316); 
  _emal_54970__flat_315 = _alloc_( 1, 0, [:int]); 
  _flat_315 = _fill_( true, _emal_54970__flat_315); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_316)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_316 <= iv < _isaa_28642_A)
        { 
          _ea_2745_res = _accu_( iv, _flat_315); 
          _emal_54969__ivesli_48636 = _alloc_( 1, 0, [:int]); 
          _ivesli_48636 = _fill_( _vect2offset_( _isaa_28639_B, iv), _emal_54969__ivesli_48636); 
          _emal_54968__flat_322 = _alloc_( 1, 0, [:int]); 
          _flat_322 = _fill_( _idx_sel_( _ivesli_48636, B), _emal_54968__flat_322); 
          _free_( _ivesli_48636); 
          _emal_54967__ivesli_48635 = _alloc_( 1, 0, [:int]); 
          _ivesli_48635 = _fill_( _vect2offset_( _isaa_28642_A, iv), _emal_54967__ivesli_48635); 
          _emal_54966__flat_321 = _alloc_( 1, 0, [:int]); 
          _flat_321 = _fill_( _idx_sel_( _ivesli_48635, A), _emal_54966__flat_321); 
          _free_( _ivesli_48635); 
          _ctz_10294 = _fill_( _sub_SxS_( _flat_321, _flat_322), _flat_321); 
          _free_( _flat_322); 
          _emal_54964__flat_320 = _alloc_( 1, 0, [:int]); 
          _flat_320 = _fill_( _eq_SxS_( _ctz_10294, 0.0), _emal_54964__flat_320); 
          _free_( _ctz_10294); 
          _pinl_5445__flat_298 = _fill_( _and_SxS_( _ea_2745_res, _flat_320), _flat_320); 
          _dec_rc_( _ea_2745_res, 1); 
          _ufiv_51708__pinl_5445__flat_298 = _unshare_( _pinl_5445__flat_298, iv); 
        } : _ufiv_51708__pinl_5445__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_315); 
  _free_( _flat_316); 
  _free_( iv); 
  _free_( _isaa_28639_B); 
  _free_( _isaa_28642_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( float[*] A { ,NN } , float[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54984__isaa_28651_B { , NN } ; 
  int[.] _emal_54983__isaa_28654_A { , NN } ; 
  int[.] _emal_54982__flat_308 { , NN } ; 
  bool _emal_54981__flat_307 { , NN } ; 
  int _emal_54980__ivesli_48638 { , NN } ; 
  float _emal_54979__flat_314 { , NN } ; 
  int _emal_54978__ivesli_48637 { , NN } ; 
  float _emal_54977__flat_313 { , NN } ; 
  bool _emal_54975__flat_312 { , NN } ; 
  bool _ufiv_51709__pinl_5446__flat_298 { , NN } ; 
  int _ivesli_48638 { , NN } ; 
  int _ivesli_48637 { , NN } ; 
  int[.] _isaa_28654_A { , NN } ; 
  int[.] _isaa_28651_B { , NN } ; 
  float _ctz_10298 { , NN } ; 
  bool _pinl_5446__flat_298 { , NN } ; 
  bool _ea_2747_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_312 { , NN } ; 
  float _flat_313 { , NN } ; 
  float _flat_314 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_307 { , NN } ; 
  int[.] _flat_308 { , NN } ; 

  _emal_54984__isaa_28651_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28651_B = _fill_( _shape_A_( B), _emal_54984__isaa_28651_B); 
  _emal_54983__isaa_28654_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28654_A = _fill_( _shape_A_( A), _emal_54983__isaa_28654_A); 
  _emal_54982__flat_308 = _alloc_( 1, 1, _shape_A_( _isaa_28654_A)); 
  _flat_308 = _fill_( _mul_SxV_( 0, _isaa_28654_A), _emal_54982__flat_308); 
  _emal_54981__flat_307 = _alloc_( 1, 0, [:int]); 
  _flat_307 = _fill_( true, _emal_54981__flat_307); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_308)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_308 <= iv < _isaa_28654_A)
        { 
          _ea_2747_res = _accu_( iv, _flat_307); 
          _emal_54980__ivesli_48638 = _alloc_( 1, 0, [:int]); 
          _ivesli_48638 = _fill_( _vect2offset_( _isaa_28651_B, iv), _emal_54980__ivesli_48638); 
          _emal_54979__flat_314 = _alloc_( 1, 0, [:int]); 
          _flat_314 = _fill_( _idx_sel_( _ivesli_48638, B), _emal_54979__flat_314); 
          _free_( _ivesli_48638); 
          _emal_54978__ivesli_48637 = _alloc_( 1, 0, [:int]); 
          _ivesli_48637 = _fill_( _vect2offset_( _isaa_28654_A, iv), _emal_54978__ivesli_48637); 
          _emal_54977__flat_313 = _alloc_( 1, 0, [:int]); 
          _flat_313 = _fill_( _idx_sel_( _ivesli_48637, A), _emal_54977__flat_313); 
          _free_( _ivesli_48637); 
          _ctz_10298 = _fill_( _sub_SxS_( _flat_313, _flat_314), _flat_313); 
          _free_( _flat_314); 
          _emal_54975__flat_312 = _alloc_( 1, 0, [:int]); 
          _flat_312 = _fill_( _eq_SxS_( _ctz_10298, 0.0f), _emal_54975__flat_312); 
          _free_( _ctz_10298); 
          _pinl_5446__flat_298 = _fill_( _and_SxS_( _ea_2747_res, _flat_312), _flat_312); 
          _dec_rc_( _ea_2747_res, 1); 
          _ufiv_51709__pinl_5446__flat_298 = _unshare_( _pinl_5446__flat_298, iv); 
        } : _ufiv_51709__pinl_5446__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_307); 
  _free_( _flat_308); 
  _free_( iv); 
  _free_( _isaa_28651_B); 
  _free_( _isaa_28654_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_d::eq( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int[.] _emal_54995__isaa_28663_B { , NN } ; 
  int[.] _emal_54994__isaa_28666_A { , NN } ; 
  int[.] _emal_54993__flat_300 { , NN } ; 
  bool _emal_54992__flat_299 { , NN } ; 
  int _emal_54991__ivesli_48640 { , NN } ; 
  int _emal_54990__flat_306 { , NN } ; 
  int _emal_54989__ivesli_48639 { , NN } ; 
  int _emal_54988__flat_305 { , NN } ; 
  bool _emal_54986__flat_304 { , NN } ; 
  bool _ufiv_51710__pinl_5447__flat_298 { , NN } ; 
  int _ivesli_48640 { , NN } ; 
  int _ivesli_48639 { , NN } ; 
  int[.] _isaa_28666_A { , NN } ; 
  int[.] _isaa_28663_B { , NN } ; 
  int _ctz_10302 { , NN } ; 
  bool _pinl_5447__flat_298 { , NN } ; 
  bool _ea_2749_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_304 { , NN } ; 
  int _flat_305 { , NN } ; 
  int _flat_306 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_299 { , NN } ; 
  int[.] _flat_300 { , NN } ; 

  _emal_54995__isaa_28663_B = _alloc_( 1, 1, _shape_A_( _shape_A_( B))); 
  _isaa_28663_B = _fill_( _shape_A_( B), _emal_54995__isaa_28663_B); 
  _emal_54994__isaa_28666_A = _alloc_( 1, 1, _shape_A_( _shape_A_( A))); 
  _isaa_28666_A = _fill_( _shape_A_( A), _emal_54994__isaa_28666_A); 
  _emal_54993__flat_300 = _alloc_( 1, 1, _shape_A_( _isaa_28666_A)); 
  _flat_300 = _fill_( _mul_SxV_( 0, _isaa_28666_A), _emal_54993__flat_300); 
  _emal_54992__flat_299 = _alloc_( 1, 0, [:int]); 
  _flat_299 = _fill_( true, _emal_54992__flat_299); 
  iv = _alloc_( 1, 1, _shape_A_( _flat_300)); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_300 <= iv < _isaa_28666_A)
        { 
          _ea_2749_res = _accu_( iv, _flat_299); 
          _emal_54991__ivesli_48640 = _alloc_( 1, 0, [:int]); 
          _ivesli_48640 = _fill_( _vect2offset_( _isaa_28663_B, iv), _emal_54991__ivesli_48640); 
          _emal_54990__flat_306 = _alloc_( 1, 0, [:int]); 
          _flat_306 = _fill_( _idx_sel_( _ivesli_48640, B), _emal_54990__flat_306); 
          _free_( _ivesli_48640); 
          _emal_54989__ivesli_48639 = _alloc_( 1, 0, [:int]); 
          _ivesli_48639 = _fill_( _vect2offset_( _isaa_28666_A, iv), _emal_54989__ivesli_48639); 
          _emal_54988__flat_305 = _alloc_( 1, 0, [:int]); 
          _flat_305 = _fill_( _idx_sel_( _ivesli_48639, A), _emal_54988__flat_305); 
          _free_( _ivesli_48639); 
          _ctz_10302 = _fill_( _sub_SxS_( _flat_305, _flat_306), _flat_305); 
          _free_( _flat_306); 
          _emal_54986__flat_304 = _alloc_( 1, 0, [:int]); 
          _flat_304 = _fill_( _eq_SxS_( _ctz_10302, 0), _emal_54986__flat_304); 
          _free_( _ctz_10302); 
          _pinl_5447__flat_298 = _fill_( _and_SxS_( _ea_2749_res, _flat_304), _flat_304); 
          _dec_rc_( _ea_2749_res, 1); 
          _ufiv_51710__pinl_5447__flat_298 = _unshare_( _pinl_5447__flat_298, iv); 
        } : _ufiv_51710__pinl_5447__flat_298 ; 
         } :
      fold( sacprelude_d::and(), _flat_299); 
  _free_( _flat_300); 
  _free_( iv); 
  _free_( _isaa_28663_B); 
  _free_( _isaa_28666_A); 
  _dec_rc_( B, 1); 
  _dec_rc_( A, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::isPartitionIntersectNull(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_d::isPartitionIntersectNull( int[.] idxmin { ,NN } , int[.] idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */
{ 
  int[.] _emal_55000__ctz_10308 { , NN } ; 
  bool[.] _emal_54999__flat_460 { , NN } ; 
  int[.] _emal_54998__ctz_10306 { , NN } ; 
  bool[.] _emal_54997__flat_459 { , NN } ; 
  bool[.] _emal_54996_z { , NN } ; 
  int[.] _ctz_10308 { , NN } ; 
  int[.] _ctz_10306 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_459 { , NN } ; 
  bool[.] _flat_460 { , NN } ; 

  _emal_55000__ctz_10308 = _alloc_( 1, 1, _shape_A_( bound2)); 
  _ctz_10308 = _fill_( _sub_VxV_( idxmin, bound2), _emal_55000__ctz_10308); 
  _dec_rc_( bound2, 1); 
  _dec_rc_( idxmin, 1); 
  _emal_54999__flat_460 = _alloc_( 1, 1, _shape_A_( _ctz_10308)); 
  _flat_460 = _fill_( _ge_VxS_( _ctz_10308, 0), _emal_54999__flat_460); 
  _free_( _ctz_10308); 
  _emal_54998__ctz_10306 = _alloc_( 1, 1, _shape_A_( bound1)); 
  _ctz_10306 = _fill_( _sub_VxV_( idxmax, bound1), _emal_54998__ctz_10306); 
  _dec_rc_( bound1, 1); 
  _dec_rc_( idxmax, 1); 
  _emal_54997__flat_459 = _alloc_( 1, 1, _shape_A_( _ctz_10306)); 
  _flat_459 = _fill_( _lt_VxS_( _ctz_10306, 0), _emal_54997__flat_459); 
  _free_( _ctz_10306); 
  _emal_54996_z = _alloc_( 1, 1, _shape_A_( _flat_460)); 
  z = _fill_( _or_VxV_( _flat_459, _flat_460), _emal_54996_z); 
  _free_( _flat_460); 
  _free_( _flat_459); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::isPartitionIntersectNull(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_d::isPartitionIntersectNull( int idxmin { ,NN } , int idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */
{ 
  int[.] _emal_55005__ctz_10316 { , NN } ; 
  bool[.] _emal_55004__flat_462 { , NN } ; 
  int[.] _emal_55003__ctz_10314 { , NN } ; 
  bool[.] _emal_55002__flat_461 { , NN } ; 
  bool[.] _emal_55001_z { , NN } ; 
  int[.] _ctz_10316 { , NN } ; 
  int[.] _ctz_10314 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_461 { , NN } ; 
  bool[.] _flat_462 { , NN } ; 

  _emal_55005__ctz_10316 = _alloc_( 1, 1, _shape_A_( bound2)); 
  _ctz_10316 = _fill_( _sub_SxV_( idxmin, bound2), _emal_55005__ctz_10316); 
  _dec_rc_( bound2, 1); 
  _dec_rc_( idxmin, 1); 
  _emal_55004__flat_462 = _alloc_( 1, 1, _shape_A_( _ctz_10316)); 
  _flat_462 = _fill_( _ge_VxS_( _ctz_10316, 0), _emal_55004__flat_462); 
  _free_( _ctz_10316); 
  _emal_55003__ctz_10314 = _alloc_( 1, 1, _shape_A_( bound1)); 
  _ctz_10314 = _fill_( _sub_SxV_( idxmax, bound1), _emal_55003__ctz_10314); 
  _dec_rc_( bound1, 1); 
  _dec_rc_( idxmax, 1); 
  _emal_55002__flat_461 = _alloc_( 1, 1, _shape_A_( _ctz_10314)); 
  _flat_461 = _fill_( _lt_VxS_( _ctz_10314, 0), _emal_55002__flat_461); 
  _free_( _ctz_10314); 
  _emal_55001_z = _alloc_( 1, 1, _shape_A_( _flat_462)); 
  z = _fill_( _or_VxV_( _flat_461, _flat_462), _emal_55001_z); 
  _free_( _flat_462); 
  _free_( _flat_461); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_d::partitionMin( int x { ,NN } , int y { ,NN } )
/*
 *  partitionMin ::  ---
 */
{ 
  int _emal_55006_z { , NN } ; 
  int z { , NN } ; 

  _emal_55006_z = _alloc_( 1, 0, [:int]); 
  z = _fill_( _min_SxS_( y, x), _emal_55006_z); 
  _dec_rc_( x, 1); 
  _dec_rc_( y, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_d::partitionMax( int x { ,NN } , int y { ,NN } )
/*
 *  partitionMax ::  ---
 */
{ 
  int _emal_55007_z { , NN } ; 
  int z { , NN } ; 

  _emal_55007_z = _alloc_( 1, 0, [:int]); 
  z = _fill_( _max_SxS_( y, x), _emal_55007_z); 
  _dec_rc_( x, 1); 
  _dec_rc_( y, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::isPartitionIntersect1Part(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_d::isPartitionIntersect1Part( int[.] idxmin { ,NN } , int[.] idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */
{ 
  int[.] _emal_55012__ctz_10324 { , NN } ; 
  bool[.] _emal_55011__flat_464 { , NN } ; 
  int[.] _emal_55010__ctz_10322 { , NN } ; 
  bool[.] _emal_55009__flat_463 { , NN } ; 
  bool[.] _emal_55008_z { , NN } ; 
  int[.] _ctz_10324 { , NN } ; 
  int[.] _ctz_10322 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_463 { , NN } ; 
  bool[.] _flat_464 { , NN } ; 

  _emal_55012__ctz_10324 = _alloc_( 1, 1, _shape_A_( bound2)); 
  _ctz_10324 = _fill_( _sub_VxV_( idxmax, bound2), _emal_55012__ctz_10324); 
  _dec_rc_( bound2, 1); 
  _dec_rc_( idxmax, 1); 
  _emal_55011__flat_464 = _alloc_( 1, 1, _shape_A_( _ctz_10324)); 
  _flat_464 = _fill_( _le_VxS_( _ctz_10324, 0), _emal_55011__flat_464); 
  _free_( _ctz_10324); 
  _emal_55010__ctz_10322 = _alloc_( 1, 1, _shape_A_( bound1)); 
  _ctz_10322 = _fill_( _sub_VxV_( idxmin, bound1), _emal_55010__ctz_10322); 
  _dec_rc_( bound1, 1); 
  _dec_rc_( idxmin, 1); 
  _emal_55009__flat_463 = _alloc_( 1, 1, _shape_A_( _ctz_10322)); 
  _flat_463 = _fill_( _ge_VxS_( _ctz_10322, 0), _emal_55009__flat_463); 
  _free_( _ctz_10322); 
  _emal_55008_z = _alloc_( 1, 1, _shape_A_( _flat_464)); 
  z = _fill_( _and_VxV_( _flat_463, _flat_464), _emal_55008_z); 
  _free_( _flat_464); 
  _free_( _flat_463); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::isPartitionIntersect1Part(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_d::isPartitionIntersect1Part( int idxmin { ,NN } , int idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */
{ 
  int[.] _emal_55017__ctz_10332 { , NN } ; 
  bool[.] _emal_55016__flat_466 { , NN } ; 
  int[.] _emal_55015__ctz_10330 { , NN } ; 
  bool[.] _emal_55014__flat_465 { , NN } ; 
  bool[.] _emal_55013_z { , NN } ; 
  int[.] _ctz_10332 { , NN } ; 
  int[.] _ctz_10330 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_465 { , NN } ; 
  bool[.] _flat_466 { , NN } ; 

  _emal_55017__ctz_10332 = _alloc_( 1, 1, _shape_A_( bound2)); 
  _ctz_10332 = _fill_( _sub_SxV_( idxmax, bound2), _emal_55017__ctz_10332); 
  _dec_rc_( bound2, 1); 
  _dec_rc_( idxmax, 1); 
  _emal_55016__flat_466 = _alloc_( 1, 1, _shape_A_( _ctz_10332)); 
  _flat_466 = _fill_( _le_VxS_( _ctz_10332, 0), _emal_55016__flat_466); 
  _free_( _ctz_10332); 
  _emal_55015__ctz_10330 = _alloc_( 1, 1, _shape_A_( bound1)); 
  _ctz_10330 = _fill_( _sub_SxV_( idxmin, bound1), _emal_55015__ctz_10330); 
  _dec_rc_( bound1, 1); 
  _dec_rc_( idxmin, 1); 
  _emal_55014__flat_465 = _alloc_( 1, 1, _shape_A_( _ctz_10330)); 
  _flat_465 = _fill_( _ge_VxS_( _ctz_10330, 0), _emal_55014__flat_465); 
  _free_( _ctz_10330); 
  _emal_55013_z = _alloc_( 1, 1, _shape_A_( _flat_466)); 
  z = _fill_( _and_VxV_( _flat_465, _flat_466), _emal_55013_z); 
  _free_( _flat_466); 
  _free_( _flat_465); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionIntersectMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_d::partitionIntersectMax( int[.] PWLbound1 { ,NN } , int[.] ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */
{ 
  int[.] _emal_55018_z { , NN } ; 
  int[.] z { , NN } ; 

  _emal_55018_z = _alloc_( 1, 1, _shape_A_( PWLbound1)); 
  z = _fill_( _max_VxV_( ivmin, PWLbound1), _emal_55018_z); 
  _dec_rc_( PWLbound1, 1); 
  _dec_rc_( ivmin, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionIntersectMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_d::partitionIntersectMax( int[.] PWLbound1 { ,NN } , int ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */
{ 
  int[.] _emal_55019_z { , NN } ; 
  int[.] z { , NN } ; 

  _emal_55019_z = _alloc_( 1, 1, _shape_A_( PWLbound1)); 
  z = _fill_( _max_SxV_( ivmin, PWLbound1), _emal_55019_z); 
  _dec_rc_( PWLbound1, 1); 
  _dec_rc_( ivmin, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionIntersectMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_d::partitionIntersectMin( int[.] PWLbound2 { ,NN } , int[.] ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */
{ 
  int[.] _emal_55020_z { , NN } ; 
  int[.] z { , NN } ; 

  _emal_55020_z = _alloc_( 1, 1, _shape_A_( PWLbound2)); 
  z = _fill_( _min_VxV_( ivmax, PWLbound2), _emal_55020_z); 
  _dec_rc_( PWLbound2, 1); 
  _dec_rc_( ivmax, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::partitionIntersectMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_d::partitionIntersectMin( int[.] PWLbound2 { ,NN } , int ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */
{ 
  int[.] _emal_55021_z { , NN } ; 
  int[.] z { , NN } ; 

  _emal_55021_z = _alloc_( 1, 1, _shape_A_( PWLbound2)); 
  z = _fill_( _min_SxV_( ivmax, PWLbound2), _emal_55021_z); 
  _dec_rc_( PWLbound2, 1); 
  _dec_rc_( ivmax, 1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_d::prod(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_d::prod( int[.] v { ,NN } )
/*
 *  prod ::  ---
 */
{ 
  int _emal_55028__isaa_28798_v { , NN } ; 
  int[1] _emal_55027__isaa_28799_v { , NN } ; 
  int _emal_55026__flat_414 { , NN } ; 
  int _emal_55025__wlbsc_2787_sc_e { , NN } ; 
  int _emal_55024__ivesli_48641 { , NN } ; 
  int _emal_55023__flat_417 { , NN } ; 
  int _ufiv_51711__pinl_5448__flat_411 { , NN } ; 
  int _ivesli_48641 { , NN } ; 
  int[1] _isaa_28799_v { , NN } ; 
  int{1} _isaa_28798_v { , NN } ; 
  int _pinl_5448__flat_411 { , NN } ; 
  int _wlbsc_2787_sc_e { , NN } ; 
  int _ea_2751_res { , NN } ; 
  int res { , NN } ; 
  int _flat_417 { , NN } ; 
  int i { , NN } ; 
  int[1] _flat_416 { , NN } ; 
  int{0} _flat_414 { , NN } ; 

  _emal_55028__isaa_28798_v = _alloc_( 1, 0, [:int]); 
  _isaa_28798_v = _fill_( 1, _emal_55028__isaa_28798_v); 
  _emal_55027__isaa_28799_v = _alloc_( 1, 1, [ 1 ]); 
  _isaa_28799_v = _fill_( _shape_A_( v), _emal_55027__isaa_28799_v); 
  _emal_55026__flat_414 = _alloc_( 1, 0, [:int]); 
  _flat_414 = _fill_( 0, _emal_55026__flat_414); 
  _emal_55025__wlbsc_2787_sc_e = _alloc_( 1, 0, [:int]); 
  _wlbsc_2787_sc_e = _fill_( _idx_sel_( _flat_414, _isaa_28799_v), _emal_55025__wlbsc_2787_sc_e); 
  _free_( _flat_414); 
  i = _alloc_( 1, 0, [:int]); 
  res = with2 (_flat_416=[i])
      /********** operators: **********/
      op_0 =
        { 
          _ea_2751_res = _accu_( _flat_416, _isaa_28798_v); 
          _emal_55024__ivesli_48641 = _alloc_( 1, 0, [:int]); 
          _ivesli_48641 = _fill_( _idxs2offset_( _isaa_28799_v, i), _emal_55024__ivesli_48641); 
          _emal_55023__flat_417 = _alloc_( 1, 0, [:int]); 
          _flat_417 = _fill_( _idx_sel_( _ivesli_48641, v), _emal_55023__flat_417); 
          _free_( _ivesli_48641); 
          _pinl_5448__flat_411 = _fill_( _mul_SxS_( _ea_2751_res, _flat_417), _flat_417); 
          _dec_rc_( _ea_2751_res, 1); 
          _ufiv_51711__pinl_5448__flat_411 = _unshare_( _pinl_5448__flat_411, _flat_416); 
        } : _ufiv_51711__pinl_5448__flat_411 ; 
      /********** (var.) segment 0: **********
       * index domain: [ 0 ] -> [ _wlbsc_2787_sc_e ]
       */
      (0 => _wlbsc_2787_sc_e), step0[0] 1
        (0 --> 1): op_0
      /********** conexpr: **********/
      fold( sacprelude_d::*(), _isaa_28798_v); 
  _free_( _wlbsc_2787_sc_e); 
  _free_( i); 
  _free_( _isaa_28799_v); 
  _dec_rc_( v, 1); 
  return( res); 
}



/****************************************************************************
 * sacprelude_d::partitionSlicer(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.], int[.], int[.], int[.] sacprelude_d::partitionSlicer( int[.] min { ,NN } , int[.] max { ,NN } , int axis { ,NN } , int[.] lb { ,NN } , int[.] ub { ,NN } )
/*
 *  partitionSlicer ::  ---
 */
{ 
  bool _emrb_55242_val { , NN } ; 
  bool _emrb_55241_mem { , NN } ; 
  bool _emrb_55235_val { , NN } ; 
  bool _emrb_55234_mem { , NN } ; 
  int _emal_55039_lb_i { , NN } ; 
  int _emal_55038__flat_435 { , NN } ; 
  int[.] _emal_55036__emec_51731_max { , NN } ; 
  int[.] _emal_55034__emec_51730_min { , NN } ; 
  int[.] _emal_55032__emec_51729_min { , NN } ; 
  int[.] _emal_55030__emec_51728_max { , NN } ; 
  int[.] _emec_51731_max { , NN } ; 
  int[.] _emec_51730_min { , NN } ; 
  int[.] _emec_51729_min { , NN } ; 
  int[.] _emec_51728_max { , NN } ; 
  int _pinl_5449_z { , NN } ; 
  int[.] new_max { , NN } ; 
  int[.] new_min { , NN } ; 
  int[.] min_upper { , NN } ; 
  int[.] max_lower { , NN } ; 
  int _flat_435 { , NN } ; 
  int lb_i { , NN } ; 

  _emal_55039_lb_i = _alloc_( 1, 0, [:int]); 
  lb_i = _fill_( _idx_sel_( axis, lb), _emal_55039_lb_i); 
  _dec_rc_( lb, 1); 
  _emal_55038__flat_435 = _alloc_( 1, 0, [:int]); 
  _flat_435 = _fill_( _idx_sel_( axis, ub), _emal_55038__flat_435); 
  _dec_rc_( ub, 1); 
  _pinl_5449_z = _fill_( _max_SxS_( _flat_435, lb_i), _flat_435); 
  _emal_55036__emec_51731_max = _alloc_( 1, 1, _shape_A_( max)); 
  _emec_51731_max = _fill_( _copy_( max), _emal_55036__emec_51731_max); 
  max_lower = _fill_( _idx_modarray_AxSxS_( _emec_51731_max, axis, lb_i), _emec_51731_max); 
  _emal_55034__emec_51730_min = _alloc_( 1, 1, _shape_A_( min)); 
  _emec_51730_min = _fill_( _copy_( min), _emal_55034__emec_51730_min); 
  min_upper = _fill_( _idx_modarray_AxSxS_( _emec_51730_min, axis, _pinl_5449_z), _emec_51730_min); 
  _emal_55032__emec_51729_min = _alloc_or_reuse_( 1, 1, _shape_A_( min), min); 
  _emrb_55241_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55242_val = _fill_( _isreused_( _emal_55032__emec_51729_min, min), _emrb_55241_mem); 
  _emec_51729_min = sacprelude_d::partitionSlicer__ReuseCond_3( _emrb_55242_val, _emal_55032__emec_51729_min, min) ; 
  new_min = _fill_( _idx_modarray_AxSxS_( _emec_51729_min, axis, lb_i), _emec_51729_min); 
  _free_( lb_i); 
  _emal_55030__emec_51728_max = _alloc_or_reuse_( 1, 1, _shape_A_( max), max); 
  _emrb_55234_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55235_val = _fill_( _isreused_( _emal_55030__emec_51728_max, max), _emrb_55234_mem); 
  _emec_51728_max = sacprelude_d::partitionSlicer__ReuseCond_2( _emrb_55235_val, _emal_55030__emec_51728_max, max) ; 
  new_max = _fill_( _idx_modarray_AxSxS_( _emec_51728_max, axis, _pinl_5449_z), _emec_51728_max); 
  _free_( _pinl_5449_z); 
  _dec_rc_( axis, 1); 
  return( max_lower, min_upper, new_min, new_max); 
}



/****************************************************************************
 * Cond function:
 * sacprelude_d::partitionSlicer__ReuseCond_3(...) [ body ]
 ****************************************************************************/
int[.] sacprelude_d::partitionSlicer__ReuseCond_3( bool _emrb_55237 { ,NN } , int[.] _emal_55032__emec_51729_min { ,NN } , int[.] min { ,NN } )
/*
 *  partitionSlicer__ReuseCond_3 ::  ---
 */
{ 
  int[.] _emrb_55240 { , NN } ; 
  int[.] _dup_55239__emec_51729_min { , NN } ; 
  int[.] _dup_55238__emec_51729_min { , NN } ; 

  if (_emrb_55237) 
  { 
    _dec_rc_( min, 1); 
    _dec_rc_( _emrb_55237, 1); 
    _dup_55238__emec_51729_min = _fill_( _noop_( min), _emal_55032__emec_51729_min); 
  }
  else
  { 
    _dec_rc_( _emrb_55237, 1); 
    _dup_55239__emec_51729_min = _fill_( _copy_( min), _emal_55032__emec_51729_min); 
    _dec_rc_( min, 1); 
  }
  _emrb_55240 = ( _emrb_55237 ? _dup_55238__emec_51729_min : _dup_55239__emec_51729_min ); 
  return( _emrb_55240); 
}



/****************************************************************************
 * Cond function:
 * sacprelude_d::partitionSlicer__ReuseCond_2(...) [ body ]
 ****************************************************************************/
int[.] sacprelude_d::partitionSlicer__ReuseCond_2( bool _emrb_55230 { ,NN } , int[.] _emal_55030__emec_51728_max { ,NN } , int[.] max { ,NN } )
/*
 *  partitionSlicer__ReuseCond_2 ::  ---
 */
{ 
  int[.] _emrb_55233 { , NN } ; 
  int[.] _dup_55232__emec_51728_max { , NN } ; 
  int[.] _dup_55231__emec_51728_max { , NN } ; 

  if (_emrb_55230) 
  { 
    _dec_rc_( max, 1); 
    _dec_rc_( _emrb_55230, 1); 
    _dup_55231__emec_51728_max = _fill_( _noop_( max), _emal_55030__emec_51728_max); 
  }
  else
  { 
    _dec_rc_( _emrb_55230, 1); 
    _dup_55232__emec_51728_max = _fill_( _copy_( max), _emal_55030__emec_51728_max); 
    _dec_rc_( max, 1); 
  }
  _emrb_55233 = ( _emrb_55230 ? _dup_55231__emec_51728_max : _dup_55232__emec_51728_max ); 
  return( _emrb_55233); 
}



/****************************************************************************
 * sacprelude_d::gridFiller(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.], int[.], int[.] sacprelude_d::gridFiller( int[.] lb { ,NN } , int[.] ub { ,NN } , int[.] wdth { ,NN } , int dim { ,NN } , int[.] maxwidth { ,NN } )
/*
 *  gridFiller ::  ---
 */
{ 
  bool _emrb_55228_val { , NN } ; 
  bool _emrb_55227_mem { , NN } ; 
  bool _emrb_55221_val { , NN } ; 
  bool _emrb_55220_mem { , NN } ; 
  int _emal_55053__flat_446 { , NN } ; 
  int _emal_55052__flat_444 { , NN } ; 
  int _emal_55051__flat_442 { , NN } ; 
  int _emal_55048__flat_449 { , NN } ; 
  int[.] _emal_55045__emec_51734_lb { , NN } ; 
  int[.] _emal_55043__emec_51733_maxwidth { , NN } ; 
  int[.] _emal_55041__emec_51732_maxwidth { , NN } ; 
  int[.] _emec_51734_lb { , NN } ; 
  int[.] _emec_51733_maxwidth { , NN } ; 
  int[.] _emec_51732_maxwidth { , NN } ; 
  int _pinl_5450_z { , NN } ; 
  int _pinl_5451_z { , NN } ; 
  int[.] nmaxwidth { , NN } ; 
  int[.] nwidth { , NN } ; 
  int[.] nlb { , NN } ; 
  int _flat_448 { , NN } ; 
  int _flat_449 { , NN } ; 
  int _flat_441 { , NN } ; 
  int _flat_442 { , NN } ; 
  int _flat_444 { , NN } ; 
  int _flat_446 { , NN } ; 

  _emal_55053__flat_446 = _alloc_( 1, 0, [:int]); 
  _flat_446 = _fill_( _idx_sel_( dim, ub), _emal_55053__flat_446); 
  _dec_rc_( ub, 1); 
  _emal_55052__flat_444 = _alloc_( 1, 0, [:int]); 
  _flat_444 = _fill_( _idx_sel_( dim, wdth), _emal_55052__flat_444); 
  _dec_rc_( wdth, 1); 
  _emal_55051__flat_442 = _alloc_( 1, 0, [:int]); 
  _flat_442 = _fill_( _idx_sel_( dim, lb), _emal_55051__flat_442); 
  _flat_441 = _fill_( _add_SxS_( _flat_442, _flat_444), _flat_442); 
  _pinl_5450_z = _fill_( _min_SxS_( _flat_441, _flat_446), _flat_441); 
  _free_( _flat_446); 
  _emal_55048__flat_449 = _alloc_( 1, 0, [:int]); 
  _flat_449 = _fill_( _idx_sel_( dim, maxwidth), _emal_55048__flat_449); 
  _flat_448 = _fill_( _sub_SxS_( _flat_449, _flat_444), _flat_449); 
  _pinl_5451_z = _fill_( _max_SxS_( _flat_448, 0), _flat_448); 
  _emal_55045__emec_51734_lb = _alloc_or_reuse_( 1, 1, _shape_A_( lb), lb); 
  _emrb_55227_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55228_val = _fill_( _isreused_( _emal_55045__emec_51734_lb, lb), _emrb_55227_mem); 
  _emec_51734_lb = sacprelude_d::gridFiller__ReuseCond_1( _emrb_55228_val, _emal_55045__emec_51734_lb, lb) ; 
  nlb = _fill_( _idx_modarray_AxSxS_( _emec_51734_lb, dim, _pinl_5450_z), _emec_51734_lb); 
  _free_( _pinl_5450_z); 
  _emal_55043__emec_51733_maxwidth = _alloc_( 1, 1, _shape_A_( maxwidth)); 
  _emec_51733_maxwidth = _fill_( _copy_( maxwidth), _emal_55043__emec_51733_maxwidth); 
  nwidth = _fill_( _idx_modarray_AxSxS_( _emec_51733_maxwidth, dim, _pinl_5451_z), _emec_51733_maxwidth); 
  _free_( _pinl_5451_z); 
  _emal_55041__emec_51732_maxwidth = _alloc_or_reuse_( 1, 1, _shape_A_( maxwidth), maxwidth); 
  _emrb_55220_mem = _alloc_( 1, 0, [:int]); 
  _emrb_55221_val = _fill_( _isreused_( _emal_55041__emec_51732_maxwidth, maxwidth), _emrb_55220_mem); 
  _emec_51732_maxwidth = sacprelude_d::gridFiller__ReuseCond_0( _emrb_55221_val, _emal_55041__emec_51732_maxwidth, maxwidth) ; 
  nmaxwidth = _fill_( _idx_modarray_AxSxS_( _emec_51732_maxwidth, dim, _flat_444), _emec_51732_maxwidth); 
  _free_( _flat_444); 
  _dec_rc_( dim, 1); 
  return( nlb, nwidth, nmaxwidth); 
}



/****************************************************************************
 * Cond function:
 * sacprelude_d::gridFiller__ReuseCond_1(...) [ body ]
 ****************************************************************************/
int[.] sacprelude_d::gridFiller__ReuseCond_1( bool _emrb_55223 { ,NN } , int[.] _emal_55045__emec_51734_lb { ,NN } , int[.] lb { ,NN } )
/*
 *  gridFiller__ReuseCond_1 ::  ---
 */
{ 
  int[.] _emrb_55226 { , NN } ; 
  int[.] _dup_55225__emec_51734_lb { , NN } ; 
  int[.] _dup_55224__emec_51734_lb { , NN } ; 

  if (_emrb_55223) 
  { 
    _dec_rc_( lb, 1); 
    _dec_rc_( _emrb_55223, 1); 
    _dup_55224__emec_51734_lb = _fill_( _noop_( lb), _emal_55045__emec_51734_lb); 
  }
  else
  { 
    _dec_rc_( _emrb_55223, 1); 
    _dup_55225__emec_51734_lb = _fill_( _copy_( lb), _emal_55045__emec_51734_lb); 
    _dec_rc_( lb, 1); 
  }
  _emrb_55226 = ( _emrb_55223 ? _dup_55224__emec_51734_lb : _dup_55225__emec_51734_lb ); 
  return( _emrb_55226); 
}



/****************************************************************************
 * Cond function:
 * sacprelude_d::gridFiller__ReuseCond_0(...) [ body ]
 ****************************************************************************/
int[.] sacprelude_d::gridFiller__ReuseCond_0( bool _emrb_55216 { ,NN } , int[.] _emal_55041__emec_51732_maxwidth { ,NN } , int[.] maxwidth { ,NN } )
/*
 *  gridFiller__ReuseCond_0 ::  ---
 */
{ 
  int[.] _emrb_55219 { , NN } ; 
  int[.] _dup_55218__emec_51732_maxwidth { , NN } ; 
  int[.] _dup_55217__emec_51732_maxwidth { , NN } ; 

  if (_emrb_55216) 
  { 
    _dec_rc_( maxwidth, 1); 
    _dec_rc_( _emrb_55216, 1); 
    _dup_55217__emec_51732_maxwidth = _fill_( _noop_( maxwidth), _emal_55041__emec_51732_maxwidth); 
  }
  else
  { 
    _dec_rc_( _emrb_55216, 1); 
    _dup_55218__emec_51732_maxwidth = _fill_( _copy_( maxwidth), _emal_55041__emec_51732_maxwidth); 
    _dec_rc_( maxwidth, 1); 
  }
  _emrb_55219 = ( _emrb_55216 ? _dup_55217__emec_51732_maxwidth : _dup_55218__emec_51732_maxwidth ); 
  return( _emrb_55219); 
}



/****************************************************************************
 * _MAIN:StdIO::print(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * _MAIN:StdIO::print( hidden *_rso_361_TheTerminal { ,NN } , hidden *_rso_360_stdout { ,NN } , int[2] arr { ,NN } )
/*
 *  print ::  ---
 */
{ 
  hidden _rso_360_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */

  _rso_360_stdout__SSA0_1 = ArrayIO::print( _rso_360_stdout, arr) ; 
  return( _rso_361_TheTerminal, _rso_360_stdout__SSA0_1); 
}



/****************************************************************************
 * sacprelude_d::*(...) [ body ]
 ****************************************************************************/
inline
int sacprelude_d::*( int a { ,NN } , int b { ,NN } )
/*
 *  * ::  ---
 */
{ 
  int _emal_55054__flat_411 { , NN } ; 
  int _flat_411 { , NN } ; 

  _emal_55054__flat_411 = _alloc_( 1, 0, [:int]); 
  _flat_411 = _fill_( _mul_SxS_( b, a), _emal_55054__flat_411); 
  _dec_rc_( a, 1); 
  _dec_rc_( b, 1); 
  return( _flat_411); 
}



/****************************************************************************
 * sacprelude_d::and(...) [ body ]
 ****************************************************************************/
inline
bool sacprelude_d::and( bool a { ,NN } , bool b { ,NN } )
/*
 *  and ::  ---
 */
{ 
  bool _emal_55055__flat_298 { , NN } ; 
  bool _flat_298 { , NN } ; 

  _emal_55055__flat_298 = _alloc_( 1, 0, [:int]); 
  _flat_298 = _fill_( _and_SxS_( b, a), _emal_55055__flat_298); 
  _dec_rc_( a, 1); 
  _dec_rc_( b, 1); 
  return( _flat_298); 
}


/*-----------------------------------------------*/
